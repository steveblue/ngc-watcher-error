/**
 * @fileoverview This file was generated by the Angular template compiler. Do not edit.
 *
 * @suppress {suspiciousCode,uselessCode,missingProperties,missingOverride,checkTypes}
 * tslint:disable
 */ 
import * as i0 from "angular/packages/router/src/directives/router_link";
import * as i1 from "angular/packages/router/src/router";
import * as i2 from "angular/packages/router/src/router_state";
import * as i3 from "@angular/core/src/render/api";
import * as i4 from "@angular/core";
import * as i5 from "@angular/common/src/location/location_strategy";
export function RouterLinkNgSummary() { return [{ summaryKind: 1, type: { reference: i0.RouterLink, diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Router } } }, { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i2.ActivatedRoute } } }, { isAttribute: true, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { value: "tabindex" } }, { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i3.Renderer2 } } }, { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i4.ElementRef } } }], lifecycleHooks: [] }, isComponent: false, selector: ":not(a)[routerLink]", exportAs: null, inputs: { queryParams: "queryParams", fragment: "fragment", queryParamsHandling: "queryParamsHandling", preserveFragment: "preserveFragment", skipLocationChange: "skipLocationChange", replaceUrl: "replaceUrl", routerLink: "routerLink", preserveQueryParams: "preserveQueryParams" }, outputs: {}, hostListeners: { click: "onClick()" }, hostProperties: {}, hostAttributes: {}, providers: [], viewProviders: [], queries: [], guards: {}, viewQueries: [], entryComponents: [], changeDetection: null, template: null, componentViewType: null, rendererType: null, componentFactory: null }]; }
export function RouterLinkWithHrefNgSummary() { return [{ summaryKind: 1, type: { reference: i0.RouterLinkWithHref, diDeps: [{ isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i1.Router } } }, { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i2.ActivatedRoute } } }, { isAttribute: false, isHost: false, isSelf: false, isSkipSelf: false, isOptional: false, token: { identifier: { reference: i5.LocationStrategy } } }], lifecycleHooks: [1, 3] }, isComponent: false, selector: "a[routerLink]", exportAs: null, inputs: { target: "target", queryParams: "queryParams", fragment: "fragment", queryParamsHandling: "queryParamsHandling", preserveFragment: "preserveFragment", skipLocationChange: "skipLocationChange", replaceUrl: "replaceUrl", routerLink: "routerLink", preserveQueryParams: "preserveQueryParams" }, outputs: {}, hostListeners: { click: "onClick($event.button,$event.ctrlKey,$event.metaKey,$event.shiftKey)" }, hostProperties: { "attr.target": "target", href: "href" }, hostAttributes: {}, providers: [], viewProviders: [], queries: [], guards: {}, viewQueries: [], entryComponents: [], changeDetection: null, template: null, componentViewType: null, rendererType: null, componentFactory: null }]; }

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicm91dGVyX2xpbmsubmdzdW1tYXJ5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvcm91dGVyL3NyYy9kaXJlY3RpdmVzL3JvdXRlcl9saW5rLm5nc3VtbWFyeS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgaTAgZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pMC5Db21wb25lbnRGYWN0b3J5O1xuIl19