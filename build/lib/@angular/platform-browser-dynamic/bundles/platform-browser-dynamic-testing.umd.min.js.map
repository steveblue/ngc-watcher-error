{"version":3,"sources":["packages/platform-browser-dynamic/platform-browser-dynamic-testing.umd.js"],"names":["global","factory","exports","module","require","define","amd","npm_package","ng","core","testing","platformBrowserDynamic","platformBrowser","tslib","compiler","this","testing$1","tslib_1","testing$2","DOMTestComponentRenderer","_super","_doc","_this","call","__extends","prototype","insertRootElement","rootElId","rootEl","ɵgetDOM","firstChild","content","createTemplate","oldRoots","querySelectorAll","i","length","remove","appendChild","body","decorators","type","Injectable","ctorParameters","undefined","Inject","args","DOCUMENT","TestComponentRenderer","_nextReferenceId","MetadataOverrider","_references","Map","overrideMetadata","metadataClass","oldMetadata","override","props","_valueProps","obj","Object","keys","forEach","prop","startsWith","push","proto","getPrototypeOf","protoProp","desc","getOwnPropertyDescriptor","set","add","Error","ɵstringify","setMetadata","metadata","removeMetadata","references","removeObjects","Set","_loop_1","removeValue","Array","value","_propHashKey","_loop_2","propValue","filter","has","addMetadata","addValue","concat","propName","JSON","stringify","key","_serializeReference","ref","id","get","COMPILER_PROVIDERS","provide","MockPipeResolver","deps","CompileReflector","PipeResolver","useExisting","MockDirectiveResolver","DirectiveResolver","MockNgModuleResolver","NgModuleResolver","TestingCompilerFactoryImpl","_injector","_compilerFactory","createTestingCompiler","options","compiler$$1","createCompiler","TestingCompilerImpl","injector","_compiler","_directiveResolver","_pipeResolver","_moduleResolver","_overrider","defineProperty","enumerable","configurable","compileModuleSync","moduleType","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","getComponentFactory","component","checkOverrideAllowed","hasAotSummary","overrideModule","ngModule","resolve","setNgModule","NgModule","clearCacheFor","overrideDirective","directive","setDirective","Directive","overrideComponent","Component","overridePipe","pipe","setPipe","Pipe","loadAotSummaries","summaries","clearCache","getComponentFromError","error","ERROR_COMPONENT_TYPE","platformCoreDynamicTesting","createPlatformFactory","ɵplatformCoreDynamic","COMPILER_OPTIONS","useValue","providers","multi","ɵTestingCompilerFactory","useClass","Injector","CompilerFactory","platformBrowserDynamicTesting","ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS","BrowserDynamicTestingModule","BrowserTestingModule","ɵangular_packages_platform_browser_dynamic_testing_testing_a","ɵangular_packages_platform_browser_dynamic_testing_testing_b","ɵDOMTestComponentRenderer","ɵplatformCoreDynamicTesting"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.0.0-rc.1\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/core/testing'), require('@angular/platform-browser-dynamic'), require('@angular/platform-browser/testing'), require('tslib'), require('@angular/platform-browser'), require('@angular/compiler'), require('@angular/compiler/testing')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', '@angular/core', '@angular/core/testing', '@angular/platform-browser-dynamic', '@angular/platform-browser/testing', 'tslib', '@angular/platform-browser', '@angular/compiler', '@angular/compiler/testing'], factory) :\n\t(factory((global.npm_package = {}),global.ng.core,global.ng.core.testing,global.ng.platformBrowserDynamic,global.ng.platformBrowser.testing,global.tslib,global.ng.platformBrowser,global.ng.compiler,global.ng.compiler.testing));\n}(this, (function (exports,core,testing,platformBrowserDynamic,testing$1,tslib_1,platformBrowser,compiler,testing$2) { 'use strict';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DOM based implementation of the TestComponentRenderer.\n */\nvar DOMTestComponentRenderer = /** @class */ (function (_super) {\n    tslib_1.__extends(DOMTestComponentRenderer, _super);\n    function DOMTestComponentRenderer(_doc /** TODO #9100 */) {\n        var _this = _super.call(this) || this;\n        _this._doc = _doc;\n        return _this;\n    }\n    DOMTestComponentRenderer.prototype.insertRootElement = function (rootElId) {\n        var rootEl = platformBrowser.ɵgetDOM().firstChild(platformBrowser.ɵgetDOM().content(platformBrowser.ɵgetDOM().createTemplate(\"<div id=\\\"\" + rootElId + \"\\\"></div>\")));\n        // TODO(juliemr): can/should this be optional?\n        var oldRoots = platformBrowser.ɵgetDOM().querySelectorAll(this._doc, '[id^=root]');\n        for (var i = 0; i < oldRoots.length; i++) {\n            platformBrowser.ɵgetDOM().remove(oldRoots[i]);\n        }\n        platformBrowser.ɵgetDOM().appendChild(this._doc.body, rootEl);\n    };\n    DOMTestComponentRenderer.decorators = [\n        { type: core.Injectable }\n    ];\n    /** @nocollapse */\n    DOMTestComponentRenderer.ctorParameters = function () { return [\n        { type: undefined, decorators: [{ type: core.Inject, args: [platformBrowser.DOCUMENT,] },] },\n    ]; };\n    return DOMTestComponentRenderer;\n}(testing.TestComponentRenderer));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _nextReferenceId = 0;\nvar MetadataOverrider = /** @class */ (function () {\n    function MetadataOverrider() {\n        this._references = new Map();\n    }\n    /**\n     * Creates a new instance for the given metadata class\n     * based on an old instance and overrides.\n     */\n    /**\n       * Creates a new instance for the given metadata class\n       * based on an old instance and overrides.\n       */\n    MetadataOverrider.prototype.overrideMetadata = /**\n       * Creates a new instance for the given metadata class\n       * based on an old instance and overrides.\n       */\n    function (metadataClass, oldMetadata, override) {\n        var props = {};\n        if (oldMetadata) {\n            _valueProps(oldMetadata).forEach(function (prop) { return props[prop] = oldMetadata[prop]; });\n        }\n        if (override.set) {\n            if (override.remove || override.add) {\n                throw new Error(\"Cannot set and add/remove \" + core.ɵstringify(metadataClass) + \" at the same time!\");\n            }\n            setMetadata(props, override.set);\n        }\n        if (override.remove) {\n            removeMetadata(props, override.remove, this._references);\n        }\n        if (override.add) {\n            addMetadata(props, override.add);\n        }\n        return new metadataClass(props);\n    };\n    return MetadataOverrider;\n}());\nfunction removeMetadata(metadata, remove, references) {\n    var removeObjects = new Set();\n    var _loop_1 = function (prop) {\n        var removeValue = remove[prop];\n        if (removeValue instanceof Array) {\n            removeValue.forEach(function (value) { removeObjects.add(_propHashKey(prop, value, references)); });\n        }\n        else {\n            removeObjects.add(_propHashKey(prop, removeValue, references));\n        }\n    };\n    for (var prop in remove) {\n        _loop_1(prop);\n    }\n    var _loop_2 = function (prop) {\n        var propValue = metadata[prop];\n        if (propValue instanceof Array) {\n            metadata[prop] = propValue.filter(function (value) { return !removeObjects.has(_propHashKey(prop, value, references)); });\n        }\n        else {\n            if (removeObjects.has(_propHashKey(prop, propValue, references))) {\n                metadata[prop] = undefined;\n            }\n        }\n    };\n    for (var prop in metadata) {\n        _loop_2(prop);\n    }\n}\nfunction addMetadata(metadata, add) {\n    for (var prop in add) {\n        var addValue = add[prop];\n        var propValue = metadata[prop];\n        if (propValue != null && propValue instanceof Array) {\n            metadata[prop] = propValue.concat(addValue);\n        }\n        else {\n            metadata[prop] = addValue;\n        }\n    }\n}\nfunction setMetadata(metadata, set) {\n    for (var prop in set) {\n        metadata[prop] = set[prop];\n    }\n}\nfunction _propHashKey(propName, propValue, references) {\n    var replacer = function (key, value) {\n        if (typeof value === 'function') {\n            value = _serializeReference(value, references);\n        }\n        return value;\n    };\n    return propName + \":\" + JSON.stringify(propValue, replacer);\n}\nfunction _serializeReference(ref, references) {\n    var id = references.get(ref);\n    if (!id) {\n        id = \"\" + core.ɵstringify(ref) + _nextReferenceId++;\n        references.set(ref, id);\n    }\n    return id;\n}\nfunction _valueProps(obj) {\n    var props = [];\n    // regular public props\n    Object.keys(obj).forEach(function (prop) {\n        if (!prop.startsWith('_')) {\n            props.push(prop);\n        }\n    });\n    // getters\n    var proto = obj;\n    while (proto = Object.getPrototypeOf(proto)) {\n        Object.keys(proto).forEach(function (protoProp) {\n            var desc = Object.getOwnPropertyDescriptor(proto, protoProp);\n            if (!protoProp.startsWith('_') && desc && 'get' in desc) {\n                props.push(protoProp);\n            }\n        });\n    }\n    return props;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar COMPILER_PROVIDERS = [\n    { provide: testing$2.MockPipeResolver, deps: [compiler.CompileReflector] },\n    { provide: compiler.PipeResolver, useExisting: testing$2.MockPipeResolver },\n    { provide: testing$2.MockDirectiveResolver, deps: [compiler.CompileReflector] },\n    { provide: compiler.DirectiveResolver, useExisting: testing$2.MockDirectiveResolver },\n    { provide: testing$2.MockNgModuleResolver, deps: [compiler.CompileReflector] },\n    { provide: compiler.NgModuleResolver, useExisting: testing$2.MockNgModuleResolver },\n];\nvar TestingCompilerFactoryImpl = /** @class */ (function () {\n    function TestingCompilerFactoryImpl(_injector, _compilerFactory) {\n        this._injector = _injector;\n        this._compilerFactory = _compilerFactory;\n    }\n    TestingCompilerFactoryImpl.prototype.createTestingCompiler = function (options) {\n        var compiler$$1 = this._compilerFactory.createCompiler(options);\n        return new TestingCompilerImpl(compiler$$1, compiler$$1.injector.get(testing$2.MockDirectiveResolver), compiler$$1.injector.get(testing$2.MockPipeResolver), compiler$$1.injector.get(testing$2.MockNgModuleResolver));\n    };\n    return TestingCompilerFactoryImpl;\n}());\nvar TestingCompilerImpl = /** @class */ (function () {\n    function TestingCompilerImpl(_compiler, _directiveResolver, _pipeResolver, _moduleResolver) {\n        this._compiler = _compiler;\n        this._directiveResolver = _directiveResolver;\n        this._pipeResolver = _pipeResolver;\n        this._moduleResolver = _moduleResolver;\n        this._overrider = new MetadataOverrider();\n    }\n    Object.defineProperty(TestingCompilerImpl.prototype, \"injector\", {\n        get: function () { return this._compiler.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    TestingCompilerImpl.prototype.compileModuleSync = function (moduleType) {\n        return this._compiler.compileModuleSync(moduleType);\n    };\n    TestingCompilerImpl.prototype.compileModuleAsync = function (moduleType) {\n        return this._compiler.compileModuleAsync(moduleType);\n    };\n    TestingCompilerImpl.prototype.compileModuleAndAllComponentsSync = function (moduleType) {\n        return this._compiler.compileModuleAndAllComponentsSync(moduleType);\n    };\n    TestingCompilerImpl.prototype.compileModuleAndAllComponentsAsync = function (moduleType) {\n        return this._compiler.compileModuleAndAllComponentsAsync(moduleType);\n    };\n    TestingCompilerImpl.prototype.getComponentFactory = function (component) {\n        return this._compiler.getComponentFactory(component);\n    };\n    TestingCompilerImpl.prototype.checkOverrideAllowed = function (type) {\n        if (this._compiler.hasAotSummary(type)) {\n            throw new Error(core.ɵstringify(type) + \" was AOT compiled, so its metadata cannot be changed.\");\n        }\n    };\n    TestingCompilerImpl.prototype.overrideModule = function (ngModule, override) {\n        this.checkOverrideAllowed(ngModule);\n        var oldMetadata = this._moduleResolver.resolve(ngModule, false);\n        this._moduleResolver.setNgModule(ngModule, this._overrider.overrideMetadata(core.NgModule, oldMetadata, override));\n        this.clearCacheFor(ngModule);\n    };\n    TestingCompilerImpl.prototype.overrideDirective = function (directive, override) {\n        this.checkOverrideAllowed(directive);\n        var oldMetadata = this._directiveResolver.resolve(directive, false);\n        this._directiveResolver.setDirective(directive, this._overrider.overrideMetadata(core.Directive, (oldMetadata), override));\n        this.clearCacheFor(directive);\n    };\n    TestingCompilerImpl.prototype.overrideComponent = function (component, override) {\n        this.checkOverrideAllowed(component);\n        var oldMetadata = this._directiveResolver.resolve(component, false);\n        this._directiveResolver.setDirective(component, this._overrider.overrideMetadata(core.Component, (oldMetadata), override));\n        this.clearCacheFor(component);\n    };\n    TestingCompilerImpl.prototype.overridePipe = function (pipe, override) {\n        this.checkOverrideAllowed(pipe);\n        var oldMetadata = this._pipeResolver.resolve(pipe, false);\n        this._pipeResolver.setPipe(pipe, this._overrider.overrideMetadata(core.Pipe, oldMetadata, override));\n        this.clearCacheFor(pipe);\n    };\n    TestingCompilerImpl.prototype.loadAotSummaries = function (summaries) { this._compiler.loadAotSummaries(summaries); };\n    TestingCompilerImpl.prototype.clearCache = function () { this._compiler.clearCache(); };\n    TestingCompilerImpl.prototype.clearCacheFor = function (type) { this._compiler.clearCacheFor(type); };\n    TestingCompilerImpl.prototype.getComponentFromError = function (error) { return error[compiler.ERROR_COMPONENT_TYPE] || null; };\n    return TestingCompilerImpl;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Platform for dynamic tests\n *\n * @experimental\n */\nvar platformCoreDynamicTesting = core.createPlatformFactory(platformBrowserDynamic.ɵplatformCoreDynamic, 'coreDynamicTesting', [\n    { provide: core.COMPILER_OPTIONS, useValue: { providers: COMPILER_PROVIDERS }, multi: true }, {\n        provide: testing.ɵTestingCompilerFactory,\n        useClass: TestingCompilerFactoryImpl,\n        deps: [core.Injector, core.CompilerFactory]\n    }\n]);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @stable\n */\nvar platformBrowserDynamicTesting = core.createPlatformFactory(platformCoreDynamicTesting, 'browserDynamicTesting', platformBrowserDynamic.ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n/**\n * NgModule for testing.\n *\n * @stable\n */\nvar BrowserDynamicTestingModule = /** @class */ (function () {\n    function BrowserDynamicTestingModule() {\n    }\n    BrowserDynamicTestingModule.decorators = [\n        { type: core.NgModule, args: [{\n                    exports: [testing$1.BrowserTestingModule],\n                    providers: [\n                        { provide: testing.TestComponentRenderer, useClass: DOMTestComponentRenderer },\n                    ]\n                },] }\n    ];\n    /** @nocollapse */\n    BrowserDynamicTestingModule.ctorParameters = function () { return []; };\n    return BrowserDynamicTestingModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexports.ɵangular_packages_platform_browser_dynamic_testing_testing_a = COMPILER_PROVIDERS;\nexports.ɵangular_packages_platform_browser_dynamic_testing_testing_b = TestingCompilerFactoryImpl;\nexports.platformBrowserDynamicTesting = platformBrowserDynamicTesting;\nexports.BrowserDynamicTestingModule = BrowserDynamicTestingModule;\nexports.ɵDOMTestComponentRenderer = DOMTestComponentRenderer;\nexports.ɵplatformCoreDynamicTesting = platformCoreDynamicTesting;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=platform-browser-dynamic-testing.umd.js.map\n"]}