{"version":3,"file":"common-http-testing.umd.js","sources":["../../../../../../../../../execroot/angular/bazel-out/darwin-fastbuild/bin/packages/common/http/testing/testing.esm5/packages/common/http/testing/src/api.js","../../../../../../../../../execroot/angular/bazel-out/darwin-fastbuild/bin/packages/common/http/testing/testing.esm5/packages/common/http/testing/src/request.js","../../../../../../../../../execroot/angular/bazel-out/darwin-fastbuild/bin/packages/common/http/testing/testing.esm5/packages/common/http/testing/src/backend.js","../../../../../../../../../execroot/angular/bazel-out/darwin-fastbuild/bin/packages/common/http/testing/testing.esm5/packages/common/http/testing/src/module.js","../../../../../../../../../execroot/angular/bazel-out/darwin-fastbuild/bin/packages/common/http/testing/testing.esm5/packages/common/http/testing/public_api.js","../../../../../../../../../execroot/angular/bazel-out/darwin-fastbuild/bin/packages/common/http/testing/testing.esm5/packages/common/http/testing/index.js","../../../../../../../../../execroot/angular/bazel-out/darwin-fastbuild/bin/packages/common/http/testing/testing.esm5/packages/common/http/testing/testing.js"],"sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Controller to be injected into tests, that allows for mocking and flushing\n * of requests.\n *\n * @stable\n */\nvar /**\n * Controller to be injected into tests, that allows for mocking and flushing\n * of requests.\n *\n * @stable\n */\nHttpTestingController = /** @class */ (function () {\n    function HttpTestingController() {\n    }\n    return HttpTestingController;\n}());\n/**\n * Controller to be injected into tests, that allows for mocking and flushing\n * of requests.\n *\n * @stable\n */\nexport { HttpTestingController };\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXBpLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvY29tbW9uL2h0dHAvdGVzdGluZy9zcmMvYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7QUE0QkE7Ozs7OztBQUFBOzs7Z0NBNUJBO0lBb0hDLENBQUE7Ozs7Ozs7QUF4RkQsaUNBd0ZDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5pbXBvcnQge0h0dHBSZXF1ZXN0fSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5cbmltcG9ydCB7VGVzdFJlcXVlc3R9IGZyb20gJy4vcmVxdWVzdCc7XG5cbi8qKlxuICogRGVmaW5lcyBhIG1hdGNoZXIgZm9yIHJlcXVlc3RzIGJhc2VkIG9uIFVSTCwgbWV0aG9kLCBvciBib3RoLlxuICpcbiAqIEBzdGFibGVcbiAqL1xuZXhwb3J0IGludGVyZmFjZSBSZXF1ZXN0TWF0Y2gge1xuICBtZXRob2Q/OiBzdHJpbmc7XG4gIHVybD86IHN0cmluZztcbn1cblxuLyoqXG4gKiBDb250cm9sbGVyIHRvIGJlIGluamVjdGVkIGludG8gdGVzdHMsIHRoYXQgYWxsb3dzIGZvciBtb2NraW5nIGFuZCBmbHVzaGluZ1xuICogb2YgcmVxdWVzdHMuXG4gKlxuICogQHN0YWJsZVxuICovXG5leHBvcnQgYWJzdHJhY3QgY2xhc3MgSHR0cFRlc3RpbmdDb250cm9sbGVyIHtcbiAgLyoqXG4gICAqIFNlYXJjaCBmb3IgcmVxdWVzdHMgdGhhdCBtYXRjaCB0aGUgZ2l2ZW4gcGFyYW1ldGVyLCB3aXRob3V0IGFueSBleHBlY3RhdGlvbnMuXG4gICAqL1xuICBhYnN0cmFjdCBtYXRjaChtYXRjaDogc3RyaW5nfFJlcXVlc3RNYXRjaHwoKHJlcTogSHR0cFJlcXVlc3Q8YW55PikgPT4gYm9vbGVhbikpOiBUZXN0UmVxdWVzdFtdO1xuXG4gIC8qKlxuICAgKiBFeHBlY3QgdGhhdCBhIHNpbmdsZSByZXF1ZXN0IGhhcyBiZWVuIG1hZGUgd2hpY2ggbWF0Y2hlcyB0aGUgZ2l2ZW4gVVJMLCBhbmQgcmV0dXJuIGl0c1xuICAgKiBtb2NrLlxuICAgKlxuICAgKiBJZiBubyBzdWNoIHJlcXVlc3QgaGFzIGJlZW4gbWFkZSwgb3IgbW9yZSB0aGFuIG9uZSBzdWNoIHJlcXVlc3QgaGFzIGJlZW4gbWFkZSwgZmFpbCB3aXRoIGFuXG4gICAqIGVycm9yIG1lc3NhZ2UgaW5jbHVkaW5nIHRoZSBnaXZlbiByZXF1ZXN0IGRlc2NyaXB0aW9uLCBpZiBhbnkuXG4gICAqL1xuICBhYnN0cmFjdCBleHBlY3RPbmUodXJsOiBzdHJpbmcsIGRlc2NyaXB0aW9uPzogc3RyaW5nKTogVGVzdFJlcXVlc3Q7XG5cbiAgLyoqXG4gICAqIEV4cGVjdCB0aGF0IGEgc2luZ2xlIHJlcXVlc3QgaGFzIGJlZW4gbWFkZSB3aGljaCBtYXRjaGVzIHRoZSBnaXZlbiBwYXJhbWV0ZXJzLCBhbmQgcmV0dXJuXG4gICAqIGl0cyBtb2NrLlxuICAgKlxuICAgKiBJZiBubyBzdWNoIHJlcXVlc3QgaGFzIGJlZW4gbWFkZSwgb3IgbW9yZSB0aGFuIG9uZSBzdWNoIHJlcXVlc3QgaGFzIGJlZW4gbWFkZSwgZmFpbCB3aXRoIGFuXG4gICAqIGVycm9yIG1lc3NhZ2UgaW5jbHVkaW5nIHRoZSBnaXZlbiByZXF1ZXN0IGRlc2NyaXB0aW9uLCBpZiBhbnkuXG4gICAqL1xuICBhYnN0cmFjdCBleHBlY3RPbmUocGFyYW1zOiBSZXF1ZXN0TWF0Y2gsIGRlc2NyaXB0aW9uPzogc3RyaW5nKTogVGVzdFJlcXVlc3Q7XG5cbiAgLyoqXG4gICAqIEV4cGVjdCB0aGF0IGEgc2luZ2xlIHJlcXVlc3QgaGFzIGJlZW4gbWFkZSB3aGljaCBtYXRjaGVzIHRoZSBnaXZlbiBwcmVkaWNhdGUgZnVuY3Rpb24sIGFuZFxuICAgKiByZXR1cm4gaXRzIG1vY2suXG4gICAqXG4gICAqIElmIG5vIHN1Y2ggcmVxdWVzdCBoYXMgYmVlbiBtYWRlLCBvciBtb3JlIHRoYW4gb25lIHN1Y2ggcmVxdWVzdCBoYXMgYmVlbiBtYWRlLCBmYWlsIHdpdGggYW5cbiAgICogZXJyb3IgbWVzc2FnZSBpbmNsdWRpbmcgdGhlIGdpdmVuIHJlcXVlc3QgZGVzY3JpcHRpb24sIGlmIGFueS5cbiAgICovXG4gIGFic3RyYWN0IGV4cGVjdE9uZShtYXRjaEZuOiAoKHJlcTogSHR0cFJlcXVlc3Q8YW55PikgPT4gYm9vbGVhbiksIGRlc2NyaXB0aW9uPzogc3RyaW5nKTpcbiAgICAgIFRlc3RSZXF1ZXN0O1xuXG4gIC8qKlxuICAgKiBFeHBlY3QgdGhhdCBhIHNpbmdsZSByZXF1ZXN0IGhhcyBiZWVuIG1hZGUgd2hpY2ggbWF0Y2hlcyB0aGUgZ2l2ZW4gY29uZGl0aW9uLCBhbmQgcmV0dXJuXG4gICAqIGl0cyBtb2NrLlxuICAgKlxuICAgKiBJZiBubyBzdWNoIHJlcXVlc3QgaGFzIGJlZW4gbWFkZSwgb3IgbW9yZSB0aGFuIG9uZSBzdWNoIHJlcXVlc3QgaGFzIGJlZW4gbWFkZSwgZmFpbCB3aXRoIGFuXG4gICAqIGVycm9yIG1lc3NhZ2UgaW5jbHVkaW5nIHRoZSBnaXZlbiByZXF1ZXN0IGRlc2NyaXB0aW9uLCBpZiBhbnkuXG4gICAqL1xuICBhYnN0cmFjdCBleHBlY3RPbmUoXG4gICAgICBtYXRjaDogc3RyaW5nfFJlcXVlc3RNYXRjaHwoKHJlcTogSHR0cFJlcXVlc3Q8YW55PikgPT4gYm9vbGVhbiksXG4gICAgICBkZXNjcmlwdGlvbj86IHN0cmluZyk6IFRlc3RSZXF1ZXN0O1xuXG4gIC8qKlxuICAgKiBFeHBlY3QgdGhhdCBubyByZXF1ZXN0cyBoYXZlIGJlZW4gbWFkZSB3aGljaCBtYXRjaCB0aGUgZ2l2ZW4gVVJMLlxuICAgKlxuICAgKiBJZiBhIG1hdGNoaW5nIHJlcXVlc3QgaGFzIGJlZW4gbWFkZSwgZmFpbCB3aXRoIGFuIGVycm9yIG1lc3NhZ2UgaW5jbHVkaW5nIHRoZSBnaXZlbiByZXF1ZXN0XG4gICAqIGRlc2NyaXB0aW9uLCBpZiBhbnkuXG4gICAqL1xuICBhYnN0cmFjdCBleHBlY3ROb25lKHVybDogc3RyaW5nLCBkZXNjcmlwdGlvbj86IHN0cmluZyk6IHZvaWQ7XG5cbiAgLyoqXG4gICAqIEV4cGVjdCB0aGF0IG5vIHJlcXVlc3RzIGhhdmUgYmVlbiBtYWRlIHdoaWNoIG1hdGNoIHRoZSBnaXZlbiBwYXJhbWV0ZXJzLlxuICAgKlxuICAgKiBJZiBhIG1hdGNoaW5nIHJlcXVlc3QgaGFzIGJlZW4gbWFkZSwgZmFpbCB3aXRoIGFuIGVycm9yIG1lc3NhZ2UgaW5jbHVkaW5nIHRoZSBnaXZlbiByZXF1ZXN0XG4gICAqIGRlc2NyaXB0aW9uLCBpZiBhbnkuXG4gICAqL1xuICBhYnN0cmFjdCBleHBlY3ROb25lKHBhcmFtczogUmVxdWVzdE1hdGNoLCBkZXNjcmlwdGlvbj86IHN0cmluZyk6IHZvaWQ7XG5cbiAgLyoqXG4gICAqIEV4cGVjdCB0aGF0IG5vIHJlcXVlc3RzIGhhdmUgYmVlbiBtYWRlIHdoaWNoIG1hdGNoIHRoZSBnaXZlbiBwcmVkaWNhdGUgZnVuY3Rpb24uXG4gICAqXG4gICAqIElmIGEgbWF0Y2hpbmcgcmVxdWVzdCBoYXMgYmVlbiBtYWRlLCBmYWlsIHdpdGggYW4gZXJyb3IgbWVzc2FnZSBpbmNsdWRpbmcgdGhlIGdpdmVuIHJlcXVlc3RcbiAgICogZGVzY3JpcHRpb24sIGlmIGFueS5cbiAgICovXG4gIGFic3RyYWN0IGV4cGVjdE5vbmUobWF0Y2hGbjogKChyZXE6IEh0dHBSZXF1ZXN0PGFueT4pID0+IGJvb2xlYW4pLCBkZXNjcmlwdGlvbj86IHN0cmluZyk6IHZvaWQ7XG5cbiAgLyoqXG4gICAqIEV4cGVjdCB0aGF0IG5vIHJlcXVlc3RzIGhhdmUgYmVlbiBtYWRlIHdoaWNoIG1hdGNoIHRoZSBnaXZlbiBjb25kaXRpb24uXG4gICAqXG4gICAqIElmIGEgbWF0Y2hpbmcgcmVxdWVzdCBoYXMgYmVlbiBtYWRlLCBmYWlsIHdpdGggYW4gZXJyb3IgbWVzc2FnZSBpbmNsdWRpbmcgdGhlIGdpdmVuIHJlcXVlc3RcbiAgICogZGVzY3JpcHRpb24sIGlmIGFueS5cbiAgICovXG4gIGFic3RyYWN0IGV4cGVjdE5vbmUoXG4gICAgICBtYXRjaDogc3RyaW5nfFJlcXVlc3RNYXRjaHwoKHJlcTogSHR0cFJlcXVlc3Q8YW55PikgPT4gYm9vbGVhbiksIGRlc2NyaXB0aW9uPzogc3RyaW5nKTogdm9pZDtcblxuICAvKipcbiAgICogVmVyaWZ5IHRoYXQgbm8gdW5tYXRjaGVkIHJlcXVlc3RzIGFyZSBvdXRzdGFuZGluZy5cbiAgICpcbiAgICogSWYgYW55IHJlcXVlc3RzIGFyZSBvdXRzdGFuZGluZywgZmFpbCB3aXRoIGFuIGVycm9yIG1lc3NhZ2UgaW5kaWNhdGluZyB3aGljaCByZXF1ZXN0cyB3ZXJlIG5vdFxuICAgKiBoYW5kbGVkLlxuICAgKlxuICAgKiBJZiBgaWdub3JlQ2FuY2VsbGVkYCBpcyBub3Qgc2V0ICh0aGUgZGVmYXVsdCksIGB2ZXJpZnkoKWAgd2lsbCBhbHNvIGZhaWwgaWYgY2FuY2VsbGVkIHJlcXVlc3RzXG4gICAqIHdlcmUgbm90IGV4cGxpY2l0bHkgbWF0Y2hlZC5cbiAgICovXG4gIGFic3RyYWN0IHZlcmlmeShvcHRzPzoge2lnbm9yZUNhbmNlbGxlZD86IGJvb2xlYW59KTogdm9pZDtcbn1cbiJdfQ==","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { HttpErrorResponse, HttpHeaders, HttpResponse } from '@angular/common/http';\n/**\n * A mock requests that was received and is ready to be answered.\n *\n * This interface allows access to the underlying `HttpRequest`, and allows\n * responding with `HttpEvent`s or `HttpErrorResponse`s.\n *\n * @stable\n */\nvar /**\n * A mock requests that was received and is ready to be answered.\n *\n * This interface allows access to the underlying `HttpRequest`, and allows\n * responding with `HttpEvent`s or `HttpErrorResponse`s.\n *\n * @stable\n */\nTestRequest = /** @class */ (function () {\n    function TestRequest(request, observer) {\n        this.request = request;\n        this.observer = observer;\n        /**\n           * @internal set by `HttpClientTestingBackend`\n           */\n        this._cancelled = false;\n    }\n    Object.defineProperty(TestRequest.prototype, \"cancelled\", {\n        /**\n         * Whether the request was cancelled after it was sent.\n         */\n        get: /**\n           * Whether the request was cancelled after it was sent.\n           */\n        function () { return this._cancelled; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Resolve the request by returning a body plus additional HTTP information (such as response\n     * headers) if provided.\n     *\n     * Both successful and unsuccessful responses can be delivered via `flush()`.\n     */\n    /**\n       * Resolve the request by returning a body plus additional HTTP information (such as response\n       * headers) if provided.\n       *\n       * Both successful and unsuccessful responses can be delivered via `flush()`.\n       */\n    TestRequest.prototype.flush = /**\n       * Resolve the request by returning a body plus additional HTTP information (such as response\n       * headers) if provided.\n       *\n       * Both successful and unsuccessful responses can be delivered via `flush()`.\n       */\n    function (body, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (this.cancelled) {\n            throw new Error(\"Cannot flush a cancelled request.\");\n        }\n        var url = this.request.urlWithParams;\n        var headers = (opts.headers instanceof HttpHeaders) ? opts.headers : new HttpHeaders(opts.headers);\n        body = _maybeConvertBody(this.request.responseType, body);\n        var statusText = opts.statusText;\n        var status = opts.status !== undefined ? opts.status : 200;\n        if (opts.status === undefined) {\n            if (body === null) {\n                status = 204;\n                statusText = statusText || 'No Content';\n            }\n            else {\n                statusText = statusText || 'OK';\n            }\n        }\n        if (statusText === undefined) {\n            throw new Error('statusText is required when setting a custom status.');\n        }\n        if (status >= 200 && status < 300) {\n            this.observer.next(new HttpResponse({ body: body, headers: headers, status: status, statusText: statusText, url: url }));\n            this.observer.complete();\n        }\n        else {\n            this.observer.error(new HttpErrorResponse({ error: body, headers: headers, status: status, statusText: statusText, url: url }));\n        }\n    };\n    /**\n     * Resolve the request by returning an `ErrorEvent` (e.g. simulating a network failure).\n     */\n    /**\n       * Resolve the request by returning an `ErrorEvent` (e.g. simulating a network failure).\n       */\n    TestRequest.prototype.error = /**\n       * Resolve the request by returning an `ErrorEvent` (e.g. simulating a network failure).\n       */\n    function (error, opts) {\n        if (opts === void 0) { opts = {}; }\n        if (this.cancelled) {\n            throw new Error(\"Cannot return an error for a cancelled request.\");\n        }\n        if (opts.status && opts.status >= 200 && opts.status < 300) {\n            throw new Error(\"error() called with a successful status.\");\n        }\n        var headers = (opts.headers instanceof HttpHeaders) ? opts.headers : new HttpHeaders(opts.headers);\n        this.observer.error(new HttpErrorResponse({\n            error: error,\n            headers: headers,\n            status: opts.status || 0,\n            statusText: opts.statusText || '',\n            url: this.request.urlWithParams,\n        }));\n    };\n    /**\n     * Deliver an arbitrary `HttpEvent` (such as a progress event) on the response stream for this\n     * request.\n     */\n    /**\n       * Deliver an arbitrary `HttpEvent` (such as a progress event) on the response stream for this\n       * request.\n       */\n    TestRequest.prototype.event = /**\n       * Deliver an arbitrary `HttpEvent` (such as a progress event) on the response stream for this\n       * request.\n       */\n    function (event) {\n        if (this.cancelled) {\n            throw new Error(\"Cannot send events to a cancelled request.\");\n        }\n        this.observer.next(event);\n    };\n    return TestRequest;\n}());\n/**\n * A mock requests that was received and is ready to be answered.\n *\n * This interface allows access to the underlying `HttpRequest`, and allows\n * responding with `HttpEvent`s or `HttpErrorResponse`s.\n *\n * @stable\n */\nexport { TestRequest };\n/**\n * Helper function to convert a response body to an ArrayBuffer.\n */\nfunction _toArrayBufferBody(body) {\n    if (typeof ArrayBuffer === 'undefined') {\n        throw new Error('ArrayBuffer responses are not supported on this platform.');\n    }\n    if (body instanceof ArrayBuffer) {\n        return body;\n    }\n    throw new Error('Automatic conversion to ArrayBuffer is not supported for response type.');\n}\n/**\n * Helper function to convert a response body to a Blob.\n */\nfunction _toBlob(body) {\n    if (typeof Blob === 'undefined') {\n        throw new Error('Blob responses are not supported on this platform.');\n    }\n    if (body instanceof Blob) {\n        return body;\n    }\n    if (ArrayBuffer && body instanceof ArrayBuffer) {\n        return new Blob([body]);\n    }\n    throw new Error('Automatic conversion to Blob is not supported for response type.');\n}\n/**\n * Helper function to convert a response body to JSON data.\n */\nfunction _toJsonBody(body, format) {\n    if (format === void 0) { format = 'JSON'; }\n    if (typeof ArrayBuffer !== 'undefined' && body instanceof ArrayBuffer) {\n        throw new Error(\"Automatic conversion to \" + format + \" is not supported for ArrayBuffers.\");\n    }\n    if (typeof Blob !== 'undefined' && body instanceof Blob) {\n        throw new Error(\"Automatic conversion to \" + format + \" is not supported for Blobs.\");\n    }\n    if (typeof body === 'string' || typeof body === 'number' || typeof body === 'object' ||\n        Array.isArray(body)) {\n        return body;\n    }\n    throw new Error(\"Automatic conversion to \" + format + \" is not supported for response type.\");\n}\n/**\n * Helper function to convert a response body to a string.\n */\nfunction _toTextBody(body) {\n    if (typeof body === 'string') {\n        return body;\n    }\n    if (typeof ArrayBuffer !== 'undefined' && body instanceof ArrayBuffer) {\n        throw new Error('Automatic conversion to text is not supported for ArrayBuffers.');\n    }\n    if (typeof Blob !== 'undefined' && body instanceof Blob) {\n        throw new Error('Automatic conversion to text is not supported for Blobs.');\n    }\n    return JSON.stringify(_toJsonBody(body, 'text'));\n}\n/**\n * Convert a response body to the requested type.\n */\nfunction _maybeConvertBody(responseType, body) {\n    if (body === null) {\n        return null;\n    }\n    switch (responseType) {\n        case 'arraybuffer':\n            return _toArrayBufferBody(body);\n        case 'blob':\n            return _toBlob(body);\n        case 'json':\n            return _toJsonBody(body);\n        case 'text':\n            return _toTextBody(body);\n        default:\n            throw new Error(\"Unsupported responseType: \" + responseType);\n    }\n}\n\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { HttpEventType } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { TestRequest } from './request';\n/**\n * A testing backend for `HttpClient` which both acts as an `HttpBackend`\n * and as the `HttpTestingController`.\n *\n * `HttpClientTestingBackend` works by keeping a list of all open requests.\n * As requests come in, they're added to the list. Users can assert that specific\n * requests were made and then flush them. In the end, a verify() method asserts\n * that no unexpected requests were made.\n *\n * @stable\n */\nvar HttpClientTestingBackend = /** @class */ (function () {\n    function HttpClientTestingBackend() {\n        /**\n           * List of pending requests which have not yet been expected.\n           */\n        this.open = [];\n    }\n    /**\n     * Handle an incoming request by queueing it in the list of open requests.\n     */\n    /**\n       * Handle an incoming request by queueing it in the list of open requests.\n       */\n    HttpClientTestingBackend.prototype.handle = /**\n       * Handle an incoming request by queueing it in the list of open requests.\n       */\n    function (req) {\n        var _this = this;\n        return new Observable(function (observer) {\n            var testReq = new TestRequest(req, observer);\n            _this.open.push(testReq);\n            observer.next({ type: HttpEventType.Sent });\n            return function () { testReq._cancelled = true; };\n        });\n    };\n    /**\n     * Helper function to search for requests in the list of open requests.\n     */\n    /**\n       * Helper function to search for requests in the list of open requests.\n       */\n    HttpClientTestingBackend.prototype._match = /**\n       * Helper function to search for requests in the list of open requests.\n       */\n    function (match) {\n        if (typeof match === 'string') {\n            return this.open.filter(function (testReq) { return testReq.request.urlWithParams === match; });\n        }\n        else if (typeof match === 'function') {\n            return this.open.filter(function (testReq) { return match(testReq.request); });\n        }\n        else {\n            return this.open.filter(function (testReq) {\n                return (!match.method || testReq.request.method === match.method.toUpperCase()) &&\n                    (!match.url || testReq.request.urlWithParams === match.url);\n            });\n        }\n    };\n    /**\n     * Search for requests in the list of open requests, and return all that match\n     * without asserting anything about the number of matches.\n     */\n    /**\n       * Search for requests in the list of open requests, and return all that match\n       * without asserting anything about the number of matches.\n       */\n    HttpClientTestingBackend.prototype.match = /**\n       * Search for requests in the list of open requests, and return all that match\n       * without asserting anything about the number of matches.\n       */\n    function (match) {\n        var _this = this;\n        var results = this._match(match);\n        results.forEach(function (result) {\n            var index = _this.open.indexOf(result);\n            if (index !== -1) {\n                _this.open.splice(index, 1);\n            }\n        });\n        return results;\n    };\n    /**\n     * Expect that a single outstanding request matches the given matcher, and return\n     * it.\n     *\n     * Requests returned through this API will no longer be in the list of open requests,\n     * and thus will not match twice.\n     */\n    /**\n       * Expect that a single outstanding request matches the given matcher, and return\n       * it.\n       *\n       * Requests returned through this API will no longer be in the list of open requests,\n       * and thus will not match twice.\n       */\n    HttpClientTestingBackend.prototype.expectOne = /**\n       * Expect that a single outstanding request matches the given matcher, and return\n       * it.\n       *\n       * Requests returned through this API will no longer be in the list of open requests,\n       * and thus will not match twice.\n       */\n    function (match, description) {\n        description = description || this.descriptionFromMatcher(match);\n        var matches = this.match(match);\n        if (matches.length > 1) {\n            throw new Error(\"Expected one matching request for criteria \\\"\" + description + \"\\\", found \" + matches.length + \" requests.\");\n        }\n        if (matches.length === 0) {\n            throw new Error(\"Expected one matching request for criteria \\\"\" + description + \"\\\", found none.\");\n        }\n        return matches[0];\n    };\n    /**\n     * Expect that no outstanding requests match the given matcher, and throw an error\n     * if any do.\n     */\n    /**\n       * Expect that no outstanding requests match the given matcher, and throw an error\n       * if any do.\n       */\n    HttpClientTestingBackend.prototype.expectNone = /**\n       * Expect that no outstanding requests match the given matcher, and throw an error\n       * if any do.\n       */\n    function (match, description) {\n        description = description || this.descriptionFromMatcher(match);\n        var matches = this.match(match);\n        if (matches.length > 0) {\n            throw new Error(\"Expected zero matching requests for criteria \\\"\" + description + \"\\\", found \" + matches.length + \".\");\n        }\n    };\n    /**\n     * Validate that there are no outstanding requests.\n     */\n    /**\n       * Validate that there are no outstanding requests.\n       */\n    HttpClientTestingBackend.prototype.verify = /**\n       * Validate that there are no outstanding requests.\n       */\n    function (opts) {\n        if (opts === void 0) { opts = {}; }\n        var open = this.open;\n        // It's possible that some requests may be cancelled, and this is expected.\n        // The user can ask to ignore open requests which have been cancelled.\n        if (opts.ignoreCancelled) {\n            open = open.filter(function (testReq) { return !testReq.cancelled; });\n        }\n        if (open.length > 0) {\n            // Show the methods and URLs of open requests in the error, for convenience.\n            var requests = open.map(function (testReq) {\n                var url = testReq.request.urlWithParams.split('?')[0];\n                var method = testReq.request.method;\n                return method + \" \" + url;\n            })\n                .join(', ');\n            throw new Error(\"Expected no open requests, found \" + open.length + \": \" + requests);\n        }\n    };\n    HttpClientTestingBackend.prototype.descriptionFromMatcher = function (matcher) {\n        if (typeof matcher === 'string') {\n            return \"Match URL: \" + matcher;\n        }\n        else if (typeof matcher === 'object') {\n            var method = matcher.method || '(any)';\n            var url = matcher.url || '(any)';\n            return \"Match method: \" + method + \", URL: \" + url;\n        }\n        else {\n            return \"Match by function: \" + matcher.name;\n        }\n    };\n    HttpClientTestingBackend.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    HttpClientTestingBackend.ctorParameters = function () { return []; };\n    return HttpClientTestingBackend;\n}());\nexport { HttpClientTestingBackend };\n\n//# sourceMappingURL=data:application/json;base64,","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nimport { HttpBackend, HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { HttpTestingController } from './api';\nimport { HttpClientTestingBackend } from './backend';\n/**\n * Configures `HttpClientTestingBackend` as the `HttpBackend` used by `HttpClient`.\n *\n * Inject `HttpTestingController` to expect and flush requests in your tests.\n *\n * @stable\n */\nvar HttpClientTestingModule = /** @class */ (function () {\n    function HttpClientTestingModule() {\n    }\n    HttpClientTestingModule.decorators = [\n        { type: NgModule, args: [{\n                    imports: [\n                        HttpClientModule,\n                    ],\n                    providers: [\n                        HttpClientTestingBackend,\n                        { provide: HttpBackend, useExisting: HttpClientTestingBackend },\n                        { provide: HttpTestingController, useExisting: HttpClientTestingBackend },\n                    ],\n                },] }\n    ];\n    /** @nocollapse */\n    HttpClientTestingModule.ctorParameters = function () { return []; };\n    return HttpClientTestingModule;\n}());\nexport { HttpClientTestingModule };\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcGFja2FnZXMvY29tbW9uL2h0dHAvdGVzdGluZy9zcmMvbW9kdWxlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFRQSxPQUFPLEVBQUMsV0FBVyxFQUFFLGdCQUFnQixFQUFDLE1BQU0sc0JBQXNCLENBQUM7QUFDbkUsT0FBTyxFQUFDLFFBQVEsRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUV2QyxPQUFPLEVBQUMscUJBQXFCLEVBQUMsTUFBTSxPQUFPLENBQUM7QUFDNUMsT0FBTyxFQUFDLHdCQUF3QixFQUFDLE1BQU0sV0FBVyxDQUFDOzs7Ozs7Ozs7Ozs7Z0JBVWxELFFBQVEsU0FBQztvQkFDUixPQUFPLEVBQUU7d0JBQ1AsZ0JBQWdCO3FCQUNqQjtvQkFDRCxTQUFTLEVBQUU7d0JBQ1Qsd0JBQXdCO3dCQUN4QixFQUFDLE9BQU8sRUFBRSxXQUFXLEVBQUUsV0FBVyxFQUFFLHdCQUF3QixFQUFDO3dCQUM3RCxFQUFDLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxXQUFXLEVBQUUsd0JBQXdCLEVBQUM7cUJBQ3hFO2lCQUNGOzs7O2tDQS9CRDs7U0FnQ2EsdUJBQXVCIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5pbXBvcnQge0h0dHBCYWNrZW5kLCBIdHRwQ2xpZW50TW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb21tb24vaHR0cCc7XG5pbXBvcnQge05nTW9kdWxlfSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuaW1wb3J0IHtIdHRwVGVzdGluZ0NvbnRyb2xsZXJ9IGZyb20gJy4vYXBpJztcbmltcG9ydCB7SHR0cENsaWVudFRlc3RpbmdCYWNrZW5kfSBmcm9tICcuL2JhY2tlbmQnO1xuXG5cbi8qKlxuICogQ29uZmlndXJlcyBgSHR0cENsaWVudFRlc3RpbmdCYWNrZW5kYCBhcyB0aGUgYEh0dHBCYWNrZW5kYCB1c2VkIGJ5IGBIdHRwQ2xpZW50YC5cbiAqXG4gKiBJbmplY3QgYEh0dHBUZXN0aW5nQ29udHJvbGxlcmAgdG8gZXhwZWN0IGFuZCBmbHVzaCByZXF1ZXN0cyBpbiB5b3VyIHRlc3RzLlxuICpcbiAqIEBzdGFibGVcbiAqL1xuQE5nTW9kdWxlKHtcbiAgaW1wb3J0czogW1xuICAgIEh0dHBDbGllbnRNb2R1bGUsXG4gIF0sXG4gIHByb3ZpZGVyczogW1xuICAgIEh0dHBDbGllbnRUZXN0aW5nQmFja2VuZCxcbiAgICB7cHJvdmlkZTogSHR0cEJhY2tlbmQsIHVzZUV4aXN0aW5nOiBIdHRwQ2xpZW50VGVzdGluZ0JhY2tlbmR9LFxuICAgIHtwcm92aWRlOiBIdHRwVGVzdGluZ0NvbnRyb2xsZXIsIHVzZUV4aXN0aW5nOiBIdHRwQ2xpZW50VGVzdGluZ0JhY2tlbmR9LFxuICBdLFxufSlcbmV4cG9ydCBjbGFzcyBIdHRwQ2xpZW50VGVzdGluZ01vZHVsZSB7XG59XG4iXX0=","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport { HttpTestingController } from './src/api';\nexport { HttpClientTestingModule } from './src/module';\nexport { TestRequest } from './src/request';\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljX2FwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvbW1vbi9odHRwL3Rlc3RpbmcvcHVibGljX2FwaS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7O0FBUUEsT0FBTyxFQUFDLHFCQUFxQixFQUFlLE1BQU0sV0FBVyxDQUFDO0FBQzlELE9BQU8sRUFBQyx1QkFBdUIsRUFBQyxNQUFNLGNBQWMsQ0FBQztBQUNyRCxPQUFPLEVBQUMsV0FBVyxFQUFDLE1BQU0sZUFBZSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBAbGljZW5zZVxuICogQ29weXJpZ2h0IEdvb2dsZSBJbmMuIEFsbCBSaWdodHMgUmVzZXJ2ZWQuXG4gKlxuICogVXNlIG9mIHRoaXMgc291cmNlIGNvZGUgaXMgZ292ZXJuZWQgYnkgYW4gTUlULXN0eWxlIGxpY2Vuc2UgdGhhdCBjYW4gYmVcbiAqIGZvdW5kIGluIHRoZSBMSUNFTlNFIGZpbGUgYXQgaHR0cHM6Ly9hbmd1bGFyLmlvL2xpY2Vuc2VcbiAqL1xuXG5leHBvcnQge0h0dHBUZXN0aW5nQ29udHJvbGxlciwgUmVxdWVzdE1hdGNofSBmcm9tICcuL3NyYy9hcGknO1xuZXhwb3J0IHtIdHRwQ2xpZW50VGVzdGluZ01vZHVsZX0gZnJvbSAnLi9zcmMvbW9kdWxlJztcbmV4cG9ydCB7VGVzdFJlcXVlc3R9IGZyb20gJy4vc3JjL3JlcXVlc3QnO1xuIl19","/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nexport * from './public_api';\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi8uLi9wYWNrYWdlcy9jb21tb24vaHR0cC90ZXN0aW5nL2luZGV4LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7QUFRQSxjQUFjLGNBQWMsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogQGxpY2Vuc2VcbiAqIENvcHlyaWdodCBHb29nbGUgSW5jLiBBbGwgUmlnaHRzIFJlc2VydmVkLlxuICpcbiAqIFVzZSBvZiB0aGlzIHNvdXJjZSBjb2RlIGlzIGdvdmVybmVkIGJ5IGFuIE1JVC1zdHlsZSBsaWNlbnNlIHRoYXQgY2FuIGJlXG4gKiBmb3VuZCBpbiB0aGUgTElDRU5TRSBmaWxlIGF0IGh0dHBzOi8vYW5ndWxhci5pby9saWNlbnNlXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9wdWJsaWNfYXBpJztcbiJdfQ==","/**\n * Generated bundle index. Do not edit.\n */\nexport * from './index';\nexport { HttpClientTestingBackend as ɵangular_packages_common_http_testing_testing_a } from './src/backend';\n\n//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGVzdGluZy5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL3BhY2thZ2VzL2NvbW1vbi9odHRwL3Rlc3RpbmcvdGVzdGluZy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7R0FFRztBQUVILGNBQWMsU0FBUyxDQUFDO0FBRXhCLE9BQU8sRUFBQyx3QkFBd0IsSUFBSSwrQ0FBK0MsRUFBQyxNQUFNLGVBQWUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogR2VuZXJhdGVkIGJ1bmRsZSBpbmRleC4gRG8gbm90IGVkaXQuXG4gKi9cblxuZXhwb3J0ICogZnJvbSAnLi9pbmRleCc7XG5cbmV4cG9ydCB7SHR0cENsaWVudFRlc3RpbmdCYWNrZW5kIGFzIMm1YW5ndWxhcl9wYWNrYWdlc19jb21tb25faHR0cF90ZXN0aW5nX3Rlc3RpbmdfYX0gZnJvbSAnLi9zcmMvYmFja2VuZCc7Il19"],"names":["HttpHeaders","HttpResponse","HttpErrorResponse","Observable","HttpEventType","Injectable","NgModule","HttpClientModule","HttpBackend"],"mappings":"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"}