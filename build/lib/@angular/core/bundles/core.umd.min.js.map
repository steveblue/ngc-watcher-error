{"version":3,"sources":["packages/core/core.umd.js"],"names":["global","factory","exports","module","require","define","amd","npm_package","tslib","rxjs","operators","this","tslib_1","defineInjectable","opts","providedIn","defineInjector","options","providers","imports","InjectionToken","_desc","ngMetadataName","ngInjectableDef","undefined","prototype","toString","ANNOTATIONS","PARAMETERS","PROP_METADATA","makeDecorator","name","props","parentClass","chainFn","typeFn","metaCtor","makeMetadataCtor","DecoratorFactory","args","_i","arguments","length","call","apply","__spread","_a","annotationInstance","bind","TypeDecorator","cls","hasOwnProperty","Object","defineProperty","value","push","create","annotationCls","ctor","values","propName","makeParamDecorator","ParamDecoratorFactory","ParamDecorator","annotation","unusedKey","index","parameters","makePropDecorator","PropDecoratorFactory","decoratorInstance","PropDecorator","target","constructor","meta","unshift","ChangeDetectionStrategy","ChangeDetectorStatus","ANALYZE_FOR_ENTRY_COMPONENTS","Attribute","attributeName","Query","ContentChildren","selector","data","__assign","first","isViewQuery","descendants","ContentChild","ViewChildren","ViewChild","ÉµChangeDetectorStatus","Directive","dir","Component","c","changeDetection","Default","Pipe","p","pure","Input","bindingPropertyName","Output","HostBinding","hostPropertyName","HostListener","eventName","Type","Function","isType","v","__window","window","__self","self","WorkerGlobalScope","__global","_global","promise","Promise","resolve","_symbolIterator","getSymbolIterator","Symbol_1","iterator","keys","getOwnPropertyNames","Map","i","key","scheduleMicroTask","fn","Zone","then","current","looseIdentical","a","b","isNaN","stringify","token","Array","map","join","overriddenName","res","newLineIndex","indexOf","substring","DELEGATE_CTOR","INHERITED_CLASS","INHERITED_CLASS_WITH_CTOR","ReflectionCapabilities","reflect","_reflect","isReflectionEnabled","t","_zipTypesAndAnnotations","paramTypes","paramAnnotations","result","concat","_ownParameters","type","parentCtor","typeStr","exec","tsickleCtorParams","ctorParameters","paramTypes_1","ctorParam","paramAnnotations_1","convertTsickleDecoratorIntoMetadata","decorators","getOwnMetadata","fill","getParentCtor","_ownAnnotations","typeOrFunc","annotations","ownAnnotations","_ownPropMetadata","propMetadata","propDecorators","propDecorators_1","propMetadata_1","forEach","prop","parentPropMetadata_1","ownPropMetadata","hasLifecycleHook","lcProperty","guards","getter","setter","method","importUri","resourceUri","resolveIdentifier","moduleUrl","members","runtime","resolveEnum","enumIdentifier","decoratorInvocations","decoratorInvocation","parentProto","getPrototypeOf","forwardRef","forwardRefFn","__forward_ref__","resolveForwardRef","Inject","Optional","Self","SkipSelf","Host","SOURCE","_THROW_IF_NOT_FOUND","THROW_IF_NOT_FOUND","INJECTOR","NullInjector","get","notFoundValue","Error","Injector","parent","isArray","StaticInjector","NULL","inject","IDENT","EMPTY","CIRCULAR","MULTI_PROVIDER_FN","slice","GET_PROPERTY_NAME$1","USE_VALUE$1","getClosureSafeProperty$1","objWithPropertyToExtract","provide","String","useValue","NG_TEMP_TOKEN_PATH","NULL_INJECTOR","NEW_LINE","NO_NEW_LINE","source","records","_records","set","deps","useNew","recursivelyProcessProviders","provider","staticError","resolvedProvider","resolveProvider","computeDeps","providerDeps","j","useExisting","useFactory","useClass","multi","multiProvider","multiProviderMixError","record","flags","tryResolveToken","resolveToken","depRecords","depRecord","childRecord","e","tokenPath","message","formatError","tokens","text","obj","charAt","substr","context","parts","JSON","replace","_currentInjector","setCurrentInjector","injector","former","injectArgs","types","arg","defaultValue","__proto__","GET_PROPERTY_NAME","USE_VALUE","getClosureSafeProperty","EMPTY_ARRAY","convertInjectableProviderToFactory","deps_1","reflectionCapabilities","valueProvider_1","existingProvider_1","factoryProvider_1","classProvider_1","deps_2","deps_3","ViewEncapsulation","Injectable","injectableType","NgModule","ngModule","moduleType","metadata","ngInjectorDef","Version","full","major","split","minor","patch","VERSION","ERROR_DEBUG_CONTEXT","ERROR_ORIGINAL_ERROR","ERROR_LOGGER","getDebugContext","error","getOriginalError","defaultErrorLogger","console","ErrorHandler","_console","handleError","originalError","_findOriginalError","_findContext","errorLogger","getErrorLogger","constructResolvingPath","findFirstClosedCycle","reverse","k","injectionError","constructResolvingMessage","errMsg","wrappedError","msg","addKey","injectors","noAnnotationError","params","signature","ii","parameter","ReflectiveKey","id","displayName","_globalKeyRegistry","numberOfKeys","enumerable","configurable","KeyRegistry","_allKeys","has","newKey","size","reflector","Reflector","updateCapabilities","caps","identifier","ReflectiveDependency","optional","visibility","fromKey","_EMPTY_LIST","ResolvedReflectiveProvider_","resolvedFactories","resolvedFactory","ResolvedReflectiveFactory","dependencies","resolveReflectiveProvider","resolveReflectiveFactory","factoryFn","resolvedDeps","_dependenciesFor","aliasInstance","constructDependencies","params_1","_extractToken","resolveReflectiveProviders","resolvedProviderMap","mergeResolvedReflectiveProviders","normalizedProvidersMap","existing","_normalizeProviders","invalidProviderError","from","some","_createDependency","paramMetadata","UNDEFINED","ReflectiveInjector","resolveAndCreate","ResolvedReflectiveProviders","fromResolvedProviders","ReflectiveInjector_","_providers","_parent","_constructionCounter","len","keyIds","objs","_getByKey","resolveAndCreateChild","createChildFromResolved","inj","resolveAndInstantiate","instantiateResolved","_instantiateProvider","getProviderAtIndex","outOfBoundsError","_new","_getMaxNumberOfObjects","cyclicDependencyError","_instantiate","ResolvedReflectiveFactory$$1","_this","dep","_getByReflectiveDependency","instantiationError","originalException","originalStack","INJECTOR_KEY","_getByKeySelf","_getByKeyDefault","_getObjByKeyId","keyId","_throwOrNull","noProviderError","inj_","_mapProviders","APP_ROOT","NOT_YET","CIRCULAR$1","EMPTY_ARRAY$1","NULL_INJECTOR$1","getNullInjector","R3Injector","def","injectorDefTypes","Set","onDestroy","destroyed","deepForEach","injectorDef","processInjectorType","makeRecord","isRootInjector","defType","destroy","assertNotDestroyed","service","ngOnDestroy","clear","previousInjector","couldBeInjectableType","injectableDefInScope","injectableDefRecord","hydrate","defOrWrappedDef","parents","add","imported","delete","processProvider","isTypeProvider","providerToRecord","isValueProvider","isExistingProvider","isFactoryProvider","classRef_1","hasDeps","multiRecord_1","hasOnDestroy","input","isPromise","APP_INITIALIZER","ApplicationInitStatus","appInits","initialized","done","donePromise","rej","reject","runInitializers","asyncInitPromises","complete","initResult","all","catch","APP_ID","_appIdRandomProviderFactory","_randomChar","APP_ID_RANDOM_PROVIDER","fromCharCode","Math","floor","random","PLATFORM_INITIALIZER","PLATFORM_ID","APP_BOOTSTRAP_LISTENER","PACKAGE_ROOT_URL","Console","log","warn","_throwError","Compiler","compileModuleSync","compileModuleAsync","compileModuleAndAllComponentsSync","compileModuleAndAllComponentsAsync","clearCache","clearCacheFor","COMPILER_OPTIONS","CompilerFactory","ComponentRef","ComponentFactory","noComponentFactoryError","component","ERROR_COMPONENT","trace","events","_NullComponentFactoryResolver","resolveComponentFactory","ComponentFactoryResolver","CodegenComponentFactoryResolver","factories","_ngModule","_factories","componentType","ComponentFactoryBoundToModule","_super","ngContentSelectors","inputs","outputs","__extends","projectableNodes","rootSelectorOrNode","NgModuleRef","NgModuleFactory","detectWTF","wtf","createScope","leave","scope","returnValue","leaveScope","startTimeRange","rangeType","action","beginTimeRange","endTimeRange","range","wtfEnabled","noopScope","arg0","arg1","wtfCreateScope","wtfLeave","s","r","wtfStartTimeRange","wtfEndTimeRange","EventEmitter","isAsync","__isAsync","emit","next","subscribe","generatorOrNext","schedulerFn","errorFn","err","completeFn","setTimeout","sink","Subscription","Subject","NgZone","_b","enableLongStackTrace","hasPendingMicrotasks","hasPendingMacrotasks","isStable","onUnstable","onMicrotaskEmpty","onStable","onError","assertZonePatched","_nesting","_outer","_inner","fork","forkInnerZoneWithAngularBehavior","zone","properties","isAngularZone","onInvokeTask","delegate","task","applyThis","applyArgs","onEnter","invokeTask","onLeave","onInvoke","callback","invoke","onHasTask","hasTaskState","hasTask","change","microTask","checkStable","macroTask","onHandleError","runOutsideAngular","isInAngularZone","assertInAngularZone","assertNotInAngularZone","run","runTask","scheduleEventTask","EMPTY_PAYLOAD","noop","cancelTask","runGuarded","_platform","NoopNgZone","Testability","_ngZone","_pendingCount","_isZoneStable","_didWork","_callbacks","_watchAngularEvents","taskTrackingZone","_runCallbacksIfReady","increasePendingRequestCount","decreasePendingRequestCount","cb","pop","clearTimeout","timeoutId","doneCb","pending_1","getPendingTasks","filter","updateCb","macroTasks","isPeriodic","delay","creationLocation","xhr","addCallback","timeout","whenStable","getPendingRequestCount","findProviders","using","exactMatch","TestabilityRegistry","_applications","_testabilityGetter","addToWindow","registerApplication","testability","unregisterApplication","unregisterAllApplications","getTestability","elem","getAllTestabilities","getAllRootElements","findTestabilityInTree","findInAncestors","_NoopGetTestability","registry","_devMode","_runModeLocked","ALLOW_MULTIPLE_PLATFORMS","isDevMode","createPlatform","PlatformRef","inits","init","createPlatformFactory","parentPlatformFactory","desc","marker","extraProviders","platform","getPlatform","injectedProviders","assertPlatform","requiredToken","_injector","_modules","_destroyListeners","_destroyed","bootstrapModuleFactory","moduleFactory","ngZone","getNgZone","ngZoneOption","ngZoneInjector","moduleRef","exceptionHandler","remove","_callAndReportToErrorHandler","errorHandler","initStatus","_moduleDoBootstrap","bootstrapModule","compilerOptions","compilerFactory","optionsReducer","createCompiler","appRef","ApplicationRef","_bootstrapComponents","f","bootstrap","instance","ngDoBootstrap","listener","dst","reduce","_zone","_exceptionHandler","_componentFactoryResolver","_initStatus","_bootstrapListeners","_views","_runningTick","_enforceNoNewChanges","_stable","componentTypes","components","tick","isCurrentlyStable","Observable","observer","stableSub","unstableSub","unsubscribe","merge","pipe","share","componentOrFactory","componentFactory","compRef","_unloadComponent","location","nativeElement","_loadComponent","_tickScope","view","detectChanges","checkNoChanges","attachView","viewRef","attachToAppRef","detachView","detachFromAppRef","componentRef","hostView","list","el","splice","RendererStyleFlags2","Renderer","RootRenderer","RendererFactory2","Renderer2","ElementRef","moduleFactories","QueryList","dirty","_results","changes","find","toArray","reset","flatten","flat","item","flatItem","last","notifyOnChanges","setDirty","SystemJsNgModuleLoaderConfig","DEFAULT_CONFIG","factoryPathPrefix","factoryPathSuffix","SystemJsNgModuleLoader","_compiler","config","_config","load","path","loadFactory","loadAndCompile","__read","exportName","System","import","checkNotEmpty","factoryClassSuffix","modulePath","TemplateRef","ViewContainerRef","ChangeDetectorRef","ViewRef","EmbeddedViewRef","DebugNode","nativeNode","_debugContext","DebugElement","addChild","listeners","references","providerTokens","attributes","classes","styles","childNodes","child","removeChild","childIndex","insertChildrenAfter","newChildren","siblingIndex","insertBefore","refChild","newChild","refIndex","query","predicate","queryAll","matches","_queryElementChildren","element","node","queryAllNodes","_queryNodeChildren","parentNode","triggerEventHandler","eventObj","_nativeNodeToDebugNode","getDebugNode","indexDebugNode","devModeEqual","isListLikeIterableA","isListLikeIterable","isListLikeIterableB","areIterablesEqual","comparator","iterator1","iterator2","item1","item2","WrappedValue","wrapped","wrap","unwrap","isWrapped","SimpleChange","previousValue","currentValue","firstChange","isFirstChange","isJsObject","o","DefaultIterableDifferFactory","supports","trackByFn","DefaultIterableDiffer","trackByIdentity","_linkedRecords","_unlinkedRecords","_previousItHead","_itHead","_itTail","_additionsHead","_additionsTail","_movesHead","_movesTail","_removalsHead","_removalsTail","_identityChangesHead","_identityChangesTail","_trackByFn","forEachItem","_next","forEachOperation","nextIt","nextRemove","addRemoveOffset","moveOffsets","getPreviousIndex","adjPreviousIndex","currentIndex","_nextRemoved","previousIndex","localMovePreviousIndex","localCurrentIndex","offset","forEachPreviousItem","_nextPrevious","forEachAddedItem","_nextAdded","forEachMovedItem","_nextMoved","forEachRemovedItem","forEachIdentityChange","_nextIdentityChange","diff","collection","check","_reset","itemTrackBy","mayBeDirty","index_1","trackById","_verifyReinsertion","_addIdentityChange","_mismatch","iterateListLike","_truncate","isDirty","nextRecord","previousRecord","_prev","_remove","_moveAfter","_reinsertAfter","_addAfter","IterableChangeRecord_","reinsertRecord","_addToMoves","_addToRemovals","_unlink","prevRecord","prev","_prevRemoved","_insertAfter","_DuplicateMap","put","toIndex","_prevDup","_nextDup","_DuplicateItemRecordList","_head","_tail","atOrAfterIndex","duplicates","recordList","moveOffset","MissingTranslationStrategy","DefaultKeyValueDifferFactory","DefaultKeyValueDiffer","_mapHead","_appendAfter","_previousMapHead","_changesHead","_changesTail","forEachChangedItem","_nextChanged","_forEach","_maybeAddToChanges","_getOrCreateRecordForKey","_insertBeforeOrAppend","before","record_1","KeyValueChangeRecord_","_addToAdditions","newValue","_addToChanges","IterableDiffers","copied","extend","iterable","getTypeNameForDebugging","KeyValueDiffers","kv","keyValDiff","iterableDiff","defaultIterableDiffers","defaultKeyValueDiffers","platformCore","LOCALE_ID","TRANSLATIONS","TRANSLATIONS_FORMAT","_iterableDiffersFactory","_keyValueDiffersFactory","_localeFactory","locale","ApplicationModule","InertBodyHelper","defaultDoc","inertDocument","implementation","createHTMLDocument","inertBodyElement","body","inertHtml","createElement","appendChild","innerHTML","querySelector","getInertBodyElement","isDOMParserAvailable","DOMParser","getInertBodyElement_DOMParser","getInertBodyElement_InertDocument","getInertBodyElement_XHR","html","encodeURI","XMLHttpRequest","responseType","open","send","response","parseFromString","templateEl","documentMode","stripCustomNsAttrs","elAttrs","attrName","removeAttribute","childNode","firstChild","nodeType","Node","ELEMENT_NODE","nextSibling","SAFE_URL_PATTERN","DATA_URL_PATTERN","_sanitizeUrl","url","match","tagSet","tags","e_1","_c","__values","e_1_1","return","merge$1","sets","e_2","sets_1","sets_1_1","e_2_1","inertBodyHelper","VOID_ELEMENTS","OPTIONAL_END_TAG_BLOCK_ELEMENTS","OPTIONAL_END_TAG_INLINE_ELEMENTS","OPTIONAL_END_TAG_ELEMENTS","BLOCK_ELEMENTS","INLINE_ELEMENTS","VALID_ELEMENTS","URI_ATTRS","SRCSET_ATTRS","HTML_ATTRS","VALID_ATTRS","SanitizingHtmlSerializer","sanitizedSomething","buf","sanitizeChildren","startElement","TEXT_NODE","chars","endElement","checkClobberedElement","tagName","nodeName","toLowerCase","srcset","elAttr","lower","trim","encodeEntities","nextNode","compareDocumentPosition","DOCUMENT_POSITION_CONTAINED_BY","outerHTML","SURROGATE_PAIR_REGEXP","NON_ALPHANUMERIC_REGEXP","charCodeAt","_sanitizeHtml","unsafeHtmlInput","unsafeHtml","mXSSAttempts","parsedHtml","sanitizer","safeHtml","getTemplateContent","parent_1","isTemplateElement","content","SecurityContext","SAFE_STYLE_VALUE","RegExp","URL_RE","_sanitizeStyle","urlMatch","hasBalancedQuotes","outsideSingle","outsideDouble","Sanitizer","shiftInitState","priorInitState","newInitState","state","initState","initIndex","shouldCallLifecycleInitHook","asTextData","nodes","asElementData","asProviderData","asPureExpressionData","asQueryList","Services","setCurrentNode","createRootView","createEmbeddedView","createComponentView","createNgModuleRef","overrideProvider","overrideComponentView","clearOverrides","checkAndUpdateView","checkNoChangesView","destroyView","resolveDep","createDebugContext","handleEvent","updateDirectives","updateRenderer","dirtyParentQueries","expressionChangedAfterItHasBeenCheckedError","oldValue","currValue","isFirstCheck","viewDebugError","_addDebugContext","logError","viewDestroyedError","NOOP","_tokenKeyCache","tokenKey","UNDEFINED_RENDERER_TYPE_ID","EMPTY_RENDERER_TYPE_ID","_renderCompCount","resolveRendererType2","isFilled","encapsulation","None","checkBinding","bindingIdx","oldValues","bindingIndex","checkAndUpdateBinding","checkBindingNoChanges","bindingName","bindings","nodeIndex","markParentViewsForCheck","currView","viewContainerParent","markParentViewsForCheckProjectedViews","endView","dispatchEvent","event","componentView","root","declaredViewContainer","parentNodeDef","viewParentEl","renderNode","renderElement","renderText","elementEventFullName","isComponentView","filterQueryId","queryId","splitMatchedQueriesDsl","matchedQueriesDsl","matchedQueries","matchedQueryIds","valueType","splitDepsDsl","sourceName","getParentRenderElement","renderHost","renderParent","componentRendererType","Native","DEFINITION_CACHE","WeakMap","resolveDefinition","visitRootRenderNodes","renderer","visitSiblingRenderNodes","startIndex","endIndex","nodeDef","visitRenderNode","childCount","visitProjectedRenderNodes","ngContentIndex","compView","hostElDef","projectedNodes","execRenderNodeAction","ngContent","rn","bindingFlags","embeddedViews","viewContainer","_embeddedViews","NS_PREFIX_RE","splitNamespace","calcBindingFlags","_toStringWithNull","elDef","selectorOrNode","ns","createComment","parentEl","selectRootElement","attrs","setAttribute","listenToElementOutputs","output","handleEventClosure","renderEventHandlerClosure","listenTarget","listenerView","disposable","listen","disposables","outputIndex","checkAndUpdateElementValue","binding","elData","renderNode$$1","setElementAttribute","securityContext","renderValue","sanitize","setElementClass","addClass","removeClass","setElementStyle","STYLE","unit","suffix","setStyle","removeStyle","setElementProperty","setProperty","UNDEFINED_VALUE","InjectorRefTokenKey$1","INJECTORRefTokenKey$1","NgModuleRefTokenKey","resolveNgModuleDep","depDef","tokenKey$$1","providerDef","_def","providersByKey","providerInstance","_createProviderInstance$1","targetsModule","moduleTransitivelyPresent","modules","isRoot","injectable","_createClass","depValues","_callFactory","detachEmbeddedView","elementData","viewIndex","removeFromArray","renderDetachView","renderAttachEmbeddedView","prevView","prevRenderNode","addToArray","arr","EMPTY_CONTEXT","getComponentViewDefinitionFactory","viewDefFactory","ComponentFactory_","_inputs","_outputs","inputsArr","templateName","outputsArr","viewDef","componentNodeIndex","componentProvider","ComponentRef_","ViewRef_","_view","_viewRef","_component","_elDef","changeDetectorRef","Injector_","ViewContainerRef_","_data","ref","attachToViewContainerRef","templateRef","insert","createComponent","ngModuleRef","contextInjector","parentInjector","viewRef_","attachEmbeddedView","parentView","attachProjectedView","vcElementData","dvcElementData","projectedViews","template","_projectedViews","markNodeAsProjectedTemplate","nodeFlags","childFlags","move","moveEmbeddedView","oldViewIndex","newViewIndex","viewData","detach","_viewContainerRef","_appRef","rootRenderNodes","renderNodes","markForCheck","fs","rendererFactory","begin","end","reattach","vcRef","TemplateRef_","_parentView","createInjector$1","RendererAdapter","namespaceAndName","createViewRoot","hostElement","createTemplateAnchor","parentElement","comment","createText","projectNodes","attachViewAfter","viewRootNodes","viewAllNodes","destroyNode","listenGlobal","propertyName","propertyValue","attributeValue","setBindingDebugInfo","className","isAdd","styleName","styleValue","invokeElementMethod","methodName","setText","setValue","animate","bootstrapComponents","NgModuleRef_","_moduleType","initNgModule","provDef","injectFlags","callNgModuleLifecycle","lifecycles","RendererV1TokenKey","Renderer2TokenKey","ElementRefTokenKey","ViewContainerRefTokenKey","TemplateRefTokenKey","ChangeDetectorRefTokenKey","InjectorRefTokenKey","INJECTORRefTokenKey","checkIndex","depDefs","directChildFlags","childMatchedQueries","createPipeInstance","createClass","createDirectiveInstance","subscription","eventHandlerClosure","_createProviderInstance","allowPrivateServices","callFactory","ViewAction","NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","startView","searchView","findCompView","cdView","providerDef_1","allProviders","publicProviders","providerData","updateProp","nonMinifiedName","callLifecycleHooksChildrenFirst","callProviderLifecycles","callElementProvidersLifecycles","ngAfterContentInit","ngAfterContentChecked","ngAfterViewInit","ngAfterViewChecked","queryIds","nodeMatchedQueries","tplDef","filterId","checkAndUpdateQuery","queryList","directiveInstance","newValues","elementDef","calcQueryValues","notify","boundValue","bindingType","queryDef","getQueryValue","embeddedView","dvc","projectedView","queryValueType","_pureExpressionDef","propertyNames","prefix","_addInterpolationPart","isNgContainer","validateNode","nodeCount","lastRenderRootNode","parentEnd","anchorDef$$1","createView","initView","createViewNodes","compRenderer","rendererType","createRenderer","outputCount","bindingCount","nodeData","compViewDef","execComponentViewsAction","CreateViewNodes","execQueriesAction","markProjectedViewsForCheck","execEmbeddedViewsAction","CheckNoChanges","CheckAndUpdate","callInit","checkAndUpdateNode","argStyle","v0","v1","v2","v3","v4","v5","v6","v7","v8","v9","checkAndUpdateNodeInline","checkAndUpdateElementInline","bindLen","changed","checkAndUpdateTextInline","checkAndUpdateDirectiveInline","directive","ngOnChanges","ngOnInit","ngDoCheck","checkAndUpdatePureExpressionInline","transform","checkAndUpdateNodeDynamic","checkAndUpdateElementDynamic","checkAndUpdateTextDynamic","checkAndUpdateDirectiveDynamic","checkAndUpdatePureExpressionDynamic","i_1","checkNoChangesNode","checkNoChangesNodeInline","checkNoChangesNodeDynamic","checkNoChangesQuery","Destroy","detachProjectedView","destroyViewNodes","callViewAction","viewState","execProjectedViewsAction","CheckNoChangesProjectedViews","CheckAndUpdateProjectedViews","queryFlags","staticDynamicQueryFlag","checkType","initServicesIfNeeded","services","createDebugServices","debugSetCurrentNode","debugCreateRootView","debugCreateEmbeddedView","debugCreateComponentView","debugCreateNgModuleRef","debugOverrideProvider","debugOverrideComponentView","debugClearOverrides","debugCheckAndUpdateView","debugCheckNoChangesView","debugDestroyView","DebugContext_","debugHandleEvent","debugUpdateDirectives","debugUpdateRenderer","createProdServices","createProdRootView","prodCheckAndUpdateNode","prodCheckNoChangesNode","elInjector","createRootData","DebugRendererFactory2","defWithOverride","applyProviderOverridesToView","callWithDebugContext","DebugAction","anchorDef","viewDef$$1","viewDefOverrides","applyProviderOverridesToNgModule","calcHasOverrides","hasOverrides","hasDeprecatedOverrides","providerOverrides","override","deprecatedBehavior","providerOverridesWithScope","applyProviderOverrides","moduleSet_1","_currentAction","_currentView","_currentNodeIndex","comp","compFactory","elementIndicesWithOverwrittenProviders","findElementIndicesWithOverwrittenProviders","elIndicesWithOverwrittenProviders","lastElementDef","applyProviderOverridesToElement","elIndex","nextDirectiveWithBinding","debugCheckDirectivesFn","debugCheckAndUpdateNode","debugCheckNoChangesNode","nextRenderNodeWithBinding","debugCheckRenderNodeFn","givenValues","bindingValues","camelCaseToDashCase","CAMEL_CASE_REGEXP","m","normalizeDebugBindingValue","attr","elView","elOrCompView","childDef","collectReferences","findHostElement","logViewDef","logNodeIndex","renderNodeIndex","getRenderNodeIndex","currRenderNodeIndex","refName","oldAction","oldView","oldNodeIndex","isViewDebugError","viewWrappedDebugError","getCurrentDebugContext","renderData","DebugRenderer2","whenRenderingDone","removeDebugNodeFromIndex","namespace","debugCtx","debugEl","debugChildEl","debugRefEl","oldChild","style","EventListener","NgModuleFactory_","_ngModuleDefFactory","executeInitHooks","currentView","tView","creationMode","lifecycleStage","executeHooks","initHooks","checkHooks","allHooks","hooksToCall","callHooks","RendererStyleFlags3","NG_PROJECT_AS_ATTR_NAME","isProceduralRenderer","domRendererFactory3","document","findNextRNodeSibling","stopNode","currentNode","pNextOrParent","findFirstRNode","currentSibling","parentType","getNextLNodeWithProjection","getNextOrParentSiblingNode","initialNode","rootNode","native","childContainerData","views","head","addRemoveViewFromContainer","container","insertMode","beforeNode","insertView","newView","setViewNext","containerNextNativeNode","removeView","removeIndex","viewNode","destroyViewTree","rootView","viewOrContainer","cleanUpView","queries","removeListeners","cleanup","removeEventListener","executeOnDestroys","destroyHooks","executePipeOnDestroys","pipeDestroyHooks","canInsertNativeNode","appendProjectedNode","currentParent","lContainer","isNodeMatchingSimpleSelector","tNode","noOfSelectorParts","tagNameInSelector","nodeClassAttrVal","cssClassToMatch","nodeClassesLen","matchIndex","matchEndIdx","attrsInNode","attrNameInSelector","attrIdxInNode","attrValInSelector","attrValInNode","isNodeMatchingSelectorWithNegations","positiveSelector","negativeSelectors","isNodeMatchingSelector","matchingSelectorIndex","selectors","textSelectors","ngProjectAsAttrVal","getProjectAsAttrValue","nodeAttrs","ngProjectAsAttrIdx","isDifferent","stringify$1","notImplemented","previousOrParentNode","isParent","tData","NG_HOST_SYMBOL","_CLEAN_PROMISE","_ROOT_DIRECTIVE_INDICES","getPreviousOrParentNode","currentQueries","directives","getCreationMode","checkNoChangesMode","firstTemplatePass","enterView","host","bindingStartIndex","leaveView","viewHooks","viewCheckHooks","refreshDirectives","executeInitAndContentHooks","setHostBindings","hostBindings","refreshChildComponents","componentRefresh","defs","dirIndex","contentHooks","contentCheckHooks","createLView","viewId","tail","dynamicViewCount","createLNode","isState","nodeInjector","renderEmbeddedTemplate","_isParent","_previousOrParentNode","cm","createTView","directiveRegistry","pipeRegistry","refreshDynamicChildren","cacheMatchingDirectivesForNode","componentFlag","throwMultipleComponentError","buildTNodeFlags","initChangeDetectorIfExisting","_setComponentContext","hack_declareDirectives","elementIndex","localRefs","exportsMap","directiveDef","","tDirectives","baseDirectiveCreate","addComponentLogic","getOrCreateTView","directiveDefs","pipeDefs","addToViewTree","onPush","queueComponentIndexForCheck","queueInitHooks","onInit","doCheck","queueHostBindingForCheck","setInputsFromAttrs","directiveIndex","initialInputData","initialInputs","generateInitialInputs","minifiedInputName","exportAs","cacheMatchingLocalNames","localNames","saveResolvedLocalsInData","pipes","ngPrivateData","setUpAttributes","isProc","attrVal","createTNode","generatePropertyAliases","tNodeFlags","direction","propStore","start","isInput","propertyAliasMap","publicName","internalName","diPublic","container_1","viewAttached","detectChangesInternal","getDirectiveInstance","appendToProjectionNode","projectionNode","appendedFirst","appendedLast","projectionNodeData","findComponentHost","lView","viewRootLNode","markViewDirty","scheduleTick","rootContext","res_1","clean","scheduler","getRootView","_getComponentHostLElementNode","rootComponent","renderComponentOrTemplate","componentOrContext","hostNode","throwErrorIfNoChangesMode","NO_CHANGE","initBindings","store","consumeBinding","bindingUpdated","checkAndUpdateBinding$1","bindingUpdated2","exp1","exp2","different","bindingUpdated4","exp3","exp4","getTView","instanceOrArray","CLEAN_PROMISE","ROOT_DIRECTIVE_INDICES","ViewRef$1","EmbeddedViewRef$1","_lViewNode","createViewRef","addDestroyable","destroyFn","NG_ELEMENT_ID","BLOOM_SIZE","nextNgElementId","getOrCreateNodeInjector","getOrCreateNodeInjectorForNode","bf0","bf1","bf2","bf3","bf4","bf5","bf6","bf7","cbf0","cbf1","cbf2","cbf3","cbf4","cbf5","cbf6","cbf7","viewContainerRef","elementRef","createInjectionError","text$$1","diPublicInInjector","di","bloomAdd","bloomBit","mask","getOrCreateChangeDetectorRef","isComponent","getOrCreateHostChangeDetector","getClosestComponentAncestor","hostInjector","getOrCreateInjectable","bloomHash","bloomHashBit","moduleInjector","bloomFindPossibleInjector","flags_1","startInjector","ReadFromInjectorFn","read","ElementRef$1","getOrCreateContainerRef","ViewContainerRef$1","_node","nextIndex","getOrCreateTemplateRef","TemplateRef$1","getOrCreateElementRef","getRenderer","_renderer","_template","defineComponent","componentDefinition","invertObject","afterContentInit","afterContentChecked","afterViewInit","afterViewChecked","OnPush","feature","features","PRIVATE_PREFIX","EMPTY$1","newObj","minifiedKey","defineDirective","pureFunction1","pureFn","exp","thisArg","pureFunction2","pureFunction3","pureFunction4","pureFunctionV","exps","isPure","LQueries_","deep","shallow","track","descend","createQuery$1","containerValues","clonedQuery","viewValues","addNode","getIdxOfMatchingSelector","geIdxOfMatchingDirective","readFromNodeInjector","directiveIdx","matchingIdx","addMatch","matchingValue","previous","createPredicate","_valuesTree","QueryList$1","QueryList_","_values","flatten$1","BRAND","bypassSanitizationTrustString","trustedString","mode","trusted","Éµangular_packages_core_core_k","Éµangular_packages_core_core_l","Éµangular_packages_core_core_m","Éµangular_packages_core_core_f","Éµangular_packages_core_core_g","Éµangular_packages_core_core_h","Éµangular_packages_core_core_i","Éµangular_packages_core_core_j","Éµangular_packages_core_core_c","Éµangular_packages_core_core_d","Éµangular_packages_core_core_e","Éµangular_packages_core_core_n","Éµangular_packages_core_core_p","Éµangular_packages_core_core_o","Éµangular_packages_core_core_s","Éµangular_packages_core_core_q","Éµangular_packages_core_core_r","Éµangular_packages_core_core_w","Éµangular_packages_core_core_y","Éµangular_packages_core_core_x","Éµangular_packages_core_core_v","Éµangular_packages_core_core_z","Éµangular_packages_core_core_bc","Éµangular_packages_core_core_be","Éµangular_packages_core_core_bf","Éµangular_packages_core_core_bd","Éµangular_packages_core_core_bb","Éµangular_packages_core_core_ba","Éµangular_packages_core_core_a","Éµangular_packages_core_core_b","Éµangular_packages_core_core_t","Éµangular_packages_core_core_u","DebugContext","destroyPlatform","enableProdMode","NgProbeToken","asNativeElements","debugEls","setTestabilityGetter","CUSTOM_ELEMENTS_SCHEMA","NO_ERRORS_SCHEMA","createInjector","RenderComponentType","templateUrl","slotCount","animations","ModuleWithComponentFactories","ngModuleFactory","componentFactories","NgModuleFactoryLoader","getModuleFactory","ÉµALLOW_MULTIPLE_PLATFORMS","ÉµAPP_ID_RANDOM_PROVIDER","ÉµdevModeEqual","ÉµisListLikeIterable","ÉµisDefaultChangeDetectionStrategy","isDefaultChangeDetectionStrategy","changeDetectionStrategy","ÉµConsole","ÉµsetCurrentInjector","ÉµAPP_ROOT","ÉµComponentFactory","ÉµCodegenComponentFactoryResolver","ÉµReflectionCapabilities","ÉµRenderDebugInfo","RenderDebugInfo","Éµ_sanitizeHtml","Éµ_sanitizeStyle","Éµ_sanitizeUrl","Éµglobal","ÉµlooseIdentical","Éµstringify","ÉµmakeDecorator","ÉµisObservable","isObservable","ÉµisPromise","ÉµclearOverrides","ÉµoverrideComponentView","ÉµoverrideProvider","ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR","ÉµdefineComponent","ÉµdefineDirective","ÉµdefinePipe","definePipe","pipeDef","n","ÉµdetectChanges","ÉµrenderComponent","renderComponent","componentDef","ngComponentDef","elementNode","componentTag","locateHostElement","elementOrSelector","defaultRenderer","requestAnimationFrame","tag","rNode","resetApplicationState","hostFeatures","ÉµdirectiveInject","directiveInject","ÉµinjectTemplateRef","injectTemplateRef","ÉµinjectViewContainerRef","injectViewContainerRef","ÉµinjectChangeDetectorRef","injectChangeDetectorRef","ÉµinjectAttribute","injectAttribute","ÉµPublicFeature","PublicFeature","definition","ÉµNgOnChangesFeature","NgOnChangesFeature","inputPropertyNames","proto","writable","_loop_1","pubKey","minKey","privateMinKey","existingDesc","getOwnPropertyDescriptor","simpleChanges","onChangesWrapper","delegateHook","ÉµNC","ÉµC","ÉµE","elementStart","ÉµL","listenerFn","useCapture","cleanupFns","wrappedListener","wrapListenerWithDirtyLogic","cleanupFn","wrapListenerWithDirtyAndDefault","preventDefault","addEventListener","outputData","createOutput","ÉµT","textNode","createTextNode","ÉµV","embeddedViewStart","viewBlockId","existingViewNode","scanForView","containerNode","startIdx","viewAtPositionId","getOrCreateEmbeddedTView","tContainer","ÉµQ","memoryIndex","getCurrentQueries","QueryType","Éµd","loadDirective","ÉµP","projection","localIndex","selectorIndex","nodesForSelector","nodeToProject","previouslyProjected","lastNodeToProject","Éµb","Éµi1","interpolation1","Éµi2","interpolation2","i0","Éµi3","interpolation3","i1","Éµi4","interpolation4","i2","Éµi5","interpolation5","i3","Éµi6","interpolation6","i4","Éµi7","interpolation7","i5","Éµi8","interpolation8","i6","ÉµiV","interpolationV","Éµpb1","pipeBind1","pipeInstance","Éµpb2","pipeBind2","Éµpb3","pipeBind3","Éµpb4","pipeBind4","ÉµpbV","pipeBindV","Éµf0","pureFunction0","Éµf1","Éµf2","Éµf3","Éµf4","Éµf5","pureFunction5","exp5","Éµf6","pureFunction6","exp6","Éµf7","pureFunction7","exp7","Éµf8","pureFunction8","exp8","ÉµfV","ÉµcR","containerRefreshStart","Éµcr","containerRefreshEnd","ÉµqR","queryRefresh","Éµe","elementEnd","queueLifecycleHooks","Éµp","elementProperty","dataValue","inputData","setInputsForProperty","markDirtyIfOnPush","ÉµpD","projectionDef","noOfNodeBuckets","distributedNodes","componentChild","Éµa","elementAttribute","strValue","Éµs","elementStyle","lElement","removeProperty","Éµsn","elementStyleNamed","suffixOrSanitizer","DashCase","Éµk","elementClass","Éµkn","elementClassNamed","classList","Éµt","textBinding","existingNode","textContent","insertChild","nativeSibling","Éµv","embeddedViewEnd","Éµst","Éµld","ÉµPp","pipeName","firstInstance","getPipeDef","ÉµbypassSanitizationTrustHtml","bypassSanitizationTrustHtml","trustedHtml","ÉµbypassSanitizationTrustStyle","bypassSanitizationTrustStyle","trustedStyle","ÉµbypassSanitizationTrustScript","bypassSanitizationTrustScript","trustedScript","ÉµbypassSanitizationTrustUrl","bypassSanitizationTrustUrl","trustedUrl","ÉµbypassSanitizationTrustResourceUrl","bypassSanitizationTrustResourceUrl","trustedResourceUrl","ÉµsanitizeHtml","sanitizeHtml","ÉµsanitizeStyle","sanitizeStyle","unsafeStyle","ÉµsanitizeUrl","sanitizeUrl","unsafeUrl","ÉµsanitizeResourceUrl","sanitizeResourceUrl","unsafeResourceUrl","ÉµregisterModuleFactory","registerModuleFactory","ÉµEMPTY_ARRAY","ÉµEMPTY_MAP","Éµand","templateFactory","Éµccf","createComponentFactory","Éµcmf","createNgModuleFactory","ngModuleType","defFactory","Éµcrt","createRendererType2","Éµdid","outputDefs","Éµeld","fixedAttrs","bindingDefs","suffixOrSecurityContext","_d","ns_1","name_1","_e","ÉµelementEventFullName","ÉµgetComponentViewDefinitionFactory","ÉµinlineInterpolate","inlineInterpolate","valueCount","c0","a1","c1","a2","c2","a3","c3","a4","c4","a5","c5","a6","c6","a7","c7","a8","c8","a9","c9","Éµinterpolate","interpolate","constAndInterp","Éµmod","moduleDef","Éµmpd","moduleProvideDef","Éµncd","ngContentDef","Éµnov","nodeValue","Éµpid","Éµprd","Éµpad","pureArrayDef","argCount","Éµpod","pureObjectDef","propToIndex","nbKeys","Éµppd","purePipeDef","Éµqud","Éµted","textDef","staticText","Éµunv","unwrapValue","nodeIdx","globalBindingIdx","Éµvid","viewBindingCount","viewDisposableCount","viewNodeFlags","viewRootNodeFlags","viewMatchedQueries","currentRenderParent","currentElementHasPublicProviders","currentElementHasPrivateProviders","newParent","rootNodeFlags"],"mappings":"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","sourcesContent":["/**\n * @license Angular v6.0.0-rc.1\n * (c) 2010-2018 Google, Inc. https://angular.io/\n * License: MIT\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('tslib'), require('rxjs'), require('rxjs/operators')) :\n\ttypeof define === 'function' && define.amd ? define(['exports', 'tslib', 'rxjs', 'rxjs/operators'], factory) :\n\t(factory((global.npm_package = {}),global.tslib,global.rxjs,global.rxjs.operators));\n}(this, (function (exports,tslib_1,rxjs,operators) { 'use strict';\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Construct an `InjectableDef` which defines how a token will be constructed by the DI system, and\n * in which injectors (if any) it will be available.\n *\n * This should be assigned to a static `ngInjectableDef` field on a type, which will then be an\n * `InjectableType`.\n *\n * Options:\n * * `providedIn` determines which injectors will include the injectable, by either associating it\n *   with an `@NgModule` or other `InjectorType`, or by specifying that this injectable should be\n *   provided in the `'root'` injector, which will be the application-level injector in most apps.\n * * `factory` gives the zero argument function which will create an instance of the injectable.\n *   The factory can call `inject` to access the `Injector` and request injection of dependencies.\n *\n * @experimental\n */\nfunction defineInjectable(opts) {\n    return {\n        providedIn: opts.providedIn || null,\n        factory: opts.factory,\n    };\n}\n/**\n * Construct an `InjectorDef` which configures an injector.\n *\n * This should be assigned to a static `ngInjectorDef` field on a type, which will then be an\n * `InjectorType`.\n *\n * Options:\n *\n * * `factory`: an `InjectorType` is an instantiable type, so a zero argument `factory` function to\n *   create the type must be provided. If that factory function needs to inject arguments, it can\n *   use the `inject` function.\n * * `providers`: an optional array of providers to add to the injector. Each provider must\n *   either have a factory or point to a type which has an `ngInjectableDef` static property (the\n *   type must be an `InjectableType`).\n * * `imports`: an optional array of imports of other `InjectorType`s or `InjectorTypeWithModule`s\n *   whose providers will also be added to the injector. Locally provided types will override\n *   providers from imports.\n *\n * @experimental\n */\nfunction defineInjector(options) {\n    return {\n        factory: options.factory,\n        providers: options.providers || [],\n        imports: options.imports || [],\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Creates a token that can be used in a DI Provider.\n *\n * Use an `InjectionToken` whenever the type you are injecting is not reified (does not have a\n * runtime representation) such as when injecting an interface, callable type, array or\n * parametrized type.\n *\n * `InjectionToken` is parameterized on `T` which is the type of object which will be returned by\n * the `Injector`. This provides additional level of type safety.\n *\n * ```\n * interface MyInterface {...}\n * var myInterface = injector.get(new InjectionToken<MyInterface>('SomeToken'));\n * // myInterface is inferred to be MyInterface.\n * ```\n *\n * When creating an `InjectionToken`, you can optionally specify a factory function which returns\n * (possibly by creating) a default value of the parameterized type `T`. This sets up the\n * `InjectionToken` using this factory as a provider as if it was defined explicitly in the\n * application's root injector. If the factory function, which takes zero arguments, needs to inject\n * dependencies, it can do so using the `inject` function. See below for an example.\n *\n * Additionally, if a `factory` is specified you can also specify the `providedIn` option, which\n * overrides the above behavior and marks the token as belonging to a particular `@NgModule`. As\n * mentioned above, `'root'` is the default value for `providedIn`.\n *\n * ### Example\n *\n * #### Tree-shakeable InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='ShakeableInjectionToken'}\n *\n * #### Plain InjectionToken\n *\n * {@example core/di/ts/injector_spec.ts region='InjectionToken'}\n *\n * @stable\n */\nvar InjectionToken = /** @class */ (function () {\n    function InjectionToken(_desc, options) {\n        this._desc = _desc;\n        /** @internal */\n        this.ngMetadataName = 'InjectionToken';\n        if (options !== undefined) {\n            this.ngInjectableDef = defineInjectable({\n                providedIn: options.providedIn || 'root',\n                factory: options.factory,\n            });\n        }\n        else {\n            this.ngInjectableDef = undefined;\n        }\n    }\n    InjectionToken.prototype.toString = function () { return \"InjectionToken \" + this._desc; };\n    return InjectionToken;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ANNOTATIONS = '__annotations__';\nvar PARAMETERS = '__parameters__';\nvar PROP_METADATA = '__prop__metadata__';\n/**\n * @suppress {globalThis}\n */\nfunction makeDecorator(name, props, parentClass, chainFn, typeFn) {\n    var metaCtor = makeMetadataCtor(props);\n    function DecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof DecoratorFactory) {\n            metaCtor.call.apply(metaCtor, tslib_1.__spread([this], args));\n            return this;\n        }\n        var annotationInstance = new ((_a = DecoratorFactory).bind.apply(_a, tslib_1.__spread([void 0], args)))();\n        var TypeDecorator = function TypeDecorator(cls) {\n            typeFn && typeFn.apply(void 0, tslib_1.__spread([cls], args));\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var annotations = cls.hasOwnProperty(ANNOTATIONS) ?\n                cls[ANNOTATIONS] :\n                Object.defineProperty(cls, ANNOTATIONS, { value: [] })[ANNOTATIONS];\n            annotations.push(annotationInstance);\n            return cls;\n        };\n        if (chainFn)\n            chainFn(TypeDecorator);\n        return TypeDecorator;\n        var _a;\n    }\n    if (parentClass) {\n        DecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    DecoratorFactory.prototype.ngMetadataName = name;\n    DecoratorFactory.annotationCls = DecoratorFactory;\n    return DecoratorFactory;\n}\nfunction makeMetadataCtor(props) {\n    return function ctor() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (props) {\n            var values = props.apply(void 0, tslib_1.__spread(args));\n            for (var propName in values) {\n                this[propName] = values[propName];\n            }\n        }\n    };\n}\nfunction makeParamDecorator(name, props, parentClass) {\n    var metaCtor = makeMetadataCtor(props);\n    function ParamDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof ParamDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var annotationInstance = new ((_a = ParamDecoratorFactory).bind.apply(_a, tslib_1.__spread([void 0], args)))();\n        ParamDecorator.annotation = annotationInstance;\n        return ParamDecorator;\n        function ParamDecorator(cls, unusedKey, index) {\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var parameters = cls.hasOwnProperty(PARAMETERS) ?\n                cls[PARAMETERS] :\n                Object.defineProperty(cls, PARAMETERS, { value: [] })[PARAMETERS];\n            // there might be gaps if some in between parameters do not have annotations.\n            // we pad with nulls.\n            while (parameters.length <= index) {\n                parameters.push(null);\n            }\n            (parameters[index] = parameters[index] || []).push(annotationInstance);\n            return cls;\n        }\n        var _a;\n    }\n    if (parentClass) {\n        ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    ParamDecoratorFactory.prototype.ngMetadataName = name;\n    ParamDecoratorFactory.annotationCls = ParamDecoratorFactory;\n    return ParamDecoratorFactory;\n}\nfunction makePropDecorator(name, props, parentClass) {\n    var metaCtor = makeMetadataCtor(props);\n    function PropDecoratorFactory() {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        if (this instanceof PropDecoratorFactory) {\n            metaCtor.apply(this, args);\n            return this;\n        }\n        var decoratorInstance = new ((_a = PropDecoratorFactory).bind.apply(_a, tslib_1.__spread([void 0], args)))();\n        return function PropDecorator(target, name) {\n            var constructor = target.constructor;\n            // Use of Object.defineProperty is important since it creates non-enumerable property which\n            // prevents the property is copied during subclassing.\n            var meta = constructor.hasOwnProperty(PROP_METADATA) ?\n                constructor[PROP_METADATA] :\n                Object.defineProperty(constructor, PROP_METADATA, { value: {} })[PROP_METADATA];\n            meta[name] = meta.hasOwnProperty(name) && meta[name] || [];\n            meta[name].unshift(decoratorInstance);\n        };\n        var _a;\n    }\n    if (parentClass) {\n        PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n    }\n    PropDecoratorFactory.prototype.ngMetadataName = name;\n    PropDecoratorFactory.annotationCls = PropDecoratorFactory;\n    return PropDecoratorFactory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This token can be used to create a virtual provider that will populate the\n * `entryComponents` fields of components and ng modules based on its `useValue`.\n * All components that are referenced in the `useValue` value (either directly\n * or in a nested array or map) will be added to the `entryComponents` property.\n *\n * ### Example\n * The following example shows how the router can populate the `entryComponents`\n * field of an NgModule based on the router configuration which refers\n * to components.\n *\n * ```typescript\n * // helper function inside the router\n * function provideRoutes(routes) {\n *   return [\n *     {provide: ROUTES, useValue: routes},\n *     {provide: ANALYZE_FOR_ENTRY_COMPONENTS, useValue: routes, multi: true}\n *   ];\n * }\n *\n * // user code\n * let routes = [\n *   {path: '/root', component: RootComp},\n *   {path: '/teams', component: TeamsComp}\n * ];\n *\n * @NgModule({\n *   providers: [provideRoutes(routes)]\n * })\n * class ModuleWithRoutes {}\n * ```\n *\n * @experimental\n */\nvar ANALYZE_FOR_ENTRY_COMPONENTS = new InjectionToken('AnalyzeForEntryComponents');\n/**\n * Attribute decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nvar Attribute = makeParamDecorator('Attribute', function (attributeName) { return ({ attributeName: attributeName }); });\n/**\n * Base class for query metadata.\n *\n * See {@link ContentChildren}, {@link ContentChild}, {@link ViewChildren}, {@link ViewChild} for\n * more information.\n *\n * @stable\n */\nvar Query = /** @class */ (function () {\n    function Query() {\n    }\n    return Query;\n}());\n/**\n * ContentChildren decorator and metadata.\n *\n *  @stable\n *  @Annotation\n */\nvar ContentChildren = makePropDecorator('ContentChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (tslib_1.__assign({ selector: selector, first: false, isViewQuery: false, descendants: false }, data));\n}, Query);\n/**\n * ContentChild decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nvar ContentChild = makePropDecorator('ContentChild', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (tslib_1.__assign({ selector: selector, first: true, isViewQuery: false, descendants: true }, data));\n}, Query);\n/**\n * ViewChildren decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nvar ViewChildren = makePropDecorator('ViewChildren', function (selector, data) {\n    if (data === void 0) { data = {}; }\n    return (tslib_1.__assign({ selector: selector, first: false, isViewQuery: true, descendants: true }, data));\n}, Query);\n/**\n * ViewChild decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nvar ViewChild = makePropDecorator('ViewChild', function (selector, data) {\n    return (tslib_1.__assign({ selector: selector, first: true, isViewQuery: true, descendants: true }, data));\n}, Query);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Describes within the change detector which strategy will be used the next time change\n * detection is triggered.\n * @stable\n */\n/**\n * Describes within the change detector which strategy will be used the next time change\n * detection is triggered.\n * @stable\n */\n\n/**\n * Describes within the change detector which strategy will be used the next time change\n * detection is triggered.\n * @stable\n */\n(function (ChangeDetectionStrategy) {\n    /**\n     * `OnPush` means that the change detector's mode will be initially set to `CheckOnce`.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"OnPush\"] = 0] = \"OnPush\";\n    /**\n     * `Default` means that the change detector's mode will be initially set to `CheckAlways`.\n     */\n    ChangeDetectionStrategy[ChangeDetectionStrategy[\"Default\"] = 1] = \"Default\";\n})(exports.ChangeDetectionStrategy || (exports.ChangeDetectionStrategy = {}));\n/**\n * Describes the status of the detector.\n */\n/**\n * Describes the status of the detector.\n */\n\n/**\n * Describes the status of the detector.\n */\n(function (ChangeDetectorStatus) {\n    /**\n     * `CheckOnce` means that after calling detectChanges the mode of the change detector\n     * will become `Checked`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckOnce\"] = 0] = \"CheckOnce\";\n    /**\n     * `Checked` means that the change detector should be skipped until its mode changes to\n     * `CheckOnce`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Checked\"] = 1] = \"Checked\";\n    /**\n     * `CheckAlways` means that after calling detectChanges the mode of the change detector\n     * will remain `CheckAlways`.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"CheckAlways\"] = 2] = \"CheckAlways\";\n    /**\n     * `Detached` means that the change detector sub tree is not a part of the main tree and\n     * should be skipped.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Detached\"] = 3] = \"Detached\";\n    /**\n     * `Errored` means that the change detector encountered an error checking a binding\n     * or calling a directive lifecycle method and is now in an inconsistent state. Change\n     * detectors in this state will no longer detect changes.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Errored\"] = 4] = \"Errored\";\n    /**\n     * `Destroyed` means that the change detector is destroyed.\n     */\n    ChangeDetectorStatus[ChangeDetectorStatus[\"Destroyed\"] = 5] = \"Destroyed\";\n})(exports.ÉµChangeDetectorStatus || (exports.ÉµChangeDetectorStatus = {}));\nfunction isDefaultChangeDetectionStrategy(changeDetectionStrategy) {\n    return changeDetectionStrategy == null ||\n        changeDetectionStrategy === exports.ChangeDetectionStrategy.Default;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nvar Directive = makeDecorator('Directive', function (dir) {\n    if (dir === void 0) { dir = {}; }\n    return dir;\n});\n/**\n * Component decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nvar Component = makeDecorator('Component', function (c) {\n    if (c === void 0) { c = {}; }\n    return (tslib_1.__assign({ changeDetection: exports.ChangeDetectionStrategy.Default }, c));\n}, Directive);\n/**\n * Pipe decorator and metadata.\n *\n * Use the `@Pipe` annotation to declare that a given class is a pipe. A pipe\n * class must also implement {@link PipeTransform} interface.\n *\n * To use the pipe include a reference to the pipe class in\n * {@link NgModule#declarations}.\n *\n * @stable\n * @Annotation\n */\nvar Pipe = makeDecorator('Pipe', function (p) { return (tslib_1.__assign({ pure: true }, p)); });\n/**\n * Input decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nvar Input = makePropDecorator('Input', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * Output decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nvar Output = makePropDecorator('Output', function (bindingPropertyName) { return ({ bindingPropertyName: bindingPropertyName }); });\n/**\n * HostBinding decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nvar HostBinding = makePropDecorator('HostBinding', function (hostPropertyName) { return ({ hostPropertyName: hostPropertyName }); });\n/**\n * HostListener decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nvar HostListener = makePropDecorator('HostListener', function (eventName, args) { return ({ eventName: eventName, args: args }); });\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @whatItDoes Represents a type that a Component or other object is instances of.\n *\n * @description\n *\n * An example of a `Type` is `MyCustomComponent` class, which in JavaScript is be represented by\n * the `MyCustomComponent` constructor function.\n *\n * @stable\n */\nvar Type = Function;\nfunction isType(v) {\n    return typeof v === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __window = typeof window !== 'undefined' && window;\nvar __self = typeof self !== 'undefined' && typeof WorkerGlobalScope !== 'undefined' &&\n    self instanceof WorkerGlobalScope && self;\nvar __global = typeof global !== 'undefined' && global;\nvar _global = __window || __global || __self;\nvar promise = Promise.resolve(0);\nvar _symbolIterator = null;\nfunction getSymbolIterator() {\n    if (!_symbolIterator) {\n        var Symbol_1 = _global['Symbol'];\n        if (Symbol_1 && Symbol_1.iterator) {\n            _symbolIterator = Symbol_1.iterator;\n        }\n        else {\n            // es6-shim specific logic\n            var keys = Object.getOwnPropertyNames(Map.prototype);\n            for (var i = 0; i < keys.length; ++i) {\n                var key = keys[i];\n                if (key !== 'entries' && key !== 'size' &&\n                    Map.prototype[key] === Map.prototype['entries']) {\n                    _symbolIterator = key;\n                }\n            }\n        }\n    }\n    return _symbolIterator;\n}\nfunction scheduleMicroTask(fn) {\n    if (typeof Zone === 'undefined') {\n        // use promise to schedule microTask instead of use Zone\n        promise.then(function () { fn && fn.apply(null, null); });\n    }\n    else {\n        Zone.current.scheduleMicroTask('scheduleMicrotask', fn);\n    }\n}\n// JS has NaN !== NaN\nfunction looseIdentical(a, b) {\n    return a === b || typeof a === 'number' && typeof b === 'number' && isNaN(a) && isNaN(b);\n}\nfunction stringify(token) {\n    if (typeof token === 'string') {\n        return token;\n    }\n    if (token instanceof Array) {\n        return '[' + token.map(stringify).join(', ') + ']';\n    }\n    if (token == null) {\n        return '' + token;\n    }\n    if (token.overriddenName) {\n        return \"\" + token.overriddenName;\n    }\n    if (token.name) {\n        return \"\" + token.name;\n    }\n    var res = token.toString();\n    if (res == null) {\n        return '' + res;\n    }\n    var newLineIndex = res.indexOf('\\n');\n    return newLineIndex === -1 ? res : res.substring(0, newLineIndex);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Attention: These regex has to hold even if the code is minified!\n */\nvar DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\nvar INHERITED_CLASS = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{/;\nvar INHERITED_CLASS_WITH_CTOR = /^class\\s+[A-Za-z\\d$_]*\\s*extends\\s+[A-Za-z\\d$_]+\\s*{[\\s\\S]*constructor\\s*\\(/;\nvar ReflectionCapabilities = /** @class */ (function () {\n    function ReflectionCapabilities(reflect) {\n        this._reflect = reflect || _global['Reflect'];\n    }\n    ReflectionCapabilities.prototype.isReflectionEnabled = function () { return true; };\n    ReflectionCapabilities.prototype.factory = function (t) { return function () {\n        var args = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            args[_i] = arguments[_i];\n        }\n        return new (t.bind.apply(t, tslib_1.__spread([void 0], args)))();\n    }; };\n    /** @internal */\n    /** @internal */\n    ReflectionCapabilities.prototype._zipTypesAndAnnotations = /** @internal */\n    function (paramTypes, paramAnnotations) {\n        var result;\n        if (typeof paramTypes === 'undefined') {\n            result = new Array(paramAnnotations.length);\n        }\n        else {\n            result = new Array(paramTypes.length);\n        }\n        for (var i = 0; i < result.length; i++) {\n            // TS outputs Object for parameters without types, while Traceur omits\n            // the annotations. For now we preserve the Traceur behavior to aid\n            // migration, but this can be revisited.\n            if (typeof paramTypes === 'undefined') {\n                result[i] = [];\n            }\n            else if (paramTypes[i] != Object) {\n                result[i] = [paramTypes[i]];\n            }\n            else {\n                result[i] = [];\n            }\n            if (paramAnnotations && paramAnnotations[i] != null) {\n                result[i] = result[i].concat(paramAnnotations[i]);\n            }\n        }\n        return result;\n    };\n    ReflectionCapabilities.prototype._ownParameters = function (type, parentCtor) {\n        var typeStr = type.toString();\n        // If we have no decorators, we only have function.length as metadata.\n        // In that case, to detect whether a child class declared an own constructor or not,\n        // we need to look inside of that constructor to check whether it is\n        // just calling the parent.\n        // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n        // that sets 'design:paramtypes' to []\n        // if a class inherits from another class but has no ctor declared itself.\n        if (DELEGATE_CTOR.exec(typeStr) ||\n            (INHERITED_CLASS.exec(typeStr) && !INHERITED_CLASS_WITH_CTOR.exec(typeStr))) {\n            return null;\n        }\n        // Prefer the direct API.\n        if (type.parameters && type.parameters !== parentCtor.parameters) {\n            return type.parameters;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        var tsickleCtorParams = type.ctorParameters;\n        if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n            // Newer tsickle uses a function closure\n            // Retain the non-function case for compatibility with older tsickle\n            var ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n            var paramTypes_1 = ctorParameters.map(function (ctorParam) { return ctorParam && ctorParam.type; });\n            var paramAnnotations_1 = ctorParameters.map(function (ctorParam) {\n                return ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators);\n            });\n            return this._zipTypesAndAnnotations(paramTypes_1, paramAnnotations_1);\n        }\n        // API for metadata created by invoking the decorators.\n        var paramAnnotations = type.hasOwnProperty(PARAMETERS) && type[PARAMETERS];\n        var paramTypes = this._reflect && this._reflect.getOwnMetadata &&\n            this._reflect.getOwnMetadata('design:paramtypes', type);\n        if (paramTypes || paramAnnotations) {\n            return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n        }\n        // If a class has no decorators, at least create metadata\n        // based on function.length.\n        // Note: We know that this is a real constructor as we checked\n        // the content of the constructor above.\n        return new Array(type.length).fill(undefined);\n    };\n    ReflectionCapabilities.prototype.parameters = function (type) {\n        // Note: only report metadata if we have at least one class decorator\n        // to stay in sync with the static reflector.\n        if (!isType(type)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(type);\n        var parameters = this._ownParameters(type, parentCtor);\n        if (!parameters && parentCtor !== Object) {\n            parameters = this.parameters(parentCtor);\n        }\n        return parameters || [];\n    };\n    ReflectionCapabilities.prototype._ownAnnotations = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.annotations && typeOrFunc.annotations !== parentCtor.annotations) {\n            var annotations = typeOrFunc.annotations;\n            if (typeof annotations === 'function' && annotations.annotations) {\n                annotations = annotations.annotations;\n            }\n            return annotations;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.decorators && typeOrFunc.decorators !== parentCtor.decorators) {\n            return convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators);\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(ANNOTATIONS)) {\n            return typeOrFunc[ANNOTATIONS];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.annotations = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return [];\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n        var parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n        return parentAnnotations.concat(ownAnnotations);\n    };\n    ReflectionCapabilities.prototype._ownPropMetadata = function (typeOrFunc, parentCtor) {\n        // Prefer the direct API.\n        if (typeOrFunc.propMetadata &&\n            typeOrFunc.propMetadata !== parentCtor.propMetadata) {\n            var propMetadata = typeOrFunc.propMetadata;\n            if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n                propMetadata = propMetadata.propMetadata;\n            }\n            return propMetadata;\n        }\n        // API of tsickle for lowering decorators to properties on the class.\n        if (typeOrFunc.propDecorators &&\n            typeOrFunc.propDecorators !== parentCtor.propDecorators) {\n            var propDecorators_1 = typeOrFunc.propDecorators;\n            var propMetadata_1 = {};\n            Object.keys(propDecorators_1).forEach(function (prop) {\n                propMetadata_1[prop] = convertTsickleDecoratorIntoMetadata(propDecorators_1[prop]);\n            });\n            return propMetadata_1;\n        }\n        // API for metadata created by invoking the decorators.\n        if (typeOrFunc.hasOwnProperty(PROP_METADATA)) {\n            return typeOrFunc[PROP_METADATA];\n        }\n        return null;\n    };\n    ReflectionCapabilities.prototype.propMetadata = function (typeOrFunc) {\n        if (!isType(typeOrFunc)) {\n            return {};\n        }\n        var parentCtor = getParentCtor(typeOrFunc);\n        var propMetadata = {};\n        if (parentCtor !== Object) {\n            var parentPropMetadata_1 = this.propMetadata(parentCtor);\n            Object.keys(parentPropMetadata_1).forEach(function (propName) {\n                propMetadata[propName] = parentPropMetadata_1[propName];\n            });\n        }\n        var ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n        if (ownPropMetadata) {\n            Object.keys(ownPropMetadata).forEach(function (propName) {\n                var decorators = [];\n                if (propMetadata.hasOwnProperty(propName)) {\n                    decorators.push.apply(decorators, tslib_1.__spread(propMetadata[propName]));\n                }\n                decorators.push.apply(decorators, tslib_1.__spread(ownPropMetadata[propName]));\n                propMetadata[propName] = decorators;\n            });\n        }\n        return propMetadata;\n    };\n    ReflectionCapabilities.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return type instanceof Type && lcProperty in type.prototype;\n    };\n    ReflectionCapabilities.prototype.guards = function (type) { return {}; };\n    ReflectionCapabilities.prototype.getter = function (name) { return new Function('o', 'return o.' + name + ';'); };\n    ReflectionCapabilities.prototype.setter = function (name) {\n        return new Function('o', 'v', 'return o.' + name + ' = v;');\n    };\n    ReflectionCapabilities.prototype.method = function (name) {\n        var functionBody = \"if (!o.\" + name + \") throw new Error('\\\"\" + name + \"\\\" is undefined');\\n        return o.\" + name + \".apply(o, args);\";\n        return new Function('o', 'args', functionBody);\n    };\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    ReflectionCapabilities.prototype.importUri = \n    // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n    function (type) {\n        // StaticSymbol\n        if (typeof type === 'object' && type['filePath']) {\n            return type['filePath'];\n        }\n        // Runtime type\n        return \"./\" + stringify(type);\n    };\n    ReflectionCapabilities.prototype.resourceUri = function (type) { return \"./\" + stringify(type); };\n    ReflectionCapabilities.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return runtime;\n    };\n    ReflectionCapabilities.prototype.resolveEnum = function (enumIdentifier, name) { return enumIdentifier[name]; };\n    return ReflectionCapabilities;\n}());\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations) {\n    if (!decoratorInvocations) {\n        return [];\n    }\n    return decoratorInvocations.map(function (decoratorInvocation) {\n        var decoratorType = decoratorInvocation.type;\n        var annotationCls = decoratorType.annotationCls;\n        var annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n        return new (annotationCls.bind.apply(annotationCls, tslib_1.__spread([void 0], annotationArgs)))();\n    });\n}\nfunction getParentCtor(ctor) {\n    var parentProto = ctor.prototype ? Object.getPrototypeOf(ctor.prototype) : null;\n    var parentCtor = parentProto ? parentProto.constructor : null;\n    // Note: We always use `Object` as the null value\n    // to simplify checking later on.\n    return parentCtor || Object;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction getClosureSafeProperty(objWithPropertyToExtract, target) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === target) {\n            return key;\n        }\n    }\n    throw Error('Could not find renamed property on target object.');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Allows to refer to references which are not yet defined.\n *\n * For instance, `forwardRef` is used when the `token` which we need to refer to for the purposes of\n * DI is declared,\n * but not yet defined. It is also used when the `token` which we use when creating a query is not\n * yet defined.\n *\n * ### Example\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='forward_ref'}\n * @experimental\n */\nfunction forwardRef(forwardRefFn) {\n    forwardRefFn.__forward_ref__ = forwardRef;\n    forwardRefFn.toString = function () { return stringify(this()); };\n    return forwardRefFn;\n}\n/**\n * Lazily retrieves the reference value from a forwardRef.\n *\n * Acts as the identity function when given a non-forward-ref value.\n *\n * ### Example ([live demo](http://plnkr.co/edit/GU72mJrk1fiodChcmiDR?p=preview))\n *\n * {@example core/di/ts/forward_ref/forward_ref_spec.ts region='resolve_forward_ref'}\n *\n * See: {@link forwardRef}\n * @experimental\n */\nfunction resolveForwardRef(type) {\n    if (typeof type === 'function' && type.hasOwnProperty('__forward_ref__') &&\n        type.__forward_ref__ === forwardRef) {\n        return type();\n    }\n    else {\n        return type;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Inject decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nvar Inject = makeParamDecorator('Inject', function (token) { return ({ token: token }); });\n/**\n * Optional decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nvar Optional = makeParamDecorator('Optional');\n/**\n * Self decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nvar Self = makeParamDecorator('Self');\n/**\n * SkipSelf decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nvar SkipSelf = makeParamDecorator('SkipSelf');\n/**\n * Host decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nvar Host = makeParamDecorator('Host');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar SOURCE = '__source';\nvar _THROW_IF_NOT_FOUND = new Object();\nvar THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n/**\n * An InjectionToken that gets the current `Injector` for `createInjector()`-style injectors.\n *\n * Requesting this token instead of `Injector` allows `StaticInjector` to be tree-shaken from a\n * project.\n *\n * @experimental\n */\nvar INJECTOR = new InjectionToken('INJECTOR');\nvar NullInjector = /** @class */ (function () {\n    function NullInjector() {\n    }\n    NullInjector.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = _THROW_IF_NOT_FOUND; }\n        if (notFoundValue === _THROW_IF_NOT_FOUND) {\n            throw new Error(\"NullInjectorError: No provider for \" + stringify(token) + \"!\");\n        }\n        return notFoundValue;\n    };\n    return NullInjector;\n}());\n/**\n * @whatItDoes Injector interface\n * @howToUse\n * ```\n * const injector: Injector = ...;\n * injector.get(...);\n * ```\n *\n * @description\n * For more details, see the {@linkDocs guide/dependency-injection \"Dependency Injection Guide\"}.\n *\n * ### Example\n *\n * {@example core/di/ts/injector_spec.ts region='Injector'}\n *\n * `Injector` returns itself when given `Injector` as a token:\n * {@example core/di/ts/injector_spec.ts region='injectInjector'}\n *\n * @stable\n */\nvar Injector = /** @class */ (function () {\n    function Injector() {\n    }\n    /**\n     * Create a new Injector which is configure using `StaticProvider`s.\n     *\n     * ### Example\n     *\n     * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n     */\n    /**\n       * Create a new Injector which is configure using `StaticProvider`s.\n       *\n       * ### Example\n       *\n       * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n       */\n    Injector.create = /**\n       * Create a new Injector which is configure using `StaticProvider`s.\n       *\n       * ### Example\n       *\n       * {@example core/di/ts/provider_spec.ts region='ConstructorProvider'}\n       */\n    function (options, parent) {\n        if (Array.isArray(options)) {\n            return new StaticInjector(options, parent);\n        }\n        else {\n            return new StaticInjector(options.providers, options.parent, options.name || null);\n        }\n    };\n    Injector.THROW_IF_NOT_FOUND = _THROW_IF_NOT_FOUND;\n    Injector.NULL = new NullInjector();\n    Injector.ngInjectableDef = defineInjectable({\n        providedIn: 'any',\n        factory: function () { return inject(INJECTOR); },\n    });\n    return Injector;\n}());\nvar IDENT = function (value) {\n    return value;\n};\nvar EMPTY = [];\nvar CIRCULAR = IDENT;\nvar MULTI_PROVIDER_FN = function () {\n    return Array.prototype.slice.call(arguments);\n};\nvar GET_PROPERTY_NAME$1 = {};\nvar USE_VALUE$1 = getClosureSafeProperty$1({ provide: String, useValue: GET_PROPERTY_NAME$1 });\nvar NG_TOKEN_PATH = 'ngTokenPath';\nvar NG_TEMP_TOKEN_PATH = 'ngTempTokenPath';\nvar NULL_INJECTOR = Injector.NULL;\nvar NEW_LINE = /\\n/gm;\nvar NO_NEW_LINE = 'Éµ';\nvar StaticInjector = /** @class */ (function () {\n    function StaticInjector(providers, parent, source) {\n        if (parent === void 0) { parent = NULL_INJECTOR; }\n        if (source === void 0) { source = null; }\n        this.parent = parent;\n        this.source = source;\n        var records = this._records = new Map();\n        records.set(Injector, { token: Injector, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        records.set(INJECTOR, { token: INJECTOR, fn: IDENT, deps: EMPTY, value: this, useNew: false });\n        recursivelyProcessProviders(records, providers);\n    }\n    StaticInjector.prototype.get = function (token, notFoundValue, flags) {\n        if (flags === void 0) { flags = 0 /* Default */; }\n        var record = this._records.get(token);\n        try {\n            return tryResolveToken(token, record, this._records, this.parent, notFoundValue, flags);\n        }\n        catch (e) {\n            var tokenPath = e[NG_TEMP_TOKEN_PATH];\n            if (token[SOURCE]) {\n                tokenPath.unshift(token[SOURCE]);\n            }\n            e.message = formatError('\\n' + e.message, tokenPath, this.source);\n            e[NG_TOKEN_PATH] = tokenPath;\n            e[NG_TEMP_TOKEN_PATH] = null;\n            throw e;\n        }\n    };\n    StaticInjector.prototype.toString = function () {\n        var tokens = [], records = this._records;\n        records.forEach(function (v, token) { return tokens.push(stringify(token)); });\n        return \"StaticInjector[\" + tokens.join(', ') + \"]\";\n    };\n    return StaticInjector;\n}());\nfunction resolveProvider(provider) {\n    var deps = computeDeps(provider);\n    var fn = IDENT;\n    var value = EMPTY;\n    var useNew = false;\n    var provide = resolveForwardRef(provider.provide);\n    if (USE_VALUE$1 in provider) {\n        // We need to use USE_VALUE in provider since provider.useValue could be defined as undefined.\n        value = provider.useValue;\n    }\n    else if (provider.useFactory) {\n        fn = provider.useFactory;\n    }\n    else if (provider.useExisting) {\n        // Just use IDENT\n    }\n    else if (provider.useClass) {\n        useNew = true;\n        fn = resolveForwardRef(provider.useClass);\n    }\n    else if (typeof provide == 'function') {\n        useNew = true;\n        fn = provide;\n    }\n    else {\n        throw staticError('StaticProvider does not have [useValue|useFactory|useExisting|useClass] or [provide] is not newable', provider);\n    }\n    return { deps: deps, fn: fn, useNew: useNew, value: value };\n}\nfunction multiProviderMixError(token) {\n    return staticError('Cannot mix multi providers and regular providers', token);\n}\nfunction recursivelyProcessProviders(records, provider) {\n    if (provider) {\n        provider = resolveForwardRef(provider);\n        if (provider instanceof Array) {\n            // if we have an array recurse into the array\n            for (var i = 0; i < provider.length; i++) {\n                recursivelyProcessProviders(records, provider[i]);\n            }\n        }\n        else if (typeof provider === 'function') {\n            // Functions were supported in ReflectiveInjector, but are not here. For safety give useful\n            // error messages\n            throw staticError('Function/Class not supported', provider);\n        }\n        else if (provider && typeof provider === 'object' && provider.provide) {\n            // At this point we have what looks like a provider: {provide: ?, ....}\n            var token = resolveForwardRef(provider.provide);\n            var resolvedProvider = resolveProvider(provider);\n            if (provider.multi === true) {\n                // This is a multi provider.\n                var multiProvider = records.get(token);\n                if (multiProvider) {\n                    if (multiProvider.fn !== MULTI_PROVIDER_FN) {\n                        throw multiProviderMixError(token);\n                    }\n                }\n                else {\n                    // Create a placeholder factory which will look up the constituents of the multi provider.\n                    records.set(token, multiProvider = {\n                        token: provider.provide,\n                        deps: [],\n                        useNew: false,\n                        fn: MULTI_PROVIDER_FN,\n                        value: EMPTY\n                    });\n                }\n                // Treat the provider as the token.\n                token = provider;\n                multiProvider.deps.push({ token: token, options: 6 /* Default */ });\n            }\n            var record = records.get(token);\n            if (record && record.fn == MULTI_PROVIDER_FN) {\n                throw multiProviderMixError(token);\n            }\n            records.set(token, resolvedProvider);\n        }\n        else {\n            throw staticError('Unexpected provider', provider);\n        }\n    }\n}\nfunction tryResolveToken(token, record, records, parent, notFoundValue, flags) {\n    try {\n        return resolveToken(token, record, records, parent, notFoundValue, flags);\n    }\n    catch (e) {\n        // ensure that 'e' is of type Error.\n        if (!(e instanceof Error)) {\n            e = new Error(e);\n        }\n        var path = e[NG_TEMP_TOKEN_PATH] = e[NG_TEMP_TOKEN_PATH] || [];\n        path.unshift(token);\n        if (record && record.value == CIRCULAR) {\n            // Reset the Circular flag.\n            record.value = EMPTY;\n        }\n        throw e;\n    }\n}\nfunction resolveToken(token, record, records, parent, notFoundValue, flags) {\n    var value;\n    if (record && !(flags & 1 /* SkipSelf */)) {\n        // If we don't have a record, this implies that we don't own the provider hence don't know how\n        // to resolve it.\n        value = record.value;\n        if (value == CIRCULAR) {\n            throw Error(NO_NEW_LINE + 'Circular dependency');\n        }\n        else if (value === EMPTY) {\n            record.value = CIRCULAR;\n            var obj = undefined;\n            var useNew = record.useNew;\n            var fn = record.fn;\n            var depRecords = record.deps;\n            var deps = EMPTY;\n            if (depRecords.length) {\n                deps = [];\n                for (var i = 0; i < depRecords.length; i++) {\n                    var depRecord = depRecords[i];\n                    var options = depRecord.options;\n                    var childRecord = options & 2 /* CheckSelf */ ? records.get(depRecord.token) : undefined;\n                    deps.push(tryResolveToken(\n                    // Current Token to resolve\n                    depRecord.token, childRecord, records, \n                    // If we don't know how to resolve dependency and we should not check parent for it,\n                    // than pass in Null injector.\n                    !childRecord && !(options & 4 /* CheckParent */) ? NULL_INJECTOR : parent, options & 1 /* Optional */ ? null : Injector.THROW_IF_NOT_FOUND, 0 /* Default */));\n                }\n            }\n            record.value = value = useNew ? new ((_a = fn).bind.apply(_a, tslib_1.__spread([void 0], deps)))() : fn.apply(obj, deps);\n        }\n    }\n    else if (!(flags & 2 /* Self */)) {\n        value = parent.get(token, notFoundValue, 0 /* Default */);\n    }\n    return value;\n    var _a;\n}\nfunction computeDeps(provider) {\n    var deps = EMPTY;\n    var providerDeps = provider.deps;\n    if (providerDeps && providerDeps.length) {\n        deps = [];\n        for (var i = 0; i < providerDeps.length; i++) {\n            var options = 6;\n            var token = resolveForwardRef(providerDeps[i]);\n            if (token instanceof Array) {\n                for (var j = 0, annotations = token; j < annotations.length; j++) {\n                    var annotation = annotations[j];\n                    if (annotation instanceof Optional || annotation == Optional) {\n                        options = options | 1 /* Optional */;\n                    }\n                    else if (annotation instanceof SkipSelf || annotation == SkipSelf) {\n                        options = options & ~2 /* CheckSelf */;\n                    }\n                    else if (annotation instanceof Self || annotation == Self) {\n                        options = options & ~4 /* CheckParent */;\n                    }\n                    else if (annotation instanceof Inject) {\n                        token = annotation.token;\n                    }\n                    else {\n                        token = resolveForwardRef(annotation);\n                    }\n                }\n            }\n            deps.push({ token: token, options: options });\n        }\n    }\n    else if (provider.useExisting) {\n        var token = resolveForwardRef(provider.useExisting);\n        deps = [{ token: token, options: 6 /* Default */ }];\n    }\n    else if (!providerDeps && !(USE_VALUE$1 in provider)) {\n        // useValue & useExisting are the only ones which are exempt from deps all others need it.\n        throw staticError('\\'deps\\' required', provider);\n    }\n    return deps;\n}\nfunction formatError(text, obj, source) {\n    if (source === void 0) { source = null; }\n    text = text && text.charAt(0) === '\\n' && text.charAt(1) == NO_NEW_LINE ? text.substr(2) : text;\n    var context = stringify(obj);\n    if (obj instanceof Array) {\n        context = obj.map(stringify).join(' -> ');\n    }\n    else if (typeof obj === 'object') {\n        var parts = [];\n        for (var key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                var value = obj[key];\n                parts.push(key + ':' + (typeof value === 'string' ? JSON.stringify(value) : stringify(value)));\n            }\n        }\n        context = \"{\" + parts.join(', ') + \"}\";\n    }\n    return \"StaticInjectorError\" + (source ? '(' + source + ')' : '') + \"[\" + context + \"]: \" + text.replace(NEW_LINE, '\\n  ');\n}\nfunction staticError(text, obj) {\n    return new Error(formatError(text, obj));\n}\nfunction getClosureSafeProperty$1(objWithPropertyToExtract) {\n    for (var key in objWithPropertyToExtract) {\n        if (objWithPropertyToExtract[key] === GET_PROPERTY_NAME$1) {\n            return key;\n        }\n    }\n    throw Error('!prop');\n}\nvar _currentInjector = null;\nfunction setCurrentInjector(injector) {\n    var former = _currentInjector;\n    _currentInjector = injector;\n    return former;\n}\nfunction inject(token, notFoundValue, flags) {\n    if (flags === void 0) { flags = 0 /* Default */; }\n    if (_currentInjector === null) {\n        throw new Error(\"inject() must be called from an injection context\");\n    }\n    return _currentInjector.get(token, notFoundValue, flags);\n}\nfunction injectArgs(types) {\n    var args = [];\n    for (var i = 0; i < types.length; i++) {\n        var arg = types[i];\n        if (Array.isArray(arg)) {\n            if (arg.length === 0) {\n                throw new Error('Arguments array must have arguments.');\n            }\n            var type = undefined;\n            var defaultValue = undefined;\n            for (var j = 0; j < arg.length; j++) {\n                var meta = arg[j];\n                if (meta instanceof Optional || meta.__proto__.ngMetadataName === 'Optional') {\n                    defaultValue = null;\n                }\n                else if (meta instanceof SkipSelf || meta.__proto__.ngMetadataName === 'SkipSelf') {\n                    \n                }\n                else if (meta instanceof Self || meta.__proto__.ngMetadataName === 'Self') {\n                    \n                }\n                else if (meta instanceof Inject) {\n                    type = meta.token;\n                }\n                else {\n                    type = meta;\n                }\n            }\n            args.push(inject((type), defaultValue, 0 /* Default */));\n        }\n        else {\n            args.push(inject(arg));\n        }\n    }\n    return args;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar GET_PROPERTY_NAME = {};\nvar Éµ0 = GET_PROPERTY_NAME;\nvar USE_VALUE = getClosureSafeProperty({ provide: String, useValue: Éµ0 }, GET_PROPERTY_NAME);\nvar EMPTY_ARRAY = [];\nfunction convertInjectableProviderToFactory(type, provider) {\n    if (!provider) {\n        var reflectionCapabilities = new ReflectionCapabilities();\n        var deps_1 = reflectionCapabilities.parameters(type);\n        // TODO - convert to flags.\n        return function () { return new (type.bind.apply(type, tslib_1.__spread([void 0], injectArgs(deps_1))))(); };\n    }\n    if (USE_VALUE in provider) {\n        var valueProvider_1 = provider;\n        return function () { return valueProvider_1.useValue; };\n    }\n    else if (provider.useExisting) {\n        var existingProvider_1 = provider;\n        return function () { return inject(existingProvider_1.useExisting); };\n    }\n    else if (provider.useFactory) {\n        var factoryProvider_1 = provider;\n        return function () { return factoryProvider_1.useFactory.apply(factoryProvider_1, tslib_1.__spread(injectArgs(factoryProvider_1.deps || EMPTY_ARRAY))); };\n    }\n    else if (provider.useClass) {\n        var classProvider_1 = provider;\n        var deps_2 = provider.deps;\n        if (!deps_2) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_2 = reflectionCapabilities.parameters(type);\n        }\n        return function () {\n            return new ((_a = classProvider_1.useClass).bind.apply(_a, tslib_1.__spread([void 0], injectArgs(deps_2))))();\n            var _a;\n        };\n    }\n    else {\n        var deps_3 = provider.deps;\n        if (!deps_3) {\n            var reflectionCapabilities = new ReflectionCapabilities();\n            deps_3 = reflectionCapabilities.parameters(type);\n        }\n        return function () { return new (type.bind.apply(type, tslib_1.__spread([void 0], injectArgs((deps_3)))))(); };\n    }\n}\n/**\n* Injectable decorator and metadata.\n*\n* @stable\n* @Annotation\n*/\nvar Injectable = makeDecorator('Injectable', undefined, undefined, undefined, function (injectableType, options) {\n    if (options && options.providedIn !== undefined &&\n        injectableType.ngInjectableDef === undefined) {\n        injectableType.ngInjectableDef = defineInjectable({\n            providedIn: options.providedIn,\n            factory: convertInjectableProviderToFactory(injectableType, options)\n        });\n    }\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines a schema that will allow:\n * - any non-Angular elements with a `-` in their name,\n * - any properties on elements with a `-` in their name which is the common rule for custom\n * elements.\n *\n * @stable\n */\nvar CUSTOM_ELEMENTS_SCHEMA = {\n    name: 'custom-elements'\n};\n/**\n * Defines a schema that will allow any property on any element.\n *\n * @experimental\n */\nvar NO_ERRORS_SCHEMA = {\n    name: 'no-errors-schema'\n};\n/**\n * NgModule decorator and metadata.\n *\n * @stable\n * @Annotation\n */\nvar NgModule = makeDecorator('NgModule', function (ngModule) { return ngModule; }, undefined, undefined, function (moduleType, metadata) {\n    var imports = (metadata && metadata.imports) || [];\n    if (metadata && metadata.exports) {\n        imports = tslib_1.__spread(imports, [metadata.exports]);\n    }\n    moduleType.ngInjectorDef = defineInjector({\n        factory: convertInjectableProviderToFactory(moduleType, { useClass: moduleType }),\n        providers: metadata && metadata.providers,\n        imports: imports,\n    });\n});\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Defines template and style encapsulation options available for Component's {@link Component}.\n *\n * See {@link Component#encapsulation encapsulation}.\n * @stable\n */\n/**\n * Defines template and style encapsulation options available for Component's {@link Component}.\n *\n * See {@link Component#encapsulation encapsulation}.\n * @stable\n */\n\n/**\n * Defines template and style encapsulation options available for Component's {@link Component}.\n *\n * See {@link Component#encapsulation encapsulation}.\n * @stable\n */\n(function (ViewEncapsulation) {\n    /**\n     * Emulate `Native` scoping of styles by adding an attribute containing surrogate id to the Host\n     * Element and pre-processing the style rules provided via {@link Component#styles styles} or\n     * {@link Component#styleUrls styleUrls}, and adding the new Host Element attribute to all\n     * selectors.\n     *\n     * This is the default option.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Emulated\"] = 0] = \"Emulated\";\n    /**\n     * Use the native encapsulation mechanism of the renderer.\n     *\n     * For the DOM this means using [Shadow DOM](https://w3c.github.io/webcomponents/spec/shadow/) and\n     * creating a ShadowRoot for Component's Host Element.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"Native\"] = 1] = \"Native\";\n    /**\n     * Don't provide any template or style encapsulation.\n     */\n    ViewEncapsulation[ViewEncapsulation[\"None\"] = 2] = \"None\";\n})(exports.ViewEncapsulation || (exports.ViewEncapsulation = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @whatItDoes Represents the version of Angular\n *\n * @stable\n */\nvar Version = /** @class */ (function () {\n    function Version(full) {\n        this.full = full;\n        this.major = full.split('.')[0];\n        this.minor = full.split('.')[1];\n        this.patch = full.split('.').slice(2).join('.');\n    }\n    return Version;\n}());\n/**\n * @stable\n */\nvar VERSION = new Version('6.0.0-rc.1');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar ERROR_DEBUG_CONTEXT = 'ngDebugContext';\nvar ERROR_ORIGINAL_ERROR = 'ngOriginalError';\nvar ERROR_LOGGER = 'ngErrorLogger';\n\nfunction getDebugContext(error) {\n    return error[ERROR_DEBUG_CONTEXT];\n}\nfunction getOriginalError(error) {\n    return error[ERROR_ORIGINAL_ERROR];\n}\nfunction getErrorLogger(error) {\n    return error[ERROR_LOGGER] || defaultErrorLogger;\n}\nfunction defaultErrorLogger(console) {\n    var values = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        values[_i - 1] = arguments[_i];\n    }\n    console.error.apply(console, tslib_1.__spread(values));\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @whatItDoes Provides a hook for centralized exception handling.\n *\n * @description\n *\n * The default implementation of `ErrorHandler` prints error messages to the `console`. To\n * intercept error handling, write a custom exception handler that replaces this default as\n * appropriate for your app.\n *\n * ### Example\n *\n * ```\n * class MyErrorHandler implements ErrorHandler {\n *   handleError(error) {\n *     // do something with the exception\n *   }\n * }\n *\n * @NgModule({\n *   providers: [{provide: ErrorHandler, useClass: MyErrorHandler}]\n * })\n * class MyModule {}\n * ```\n *\n * @stable\n */\nvar ErrorHandler = /** @class */ (function () {\n    function ErrorHandler() {\n        /**\n           * @internal\n           */\n        this._console = console;\n    }\n    ErrorHandler.prototype.handleError = function (error) {\n        var originalError = this._findOriginalError(error);\n        var context = this._findContext(error);\n        // Note: Browser consoles show the place from where console.error was called.\n        // We can use this to give users additional information about the error.\n        var errorLogger = getErrorLogger(error);\n        errorLogger(this._console, \"ERROR\", error);\n        if (originalError) {\n            errorLogger(this._console, \"ORIGINAL ERROR\", originalError);\n        }\n        if (context) {\n            errorLogger(this._console, 'ERROR CONTEXT', context);\n        }\n    };\n    /** @internal */\n    /** @internal */\n    ErrorHandler.prototype._findContext = /** @internal */\n    function (error) {\n        if (error) {\n            return getDebugContext(error) ? getDebugContext(error) :\n                this._findContext(getOriginalError(error));\n        }\n        return null;\n    };\n    /** @internal */\n    /** @internal */\n    ErrorHandler.prototype._findOriginalError = /** @internal */\n    function (error) {\n        var e = getOriginalError(error);\n        while (e && getOriginalError(e)) {\n            e = getOriginalError(e);\n        }\n        return e;\n    };\n    return ErrorHandler;\n}());\nfunction wrappedError(message, originalError) {\n    var msg = message + \" caused by: \" + (originalError instanceof Error ? originalError.message : originalError);\n    var error = Error(msg);\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction findFirstClosedCycle(keys) {\n    var res = [];\n    for (var i = 0; i < keys.length; ++i) {\n        if (res.indexOf(keys[i]) > -1) {\n            res.push(keys[i]);\n            return res;\n        }\n        res.push(keys[i]);\n    }\n    return res;\n}\nfunction constructResolvingPath(keys) {\n    if (keys.length > 1) {\n        var reversed = findFirstClosedCycle(keys.slice().reverse());\n        var tokenStrs = reversed.map(function (k) { return stringify(k.token); });\n        return ' (' + tokenStrs.join(' -> ') + ')';\n    }\n    return '';\n}\nfunction injectionError(injector, key, constructResolvingMessage, originalError) {\n    var keys = [key];\n    var errMsg = constructResolvingMessage(keys);\n    var error = (originalError ? wrappedError(errMsg, originalError) : Error(errMsg));\n    error.addKey = addKey;\n    error.keys = keys;\n    error.injectors = [injector];\n    error.constructResolvingMessage = constructResolvingMessage;\n    error[ERROR_ORIGINAL_ERROR] = originalError;\n    return error;\n}\nfunction addKey(injector, key) {\n    this.injectors.push(injector);\n    this.keys.push(key);\n    // Note: This updated message won't be reflected in the `.stack` property\n    this.message = this.constructResolvingMessage(this.keys);\n}\n/**\n * Thrown when trying to retrieve a dependency by key from {@link Injector}, but the\n * {@link Injector} does not have a {@link Provider} for the given key.\n *\n * ### Example ([live demo](http://plnkr.co/edit/vq8D3FRB9aGbnWJqtEPE?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b:B) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n */\nfunction noProviderError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return \"No provider for \" + first + \"!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when dependencies form a cycle.\n *\n * ### Example ([live demo](http://plnkr.co/edit/wYQdNos0Tzql3ei1EV9j?p=info))\n *\n * ```typescript\n * var injector = Injector.resolveAndCreate([\n *   {provide: \"one\", useFactory: (two) => \"two\", deps: [[new Inject(\"two\")]]},\n *   {provide: \"two\", useFactory: (one) => \"one\", deps: [[new Inject(\"one\")]]}\n * ]);\n *\n * expect(() => injector.get(\"one\")).toThrowError();\n * ```\n *\n * Retrieving `A` or `B` throws a `CyclicDependencyError` as the graph above cannot be constructed.\n */\nfunction cyclicDependencyError(injector, key) {\n    return injectionError(injector, key, function (keys) {\n        return \"Cannot instantiate cyclic dependency!\" + constructResolvingPath(keys);\n    });\n}\n/**\n * Thrown when a constructing type returns with an Error.\n *\n * The `InstantiationError` class contains the original error plus the dependency graph which caused\n * this object to be instantiated.\n *\n * ### Example ([live demo](http://plnkr.co/edit/7aWYdcqTQsP0eNqEdUAf?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor() {\n *     throw new Error('message');\n *   }\n * }\n *\n * var injector = Injector.resolveAndCreate([A]);\n\n * try {\n *   injector.get(A);\n * } catch (e) {\n *   expect(e instanceof InstantiationError).toBe(true);\n *   expect(e.originalException.message).toEqual(\"message\");\n *   expect(e.originalStack).toBeDefined();\n * }\n * ```\n */\nfunction instantiationError(injector, originalException, originalStack, key) {\n    return injectionError(injector, key, function (keys) {\n        var first = stringify(keys[0].token);\n        return originalException.message + \": Error during instantiation of \" + first + \"!\" + constructResolvingPath(keys) + \".\";\n    }, originalException);\n}\n/**\n * Thrown when an object other then {@link Provider} (or `Type`) is passed to {@link Injector}\n * creation.\n *\n * ### Example ([live demo](http://plnkr.co/edit/YatCFbPAMCL0JSSQ4mvH?p=preview))\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\"not a type\"])).toThrowError();\n * ```\n */\nfunction invalidProviderError(provider) {\n    return Error(\"Invalid provider - only instances of Provider and Type are allowed, got: \" + provider);\n}\n/**\n * Thrown when the class has no annotation information.\n *\n * Lack of annotation information prevents the {@link Injector} from determining which dependencies\n * need to be injected into the constructor.\n *\n * ### Example ([live demo](http://plnkr.co/edit/rHnZtlNS7vJOPQ6pcVkm?p=preview))\n *\n * ```typescript\n * class A {\n *   constructor(b) {}\n * }\n *\n * expect(() => Injector.resolveAndCreate([A])).toThrowError();\n * ```\n *\n * This error is also thrown when the class not marked with {@link Injectable} has parameter types.\n *\n * ```typescript\n * class B {}\n *\n * class A {\n *   constructor(b:B) {} // no information about the parameter types of A is available at runtime.\n * }\n *\n * expect(() => Injector.resolveAndCreate([A,B])).toThrowError();\n * ```\n * @stable\n */\nfunction noAnnotationError(typeOrFunc, params) {\n    var signature = [];\n    for (var i = 0, ii = params.length; i < ii; i++) {\n        var parameter = params[i];\n        if (!parameter || parameter.length == 0) {\n            signature.push('?');\n        }\n        else {\n            signature.push(parameter.map(stringify).join(' '));\n        }\n    }\n    return Error('Cannot resolve all parameters for \\'' + stringify(typeOrFunc) + '\\'(' +\n        signature.join(', ') + '). ' +\n        'Make sure that all the parameters are decorated with Inject or have valid type annotations and that \\'' +\n        stringify(typeOrFunc) + '\\' is decorated with Injectable.');\n}\n/**\n * Thrown when getting an object by index.\n *\n * ### Example ([live demo](http://plnkr.co/edit/bRs0SX2OTQiJzqvjgl8P?p=preview))\n *\n * ```typescript\n * class A {}\n *\n * var injector = Injector.resolveAndCreate([A]);\n *\n * expect(() => injector.getAt(100)).toThrowError();\n * ```\n * @stable\n */\nfunction outOfBoundsError(index) {\n    return Error(\"Index \" + index + \" is out-of-bounds.\");\n}\n// TODO: add a working example after alpha38 is released\n/**\n * Thrown when a multi provider and a regular provider are bound to the same token.\n *\n * ### Example\n *\n * ```typescript\n * expect(() => Injector.resolveAndCreate([\n *   { provide: \"Strings\", useValue: \"string1\", multi: true},\n *   { provide: \"Strings\", useValue: \"string2\", multi: false}\n * ])).toThrowError();\n * ```\n */\nfunction mixingMultiProvidersWithRegularProvidersError(provider1, provider2) {\n    return Error(\"Cannot mix multi providers and regular providers, got: \" + provider1 + \" \" + provider2);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A unique object used for retrieving items from the {@link ReflectiveInjector}.\n *\n * Keys have:\n * - a system-wide unique `id`.\n * - a `token`.\n *\n * `Key` is used internally by {@link ReflectiveInjector} because its system-wide unique `id` allows\n * the\n * injector to store created objects in a more efficient way.\n *\n * `Key` should not be created directly. {@link ReflectiveInjector} creates keys automatically when\n * resolving\n * providers.\n * @deprecated No replacement\n */\nvar ReflectiveKey = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveKey(token, id) {\n        this.token = token;\n        this.id = id;\n        if (!token) {\n            throw new Error('Token must be defined!');\n        }\n        this.displayName = stringify(this.token);\n    }\n    /**\n     * Retrieves a `Key` for a token.\n     */\n    /**\n       * Retrieves a `Key` for a token.\n       */\n    ReflectiveKey.get = /**\n       * Retrieves a `Key` for a token.\n       */\n    function (token) {\n        return _globalKeyRegistry.get(resolveForwardRef(token));\n    };\n    Object.defineProperty(ReflectiveKey, \"numberOfKeys\", {\n        /**\n         * @returns the number of keys registered in the system.\n         */\n        get: /**\n           * @returns the number of keys registered in the system.\n           */\n        function () { return _globalKeyRegistry.numberOfKeys; },\n        enumerable: true,\n        configurable: true\n    });\n    return ReflectiveKey;\n}());\nvar KeyRegistry = /** @class */ (function () {\n    function KeyRegistry() {\n        this._allKeys = new Map();\n    }\n    KeyRegistry.prototype.get = function (token) {\n        if (token instanceof ReflectiveKey)\n            return token;\n        if (this._allKeys.has(token)) {\n            return this._allKeys.get(token);\n        }\n        var newKey = new ReflectiveKey(token, ReflectiveKey.numberOfKeys);\n        this._allKeys.set(token, newKey);\n        return newKey;\n    };\n    Object.defineProperty(KeyRegistry.prototype, \"numberOfKeys\", {\n        get: function () { return this._allKeys.size; },\n        enumerable: true,\n        configurable: true\n    });\n    return KeyRegistry;\n}());\nvar _globalKeyRegistry = new KeyRegistry();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provides access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nvar Reflector = /** @class */ (function () {\n    function Reflector(reflectionCapabilities) {\n        this.reflectionCapabilities = reflectionCapabilities;\n    }\n    Reflector.prototype.updateCapabilities = function (caps) { this.reflectionCapabilities = caps; };\n    Reflector.prototype.factory = function (type) { return this.reflectionCapabilities.factory(type); };\n    Reflector.prototype.parameters = function (typeOrFunc) {\n        return this.reflectionCapabilities.parameters(typeOrFunc);\n    };\n    Reflector.prototype.annotations = function (typeOrFunc) {\n        return this.reflectionCapabilities.annotations(typeOrFunc);\n    };\n    Reflector.prototype.propMetadata = function (typeOrFunc) {\n        return this.reflectionCapabilities.propMetadata(typeOrFunc);\n    };\n    Reflector.prototype.hasLifecycleHook = function (type, lcProperty) {\n        return this.reflectionCapabilities.hasLifecycleHook(type, lcProperty);\n    };\n    Reflector.prototype.getter = function (name) { return this.reflectionCapabilities.getter(name); };\n    Reflector.prototype.setter = function (name) { return this.reflectionCapabilities.setter(name); };\n    Reflector.prototype.method = function (name) { return this.reflectionCapabilities.method(name); };\n    Reflector.prototype.importUri = function (type) { return this.reflectionCapabilities.importUri(type); };\n    Reflector.prototype.resourceUri = function (type) { return this.reflectionCapabilities.resourceUri(type); };\n    Reflector.prototype.resolveIdentifier = function (name, moduleUrl, members, runtime) {\n        return this.reflectionCapabilities.resolveIdentifier(name, moduleUrl, members, runtime);\n    };\n    Reflector.prototype.resolveEnum = function (identifier, name) {\n        return this.reflectionCapabilities.resolveEnum(identifier, name);\n    };\n    return Reflector;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The {@link Reflector} used internally in Angular to access metadata\n * about symbols.\n */\nvar reflector = new Reflector(new ReflectionCapabilities());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * `Dependency` is used by the framework to extend DI.\n * This is internal to Angular and should not be used directly.\n */\nvar ReflectiveDependency = /** @class */ (function () {\n    function ReflectiveDependency(key, optional, visibility) {\n        this.key = key;\n        this.optional = optional;\n        this.visibility = visibility;\n    }\n    ReflectiveDependency.fromKey = function (key) {\n        return new ReflectiveDependency(key, false, null);\n    };\n    return ReflectiveDependency;\n}());\nvar _EMPTY_LIST = [];\nvar ResolvedReflectiveProvider_ = /** @class */ (function () {\n    function ResolvedReflectiveProvider_(key, resolvedFactories, multiProvider) {\n        this.key = key;\n        this.resolvedFactories = resolvedFactories;\n        this.multiProvider = multiProvider;\n        this.resolvedFactory = this.resolvedFactories[0];\n    }\n    return ResolvedReflectiveProvider_;\n}());\n/**\n * An internal resolved representation of a factory function created by resolving {@link\n * Provider}.\n * @experimental\n */\nvar ResolvedReflectiveFactory = /** @class */ (function () {\n    function ResolvedReflectiveFactory(/**\n           * Factory function which can return an instance of an object represented by a key.\n           */\n    factory, /**\n           * Arguments (dependencies) to the `factory` function.\n           */\n    dependencies) {\n        this.factory = factory;\n        this.dependencies = dependencies;\n    }\n    return ResolvedReflectiveFactory;\n}());\n/**\n * Resolve a single provider.\n */\nfunction resolveReflectiveFactory(provider) {\n    var factoryFn;\n    var resolvedDeps;\n    if (provider.useClass) {\n        var useClass = resolveForwardRef(provider.useClass);\n        factoryFn = reflector.factory(useClass);\n        resolvedDeps = _dependenciesFor(useClass);\n    }\n    else if (provider.useExisting) {\n        factoryFn = function (aliasInstance) { return aliasInstance; };\n        resolvedDeps = [ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))];\n    }\n    else if (provider.useFactory) {\n        factoryFn = provider.useFactory;\n        resolvedDeps = constructDependencies(provider.useFactory, provider.deps);\n    }\n    else {\n        factoryFn = function () { return provider.useValue; };\n        resolvedDeps = _EMPTY_LIST;\n    }\n    return new ResolvedReflectiveFactory(factoryFn, resolvedDeps);\n}\n/**\n * Converts the {@link Provider} into {@link ResolvedProvider}.\n *\n * {@link Injector} internally only uses {@link ResolvedProvider}, {@link Provider} contains\n * convenience provider syntax.\n */\nfunction resolveReflectiveProvider(provider) {\n    return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide), [resolveReflectiveFactory(provider)], provider.multi || false);\n}\n/**\n * Resolve a list of Providers.\n */\nfunction resolveReflectiveProviders(providers) {\n    var normalized = _normalizeProviders(providers, []);\n    var resolved = normalized.map(resolveReflectiveProvider);\n    var resolvedProviderMap = mergeResolvedReflectiveProviders(resolved, new Map());\n    return Array.from(resolvedProviderMap.values());\n}\n/**\n * Merges a list of ResolvedProviders into a list where\n * each key is contained exactly once and multi providers\n * have been merged.\n */\nfunction mergeResolvedReflectiveProviders(providers, normalizedProvidersMap) {\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        var existing = normalizedProvidersMap.get(provider.key.id);\n        if (existing) {\n            if (provider.multiProvider !== existing.multiProvider) {\n                throw mixingMultiProvidersWithRegularProvidersError(existing, provider);\n            }\n            if (provider.multiProvider) {\n                for (var j = 0; j < provider.resolvedFactories.length; j++) {\n                    existing.resolvedFactories.push(provider.resolvedFactories[j]);\n                }\n            }\n            else {\n                normalizedProvidersMap.set(provider.key.id, provider);\n            }\n        }\n        else {\n            var resolvedProvider = void 0;\n            if (provider.multiProvider) {\n                resolvedProvider = new ResolvedReflectiveProvider_(provider.key, provider.resolvedFactories.slice(), provider.multiProvider);\n            }\n            else {\n                resolvedProvider = provider;\n            }\n            normalizedProvidersMap.set(provider.key.id, resolvedProvider);\n        }\n    }\n    return normalizedProvidersMap;\n}\nfunction _normalizeProviders(providers, res) {\n    providers.forEach(function (b) {\n        if (b instanceof Type) {\n            res.push({ provide: b, useClass: b });\n        }\n        else if (b && typeof b == 'object' && b.provide !== undefined) {\n            res.push(b);\n        }\n        else if (b instanceof Array) {\n            _normalizeProviders(b, res);\n        }\n        else {\n            throw invalidProviderError(b);\n        }\n    });\n    return res;\n}\nfunction constructDependencies(typeOrFunc, dependencies) {\n    if (!dependencies) {\n        return _dependenciesFor(typeOrFunc);\n    }\n    else {\n        var params_1 = dependencies.map(function (t) { return [t]; });\n        return dependencies.map(function (t) { return _extractToken(typeOrFunc, t, params_1); });\n    }\n}\nfunction _dependenciesFor(typeOrFunc) {\n    var params = reflector.parameters(typeOrFunc);\n    if (!params)\n        return [];\n    if (params.some(function (p) { return p == null; })) {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n    return params.map(function (p) { return _extractToken(typeOrFunc, p, params); });\n}\nfunction _extractToken(typeOrFunc, metadata, params) {\n    var token = null;\n    var optional = false;\n    if (!Array.isArray(metadata)) {\n        if (metadata instanceof Inject) {\n            return _createDependency(metadata.token, optional, null);\n        }\n        else {\n            return _createDependency(metadata, optional, null);\n        }\n    }\n    var visibility = null;\n    for (var i = 0; i < metadata.length; ++i) {\n        var paramMetadata = metadata[i];\n        if (paramMetadata instanceof Type) {\n            token = paramMetadata;\n        }\n        else if (paramMetadata instanceof Inject) {\n            token = paramMetadata.token;\n        }\n        else if (paramMetadata instanceof Optional) {\n            optional = true;\n        }\n        else if (paramMetadata instanceof Self || paramMetadata instanceof SkipSelf) {\n            visibility = paramMetadata;\n        }\n        else if (paramMetadata instanceof InjectionToken) {\n            token = paramMetadata;\n        }\n    }\n    token = resolveForwardRef(token);\n    if (token != null) {\n        return _createDependency(token, optional, visibility);\n    }\n    else {\n        throw noAnnotationError(typeOrFunc, params);\n    }\n}\nfunction _createDependency(token, optional, visibility) {\n    return new ReflectiveDependency(ReflectiveKey.get(token), optional, visibility);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Threshold for the dynamic version\nvar UNDEFINED = new Object();\n/**\n * A ReflectiveDependency injection container used for instantiating objects and resolving\n * dependencies.\n *\n * An `Injector` is a replacement for a `new` operator, which can automatically resolve the\n * constructor dependencies.\n *\n * In typical use, application code asks for the dependencies in the constructor and they are\n * resolved by the `Injector`.\n *\n * ### Example ([live demo](http://plnkr.co/edit/jzjec0?p=preview))\n *\n * The following example creates an `Injector` configured to create `Engine` and `Car`.\n *\n * ```typescript\n * @Injectable()\n * class Engine {\n * }\n *\n * @Injectable()\n * class Car {\n *   constructor(public engine:Engine) {}\n * }\n *\n * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n * var car = injector.get(Car);\n * expect(car instanceof Car).toBe(true);\n * expect(car.engine instanceof Engine).toBe(true);\n * ```\n *\n * Notice, we don't use the `new` operator because we explicitly want to have the `Injector`\n * resolve all of the object's dependencies automatically.\n *\n * @deprecated from v5 - slow and brings in a lot of code, Use `Injector.create` instead.\n */\nvar ReflectiveInjector = /** @class */ (function () {\n    function ReflectiveInjector() {\n    }\n    /**\n     * Turns an array of provider definitions into an array of resolved providers.\n     *\n     * A resolution is a process of flattening multiple nested arrays and converting individual\n     * providers into an array of {@link ResolvedReflectiveProvider}s.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n     *\n     * expect(providers.length).toEqual(2);\n     *\n     * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n     * expect(providers[0].key.displayName).toBe(\"Car\");\n     * expect(providers[0].dependencies.length).toEqual(1);\n     * expect(providers[0].factory).toBeDefined();\n     *\n     * expect(providers[1].key.displayName).toBe(\"Engine\");\n     * });\n     * ```\n     *\n     * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n     */\n    /**\n       * Turns an array of provider definitions into an array of resolved providers.\n       *\n       * A resolution is a process of flattening multiple nested arrays and converting individual\n       * providers into an array of {@link ResolvedReflectiveProvider}s.\n       *\n       * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n       *\n       * ```typescript\n       * @Injectable()\n       * class Engine {\n       * }\n       *\n       * @Injectable()\n       * class Car {\n       *   constructor(public engine:Engine) {}\n       * }\n       *\n       * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n       *\n       * expect(providers.length).toEqual(2);\n       *\n       * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n       * expect(providers[0].key.displayName).toBe(\"Car\");\n       * expect(providers[0].dependencies.length).toEqual(1);\n       * expect(providers[0].factory).toBeDefined();\n       *\n       * expect(providers[1].key.displayName).toBe(\"Engine\");\n       * });\n       * ```\n       *\n       * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n       */\n    ReflectiveInjector.resolve = /**\n       * Turns an array of provider definitions into an array of resolved providers.\n       *\n       * A resolution is a process of flattening multiple nested arrays and converting individual\n       * providers into an array of {@link ResolvedReflectiveProvider}s.\n       *\n       * ### Example ([live demo](http://plnkr.co/edit/AiXTHi?p=preview))\n       *\n       * ```typescript\n       * @Injectable()\n       * class Engine {\n       * }\n       *\n       * @Injectable()\n       * class Car {\n       *   constructor(public engine:Engine) {}\n       * }\n       *\n       * var providers = ReflectiveInjector.resolve([Car, [[Engine]]]);\n       *\n       * expect(providers.length).toEqual(2);\n       *\n       * expect(providers[0] instanceof ResolvedReflectiveProvider).toBe(true);\n       * expect(providers[0].key.displayName).toBe(\"Car\");\n       * expect(providers[0].dependencies.length).toEqual(1);\n       * expect(providers[0].factory).toBeDefined();\n       *\n       * expect(providers[1].key.displayName).toBe(\"Engine\");\n       * });\n       * ```\n       *\n       * See {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders} for more info.\n       */\n    function (providers) {\n        return resolveReflectiveProviders(providers);\n    };\n    /**\n     * Resolves an array of providers and creates an injector from those providers.\n     *\n     * The passed-in providers can be an array of `Type`, {@link Provider},\n     * or a recursive array of more providers.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     *\n     * This function is slower than the corresponding `fromResolvedProviders`\n     * because it needs to resolve the passed-in providers first.\n     * See {@link ReflectiveInjector#resolve resolve} and\n     * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n     */\n    /**\n       * Resolves an array of providers and creates an injector from those providers.\n       *\n       * The passed-in providers can be an array of `Type`, {@link Provider},\n       * or a recursive array of more providers.\n       *\n       * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n       *\n       * ```typescript\n       * @Injectable()\n       * class Engine {\n       * }\n       *\n       * @Injectable()\n       * class Car {\n       *   constructor(public engine:Engine) {}\n       * }\n       *\n       * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n       * expect(injector.get(Car) instanceof Car).toBe(true);\n       * ```\n       *\n       * This function is slower than the corresponding `fromResolvedProviders`\n       * because it needs to resolve the passed-in providers first.\n       * See {@link ReflectiveInjector#resolve resolve} and\n       * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n       */\n    ReflectiveInjector.resolveAndCreate = /**\n       * Resolves an array of providers and creates an injector from those providers.\n       *\n       * The passed-in providers can be an array of `Type`, {@link Provider},\n       * or a recursive array of more providers.\n       *\n       * ### Example ([live demo](http://plnkr.co/edit/ePOccA?p=preview))\n       *\n       * ```typescript\n       * @Injectable()\n       * class Engine {\n       * }\n       *\n       * @Injectable()\n       * class Car {\n       *   constructor(public engine:Engine) {}\n       * }\n       *\n       * var injector = ReflectiveInjector.resolveAndCreate([Car, Engine]);\n       * expect(injector.get(Car) instanceof Car).toBe(true);\n       * ```\n       *\n       * This function is slower than the corresponding `fromResolvedProviders`\n       * because it needs to resolve the passed-in providers first.\n       * See {@link ReflectiveInjector#resolve resolve} and\n       * {@link ReflectiveInjector#fromResolvedProviders fromResolvedProviders}.\n       */\n    function (providers, parent) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders, parent);\n    };\n    /**\n     * Creates an injector from previously resolved providers.\n     *\n     * This API is the recommended way to construct injectors in performance-sensitive parts.\n     *\n     * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n     *\n     * ```typescript\n     * @Injectable()\n     * class Engine {\n     * }\n     *\n     * @Injectable()\n     * class Car {\n     *   constructor(public engine:Engine) {}\n     * }\n     *\n     * var providers = ReflectiveInjector.resolve([Car, Engine]);\n     * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n     * expect(injector.get(Car) instanceof Car).toBe(true);\n     * ```\n     * @experimental\n     */\n    /**\n       * Creates an injector from previously resolved providers.\n       *\n       * This API is the recommended way to construct injectors in performance-sensitive parts.\n       *\n       * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n       *\n       * ```typescript\n       * @Injectable()\n       * class Engine {\n       * }\n       *\n       * @Injectable()\n       * class Car {\n       *   constructor(public engine:Engine) {}\n       * }\n       *\n       * var providers = ReflectiveInjector.resolve([Car, Engine]);\n       * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n       * expect(injector.get(Car) instanceof Car).toBe(true);\n       * ```\n       * @experimental\n       */\n    ReflectiveInjector.fromResolvedProviders = /**\n       * Creates an injector from previously resolved providers.\n       *\n       * This API is the recommended way to construct injectors in performance-sensitive parts.\n       *\n       * ### Example ([live demo](http://plnkr.co/edit/KrSMci?p=preview))\n       *\n       * ```typescript\n       * @Injectable()\n       * class Engine {\n       * }\n       *\n       * @Injectable()\n       * class Car {\n       *   constructor(public engine:Engine) {}\n       * }\n       *\n       * var providers = ReflectiveInjector.resolve([Car, Engine]);\n       * var injector = ReflectiveInjector.fromResolvedProviders(providers);\n       * expect(injector.get(Car) instanceof Car).toBe(true);\n       * ```\n       * @experimental\n       */\n    function (providers, parent) {\n        return new ReflectiveInjector_(providers, parent);\n    };\n    return ReflectiveInjector;\n}());\nvar ReflectiveInjector_ = /** @class */ (function () {\n    /**\n     * Private\n     */\n    function ReflectiveInjector_(_providers, _parent) {\n        /** @internal */\n        this._constructionCounter = 0;\n        this._providers = _providers;\n        this.parent = _parent || null;\n        var len = _providers.length;\n        this.keyIds = new Array(len);\n        this.objs = new Array(len);\n        for (var i = 0; i < len; i++) {\n            this.keyIds[i] = _providers[i].key.id;\n            this.objs[i] = UNDEFINED;\n        }\n    }\n    ReflectiveInjector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        return this._getByKey(ReflectiveKey.get(token), null, notFoundValue);\n    };\n    ReflectiveInjector_.prototype.resolveAndCreateChild = function (providers) {\n        var ResolvedReflectiveProviders = ReflectiveInjector.resolve(providers);\n        return this.createChildFromResolved(ResolvedReflectiveProviders);\n    };\n    ReflectiveInjector_.prototype.createChildFromResolved = function (providers) {\n        var inj = new ReflectiveInjector_(providers);\n        inj.parent = this;\n        return inj;\n    };\n    ReflectiveInjector_.prototype.resolveAndInstantiate = function (provider) {\n        return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0]);\n    };\n    ReflectiveInjector_.prototype.instantiateResolved = function (provider) {\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype.getProviderAtIndex = function (index) {\n        if (index < 0 || index >= this._providers.length) {\n            throw outOfBoundsError(index);\n        }\n        return this._providers[index];\n    };\n    /** @internal */\n    /** @internal */\n    ReflectiveInjector_.prototype._new = /** @internal */\n    function (provider) {\n        if (this._constructionCounter++ > this._getMaxNumberOfObjects()) {\n            throw cyclicDependencyError(this, provider.key);\n        }\n        return this._instantiateProvider(provider);\n    };\n    ReflectiveInjector_.prototype._getMaxNumberOfObjects = function () { return this.objs.length; };\n    ReflectiveInjector_.prototype._instantiateProvider = function (provider) {\n        if (provider.multiProvider) {\n            var res = new Array(provider.resolvedFactories.length);\n            for (var i = 0; i < provider.resolvedFactories.length; ++i) {\n                res[i] = this._instantiate(provider, provider.resolvedFactories[i]);\n            }\n            return res;\n        }\n        else {\n            return this._instantiate(provider, provider.resolvedFactories[0]);\n        }\n    };\n    ReflectiveInjector_.prototype._instantiate = function (provider, ResolvedReflectiveFactory$$1) {\n        var _this = this;\n        var factory = ResolvedReflectiveFactory$$1.factory;\n        var deps;\n        try {\n            deps =\n                ResolvedReflectiveFactory$$1.dependencies.map(function (dep) { return _this._getByReflectiveDependency(dep); });\n        }\n        catch (e) {\n            if (e.addKey) {\n                e.addKey(this, provider.key);\n            }\n            throw e;\n        }\n        var obj;\n        try {\n            obj = factory.apply(void 0, tslib_1.__spread(deps));\n        }\n        catch (e) {\n            throw instantiationError(this, e, e.stack, provider.key);\n        }\n        return obj;\n    };\n    ReflectiveInjector_.prototype._getByReflectiveDependency = function (dep) {\n        return this._getByKey(dep.key, dep.visibility, dep.optional ? null : THROW_IF_NOT_FOUND);\n    };\n    ReflectiveInjector_.prototype._getByKey = function (key, visibility, notFoundValue) {\n        if (key === ReflectiveInjector_.INJECTOR_KEY) {\n            return this;\n        }\n        if (visibility instanceof Self) {\n            return this._getByKeySelf(key, notFoundValue);\n        }\n        else {\n            return this._getByKeyDefault(key, notFoundValue, visibility);\n        }\n    };\n    ReflectiveInjector_.prototype._getObjByKeyId = function (keyId) {\n        for (var i = 0; i < this.keyIds.length; i++) {\n            if (this.keyIds[i] === keyId) {\n                if (this.objs[i] === UNDEFINED) {\n                    this.objs[i] = this._new(this._providers[i]);\n                }\n                return this.objs[i];\n            }\n        }\n        return UNDEFINED;\n    };\n    /** @internal */\n    /** @internal */\n    ReflectiveInjector_.prototype._throwOrNull = /** @internal */\n    function (key, notFoundValue) {\n        if (notFoundValue !== THROW_IF_NOT_FOUND) {\n            return notFoundValue;\n        }\n        else {\n            throw noProviderError(this, key);\n        }\n    };\n    /** @internal */\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeySelf = /** @internal */\n    function (key, notFoundValue) {\n        var obj = this._getObjByKeyId(key.id);\n        return (obj !== UNDEFINED) ? obj : this._throwOrNull(key, notFoundValue);\n    };\n    /** @internal */\n    /** @internal */\n    ReflectiveInjector_.prototype._getByKeyDefault = /** @internal */\n    function (key, notFoundValue, visibility) {\n        var inj;\n        if (visibility instanceof SkipSelf) {\n            inj = this.parent;\n        }\n        else {\n            inj = this;\n        }\n        while (inj instanceof ReflectiveInjector_) {\n            var inj_ = inj;\n            var obj = inj_._getObjByKeyId(key.id);\n            if (obj !== UNDEFINED)\n                return obj;\n            inj = inj_.parent;\n        }\n        if (inj !== null) {\n            return inj.get(key.token, notFoundValue);\n        }\n        else {\n            return this._throwOrNull(key, notFoundValue);\n        }\n    };\n    Object.defineProperty(ReflectiveInjector_.prototype, \"displayName\", {\n        get: function () {\n            var providers = _mapProviders(this, function (b) { return ' \"' + b.key.displayName + '\" '; })\n                .join(', ');\n            return \"ReflectiveInjector(providers: [\" + providers + \"])\";\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ReflectiveInjector_.prototype.toString = function () { return this.displayName; };\n    ReflectiveInjector_.INJECTOR_KEY = ReflectiveKey.get(Injector);\n    return ReflectiveInjector_;\n}());\nfunction _mapProviders(injector, fn) {\n    var res = new Array(injector._providers.length);\n    for (var i = 0; i < injector._providers.length; ++i) {\n        res[i] = fn(injector.getProviderAtIndex(i));\n    }\n    return res;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An internal token whose presence in an injector indicates that the injector should treat itself\n * as a root scoped injector when processing requests for unknown tokens which may indicate\n * they are provided in the root scope.\n */\nvar APP_ROOT = new InjectionToken('The presence of this token marks an injector as being the root injector.');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Marker which indicates that a value has not yet been created from the factory function.\n */\nvar NOT_YET = {};\n/**\n * Marker which indicates that the factory function for a token is in the process of being called.\n *\n * If the injector is asked to inject a token with its value set to CIRCULAR, that indicates\n * injection of a dependency has recursively attempted to inject the original token, and there is\n * a circular dependency among the providers.\n */\nvar CIRCULAR$1 = {};\nvar EMPTY_ARRAY$1 = [];\n/**\n * A lazily initialized NullInjector.\n */\nvar NULL_INJECTOR$1 = undefined;\nfunction getNullInjector() {\n    if (NULL_INJECTOR$1 === undefined) {\n        NULL_INJECTOR$1 = new NullInjector();\n    }\n    return NULL_INJECTOR$1;\n}\n/**\n * Create a new `Injector` which is configured using `InjectorDefType`s.\n *\n * @experimental\n */\nfunction createInjector(defType, parent) {\n    if (parent === void 0) { parent = null; }\n    parent = parent || getNullInjector();\n    return new R3Injector(defType, parent);\n}\nvar R3Injector = /** @class */ (function () {\n    function R3Injector(def, parent) {\n        var _this = this;\n        this.parent = parent;\n        /**\n           * Map of tokens to records which contain the instances of those tokens.\n           */\n        this.records = new Map();\n        /**\n           * The transitive set of `InjectorDefType`s which define this injector.\n           */\n        this.injectorDefTypes = new Set();\n        /**\n           * Set of values instantiated by this injector which contain `ngOnDestroy` lifecycle hooks.\n           */\n        this.onDestroy = new Set();\n        /**\n           * Flag indicating that this injector was previously destroyed.\n           */\n        this.destroyed = false;\n        // Start off by creating Records for every provider declared in every InjectorDefType\n        // included transitively in `def`.\n        deepForEach([def], function (injectorDef) { return _this.processInjectorType(injectorDef, new Set()); });\n        // Make sure the INJECTOR token provides this injector.\n        this.records.set(INJECTOR, makeRecord(undefined, this));\n        // Detect whether this injector has the APP_ROOT_SCOPE token and thus should provide\n        // any injectable scoped to APP_ROOT_SCOPE.\n        this.isRootInjector = this.records.has(APP_ROOT);\n        // Eagerly instantiate the InjectorDefType classes themselves.\n        this.injectorDefTypes.forEach(function (defType) { return _this.get(defType); });\n    }\n    /**\n     * Destroy the injector and release references to every instance or provider associated with it.\n     *\n     * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n     * hook was found.\n     */\n    /**\n       * Destroy the injector and release references to every instance or provider associated with it.\n       *\n       * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n       * hook was found.\n       */\n    R3Injector.prototype.destroy = /**\n       * Destroy the injector and release references to every instance or provider associated with it.\n       *\n       * Also calls the `OnDestroy` lifecycle hooks of every instance that was created for which a\n       * hook was found.\n       */\n    function () {\n        this.assertNotDestroyed();\n        // Set destroyed = true first, in case lifecycle hooks re-enter destroy().\n        this.destroyed = true;\n        try {\n            // Call all the lifecycle hooks.\n            this.onDestroy.forEach(function (service) { return service.ngOnDestroy(); });\n        }\n        finally {\n            // Release all references.\n            this.records.clear();\n            this.onDestroy.clear();\n            this.injectorDefTypes.clear();\n        }\n    };\n    R3Injector.prototype.get = function (token, notFoundValue, flags) {\n        if (notFoundValue === void 0) { notFoundValue = THROW_IF_NOT_FOUND; }\n        if (flags === void 0) { flags = 0 /* Default */; }\n        this.assertNotDestroyed();\n        // Set the injection context.\n        var previousInjector = setCurrentInjector(this);\n        try {\n            // Check for the SkipSelf flag.\n            if (!(flags & 1 /* SkipSelf */)) {\n                // SkipSelf isn't set, check if the record belongs to this injector.\n                var record = this.records.get(token);\n                if (record === undefined) {\n                    // No record, but maybe the token is scoped to this injector. Look for an ngInjectableDef\n                    // with a scope matching this injector.\n                    var def = couldBeInjectableType(token) &&\n                        token.ngInjectableDef ||\n                        undefined;\n                    if (def !== undefined && this.injectableDefInScope(def)) {\n                        // Found an ngInjectableDef and it's scoped to this injector. Pretend as if it was here\n                        // all along.\n                        record = injectableDefRecord(token);\n                        this.records.set(token, record);\n                    }\n                }\n                // If a record was found, get the instance for it and return it.\n                if (record !== undefined) {\n                    return this.hydrate(token, record);\n                }\n            }\n            // Select the next injector based on the Self flag - if self is set, the next injector is\n            // the NullInjector, otherwise it's the parent.\n            var next = !(flags & 2 /* Self */) ? this.parent : getNullInjector();\n            return this.parent.get(token, notFoundValue);\n        }\n        finally {\n            // Lastly, clean up the state by restoring the previous injector.\n            setCurrentInjector(previousInjector);\n        }\n    };\n    R3Injector.prototype.assertNotDestroyed = function () {\n        if (this.destroyed) {\n            throw new Error('Injector has already been destroyed.');\n        }\n    };\n    /**\n     * Add an `InjectorDefType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n     * to this injector.\n     */\n    /**\n       * Add an `InjectorDefType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n       * to this injector.\n       */\n    R3Injector.prototype.processInjectorType = /**\n       * Add an `InjectorDefType` or `InjectorDefTypeWithProviders` and all of its transitive providers\n       * to this injector.\n       */\n    function (defOrWrappedDef, parents) {\n        var _this = this;\n        defOrWrappedDef = resolveForwardRef(defOrWrappedDef);\n        // Either the defOrWrappedDef is an InjectorDefType (with ngInjectorDef) or an\n        // InjectorDefTypeWithProviders (aka ModuleWithProviders). Detecting either is a megamorphic\n        // read, so care is taken to only do the read once.\n        // First attempt to read the ngInjectorDef.\n        var def = defOrWrappedDef.ngInjectorDef;\n        // If that's not present, then attempt to read ngModule from the InjectorDefTypeWithProviders.\n        var ngModule = (def == null) && defOrWrappedDef.ngModule || undefined;\n        // Determine the InjectorDefType. In the case where `defOrWrappedDef` is an `InjectorDefType`,\n        // then this is easy. In the case of an InjectorDefTypeWithProviders, then the definition type\n        // is the `ngModule`.\n        var defType = (ngModule === undefined) ? defOrWrappedDef : ngModule;\n        // If defOrWrappedType was an InjectorDefTypeWithProviders, then .providers may hold some\n        // extra providers.\n        var providers = (ngModule !== undefined) && defOrWrappedDef.providers ||\n            EMPTY_ARRAY$1;\n        // Finally, if defOrWrappedType was an `InjectorDefTypeWithProviders`, then the actual\n        // `InjectorDef` is on its `ngModule`.\n        if (ngModule !== undefined) {\n            def = ngModule.ngInjectorDef;\n        }\n        // If no definition was found, throw.\n        if (def == null) {\n            throw new Error(\"Type \" + stringify(defType) + \" is missing an ngInjectorDef definition.\");\n        }\n        // Check for circular dependencies.\n        if (parents.has(defType)) {\n            throw new Error(\"Circular dependency: type \" + stringify(defType) + \" ends up importing itself.\");\n        }\n        // Track the InjectorDefType and add a provider for it.\n        this.injectorDefTypes.add(defType);\n        this.records.set(defType, makeRecord(def.factory));\n        // Add providers in the same way that @NgModule resolution did:\n        // First, include providers from any imports.\n        if (def.imports != null) {\n            // Before processing defType's imports, add it to the set of parents. This way, if it ends\n            // up deeply importing itself, this can be detected.\n            parents.add(defType);\n            try {\n                deepForEach(def.imports, function (imported) { return _this.processInjectorType(imported, parents); });\n            }\n            finally {\n                // Remove it from the parents set when finished.\n                parents.delete(defType);\n            }\n        }\n        // Next, include providers listed on the definition itself.\n        if (def.providers != null) {\n            deepForEach(def.providers, function (provider) { return _this.processProvider(provider); });\n        }\n        // Finally, include providers from an InjectorDefTypeWithProviders if there was one.\n        deepForEach(providers, function (provider) { return _this.processProvider(provider); });\n    };\n    /**\n     * Process a `SingleProvider` and add it.\n     */\n    /**\n       * Process a `SingleProvider` and add it.\n       */\n    R3Injector.prototype.processProvider = /**\n       * Process a `SingleProvider` and add it.\n       */\n    function (provider) {\n        // Determine the token from the provider. Either it's its own token, or has a {provide: ...}\n        // property.\n        provider = resolveForwardRef(provider);\n        var token = isTypeProvider(provider) ? provider : resolveForwardRef(provider.provide);\n        // Construct a `Record` for the provider.\n        var record = providerToRecord(provider);\n        if (!isTypeProvider(provider) && provider.multi === true) {\n            // If the provider indicates that it's a multi-provider, process it specially.\n            // First check whether it's been defined already.\n            var multiRecord_1 = this.records.get(token);\n            if (multiRecord_1) {\n                // It has. Throw a nice error if\n                if (multiRecord_1.multi === undefined) {\n                    throw new Error(\"Mixed multi-provider for \" + token + \".\");\n                }\n            }\n            else {\n                token = provider;\n                multiRecord_1 = makeRecord(undefined, NOT_YET, true);\n                multiRecord_1.factory = function () { return injectArgs((multiRecord_1.multi)); };\n                this.records.set(token, multiRecord_1);\n            }\n            token = provider;\n            multiRecord_1.multi.push(provider);\n        }\n        var existing = this.records.get(token);\n        if (existing && existing.multi !== undefined) {\n            throw new Error(\"Mixed multi-provider for \" + token);\n        }\n        this.records.set(token, record);\n    };\n    R3Injector.prototype.hydrate = function (token, record) {\n        if (record.value === CIRCULAR$1) {\n            throw new Error(\"Circular dep for \" + stringify(token));\n        }\n        else if (record.value === NOT_YET) {\n            record.value = CIRCULAR$1;\n            record.value = record.factory();\n        }\n        if (typeof record.value === 'object' && record.value && hasOnDestroy(record.value)) {\n            this.onDestroy.add(record.value);\n        }\n        return record.value;\n    };\n    R3Injector.prototype.injectableDefInScope = function (def) {\n        if (!def.providedIn) {\n            return false;\n        }\n        else if (typeof def.providedIn === 'string') {\n            return def.providedIn === 'any' || (def.providedIn === 'root' && this.isRootInjector);\n        }\n        else {\n            return this.injectorDefTypes.has(def.providedIn);\n        }\n    };\n    return R3Injector;\n}());\nfunction injectableDefRecord(token) {\n    var def = token.ngInjectableDef;\n    if (def === undefined) {\n        throw new Error(\"Type \" + stringify(token) + \" is missing an ngInjectableDef definition.\");\n    }\n    return makeRecord(def.factory);\n}\nfunction providerToRecord(provider) {\n    var token = resolveForwardRef(provider);\n    var value = NOT_YET;\n    var factory = undefined;\n    if (isTypeProvider(provider)) {\n        return injectableDefRecord(provider);\n    }\n    else {\n        token = resolveForwardRef(provider.provide);\n        if (isValueProvider(provider)) {\n            value = provider.useValue;\n        }\n        else if (isExistingProvider(provider)) {\n            factory = function () { return inject(provider.useExisting); };\n        }\n        else if (isFactoryProvider(provider)) {\n            factory = function () { return provider.useFactory.apply(provider, tslib_1.__spread(injectArgs(provider.deps || []))); };\n        }\n        else {\n            var classRef_1 = provider.useClass || token;\n            if (hasDeps(provider)) {\n                factory = function () { return new ((classRef_1).bind.apply((classRef_1), tslib_1.__spread([void 0], injectArgs(provider.deps))))(); };\n            }\n            else {\n                return injectableDefRecord(classRef_1);\n            }\n        }\n    }\n    return makeRecord(factory, value);\n}\nfunction makeRecord(factory, value, multi) {\n    if (value === void 0) { value = NOT_YET; }\n    if (multi === void 0) { multi = false; }\n    return {\n        factory: factory,\n        value: value,\n        multi: multi ? [] : undefined,\n    };\n}\nfunction deepForEach(input, fn) {\n    input.forEach(function (value) { return Array.isArray(value) ? deepForEach(value, fn) : fn(value); });\n}\nfunction isValueProvider(value) {\n    return USE_VALUE$1 in value;\n}\nfunction isExistingProvider(value) {\n    return !!value.useExisting;\n}\nfunction isFactoryProvider(value) {\n    return !!value.useFactory;\n}\nfunction isTypeProvider(value) {\n    return typeof value === 'function';\n}\nfunction hasDeps(value) {\n    return !!value.deps;\n}\nfunction hasOnDestroy(value) {\n    return typeof value === 'object' && value != null && value.ngOnDestroy &&\n        typeof value.ngOnDestroy === 'function';\n}\nfunction couldBeInjectableType(value) {\n    return (typeof value === 'function') ||\n        (typeof value === 'object' && value instanceof InjectionToken);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Determine if the argument is shaped like a Promise\n */\nfunction isPromise(obj) {\n    // allow any Promise/A+ compliant thenable.\n    // It's up to the caller to ensure that obj.then conforms to the spec\n    return !!obj && typeof obj.then === 'function';\n}\n/**\n * Determine if the argument is an Observable\n */\nfunction isObservable(obj) {\n    // TODO use Symbol.observable when https://github.com/ReactiveX/rxjs/issues/2415 will be resolved\n    return !!obj && typeof obj.subscribe === 'function';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A function that will be executed when an application is initialized.\n * @experimental\n */\nvar APP_INITIALIZER = new InjectionToken('Application Initializer');\n/**\n * A class that reflects the state of running {@link APP_INITIALIZER}s.\n *\n * @experimental\n */\nvar ApplicationInitStatus = /** @class */ (function () {\n    function ApplicationInitStatus(appInits) {\n        var _this = this;\n        this.appInits = appInits;\n        this.initialized = false;\n        this.done = false;\n        this.donePromise = new Promise(function (res, rej) {\n            _this.resolve = res;\n            _this.reject = rej;\n        });\n    }\n    /** @internal */\n    /** @internal */\n    ApplicationInitStatus.prototype.runInitializers = /** @internal */\n    function () {\n        var _this = this;\n        if (this.initialized) {\n            return;\n        }\n        var asyncInitPromises = [];\n        var complete = function () {\n            _this.done = true;\n            _this.resolve();\n        };\n        if (this.appInits) {\n            for (var i = 0; i < this.appInits.length; i++) {\n                var initResult = this.appInits[i]();\n                if (isPromise(initResult)) {\n                    asyncInitPromises.push(initResult);\n                }\n            }\n        }\n        Promise.all(asyncInitPromises).then(function () { complete(); }).catch(function (e) { _this.reject(e); });\n        if (asyncInitPromises.length === 0) {\n            complete();\n        }\n        this.initialized = true;\n    };\n    ApplicationInitStatus.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    ApplicationInitStatus.ctorParameters = function () { return [\n        { type: Array, decorators: [{ type: Inject, args: [APP_INITIALIZER,] }, { type: Optional },] },\n    ]; };\n    return ApplicationInitStatus;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A DI Token representing a unique string id assigned to the application by Angular and used\n * primarily for prefixing application attributes and CSS styles when\n * {@link ViewEncapsulation#Emulated ViewEncapsulation.Emulated} is being used.\n *\n * If you need to avoid randomly generated value to be used as an application id, you can provide\n * a custom value via a DI provider <!-- TODO: provider --> configuring the root {@link Injector}\n * using this token.\n * @experimental\n */\nvar APP_ID = new InjectionToken('AppId');\nfunction _appIdRandomProviderFactory() {\n    return \"\" + _randomChar() + _randomChar() + _randomChar();\n}\n/**\n * Providers that will generate a random APP_ID_TOKEN.\n * @experimental\n */\nvar APP_ID_RANDOM_PROVIDER = {\n    provide: APP_ID,\n    useFactory: _appIdRandomProviderFactory,\n    deps: [],\n};\nfunction _randomChar() {\n    return String.fromCharCode(97 + Math.floor(Math.random() * 25));\n}\n/**\n * A function that will be executed when a platform is initialized.\n * @experimental\n */\nvar PLATFORM_INITIALIZER = new InjectionToken('Platform Initializer');\n/**\n * A token that indicates an opaque platform id.\n * @experimental\n */\nvar PLATFORM_ID = new InjectionToken('Platform ID');\n/**\n * All callbacks provided via this token will be called for every component that is bootstrapped.\n * Signature of the callback:\n *\n * `(componentRef: ComponentRef) => void`.\n *\n * @experimental\n */\nvar APP_BOOTSTRAP_LISTENER = new InjectionToken('appBootstrapListener');\n/**\n * A token which indicates the root directory of the application\n * @experimental\n */\nvar PACKAGE_ROOT_URL = new InjectionToken('Application Packages Root URL');\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar Console = /** @class */ (function () {\n    function Console() {\n    }\n    Console.prototype.log = function (message) {\n        // tslint:disable-next-line:no-console\n        console.log(message);\n    };\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    Console.prototype.warn = \n    // Note: for reporting errors use `DOM.logError()` as it is platform specific\n    function (message) {\n        // tslint:disable-next-line:no-console\n        console.warn(message);\n    };\n    Console.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    Console.ctorParameters = function () { return []; };\n    return Console;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Combination of NgModuleFactory and ComponentFactorys.\n *\n * @experimental\n */\nvar ModuleWithComponentFactories = /** @class */ (function () {\n    function ModuleWithComponentFactories(ngModuleFactory, componentFactories) {\n        this.ngModuleFactory = ngModuleFactory;\n        this.componentFactories = componentFactories;\n    }\n    return ModuleWithComponentFactories;\n}());\nfunction _throwError() {\n    throw new Error(\"Runtime compiler is not loaded\");\n}\n/**\n * Low-level service for running the angular compiler during runtime\n * to create {@link ComponentFactory}s, which\n * can later be used to create and render a Component instance.\n *\n * Each `@NgModule` provides an own `Compiler` to its injector,\n * that will use the directives/pipes of the ng module for compilation\n * of components.\n * @stable\n */\nvar Compiler = /** @class */ (function () {\n    function Compiler() {\n    }\n    /**\n     * Compiles the given NgModule and all of its components. All templates of the components listed\n     * in `entryComponents` have to be inlined.\n     */\n    /**\n       * Compiles the given NgModule and all of its components. All templates of the components listed\n       * in `entryComponents` have to be inlined.\n       */\n    Compiler.prototype.compileModuleSync = /**\n       * Compiles the given NgModule and all of its components. All templates of the components listed\n       * in `entryComponents` have to be inlined.\n       */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Compiles the given NgModule and all of its components\n     */\n    /**\n       * Compiles the given NgModule and all of its components\n       */\n    Compiler.prototype.compileModuleAsync = /**\n       * Compiles the given NgModule and all of its components\n       */\n    function (moduleType) { throw _throwError(); };\n    /**\n     * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n     */\n    /**\n       * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n       */\n    Compiler.prototype.compileModuleAndAllComponentsSync = /**\n       * Same as {@link #compileModuleSync} but also creates ComponentFactories for all components.\n       */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n     */\n    /**\n       * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n       */\n    Compiler.prototype.compileModuleAndAllComponentsAsync = /**\n       * Same as {@link #compileModuleAsync} but also creates ComponentFactories for all components.\n       */\n    function (moduleType) {\n        throw _throwError();\n    };\n    /**\n     * Clears all caches.\n     */\n    /**\n       * Clears all caches.\n       */\n    Compiler.prototype.clearCache = /**\n       * Clears all caches.\n       */\n    function () { };\n    /**\n     * Clears the cache for the given component/ngModule.\n     */\n    /**\n       * Clears the cache for the given component/ngModule.\n       */\n    Compiler.prototype.clearCacheFor = /**\n       * Clears the cache for the given component/ngModule.\n       */\n    function (type) { };\n    Compiler.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    Compiler.ctorParameters = function () { return []; };\n    return Compiler;\n}());\n/**\n * Token to provide CompilerOptions in the platform injector.\n *\n * @experimental\n */\nvar COMPILER_OPTIONS = new InjectionToken('compilerOptions');\n/**\n * A factory for creating a Compiler\n *\n * @experimental\n */\nvar CompilerFactory = /** @class */ (function () {\n    function CompilerFactory() {\n    }\n    return CompilerFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of a Component created via a {@link ComponentFactory}.\n *\n * `ComponentRef` provides access to the Component Instance as well other objects related to this\n * Component Instance and allows you to destroy the Component Instance via the {@link #destroy}\n * method.\n * @stable\n */\nvar ComponentRef = /** @class */ (function () {\n    function ComponentRef() {\n    }\n    return ComponentRef;\n}());\n/**\n * @stable\n */\nvar ComponentFactory = /** @class */ (function () {\n    function ComponentFactory() {\n    }\n    return ComponentFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction noComponentFactoryError(component) {\n    var error = Error(\"No component factory found for \" + stringify(component) + \". Did you add it to @NgModule.entryComponents?\");\n    error[ERROR_COMPONENT] = component;\n    return error;\n}\nvar ERROR_COMPONENT = 'ngComponent';\n\nvar _NullComponentFactoryResolver = /** @class */ (function () {\n    function _NullComponentFactoryResolver() {\n    }\n    _NullComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        throw noComponentFactoryError(component);\n    };\n    return _NullComponentFactoryResolver;\n}());\n/**\n * @stable\n */\nvar ComponentFactoryResolver = /** @class */ (function () {\n    function ComponentFactoryResolver() {\n    }\n    ComponentFactoryResolver.NULL = new _NullComponentFactoryResolver();\n    return ComponentFactoryResolver;\n}());\nvar CodegenComponentFactoryResolver = /** @class */ (function () {\n    function CodegenComponentFactoryResolver(factories, _parent, _ngModule) {\n        this._parent = _parent;\n        this._ngModule = _ngModule;\n        this._factories = new Map();\n        for (var i = 0; i < factories.length; i++) {\n            var factory = factories[i];\n            this._factories.set(factory.componentType, factory);\n        }\n    }\n    CodegenComponentFactoryResolver.prototype.resolveComponentFactory = function (component) {\n        var factory = this._factories.get(component);\n        if (!factory && this._parent) {\n            factory = this._parent.resolveComponentFactory(component);\n        }\n        if (!factory) {\n            throw noComponentFactoryError(component);\n        }\n        return new ComponentFactoryBoundToModule(factory, this._ngModule);\n    };\n    return CodegenComponentFactoryResolver;\n}());\nvar ComponentFactoryBoundToModule = /** @class */ (function (_super) {\n    tslib_1.__extends(ComponentFactoryBoundToModule, _super);\n    function ComponentFactoryBoundToModule(factory, ngModule) {\n        var _this = _super.call(this) || this;\n        _this.factory = factory;\n        _this.ngModule = ngModule;\n        _this.selector = factory.selector;\n        _this.componentType = factory.componentType;\n        _this.ngContentSelectors = factory.ngContentSelectors;\n        _this.inputs = factory.inputs;\n        _this.outputs = factory.outputs;\n        return _this;\n    }\n    ComponentFactoryBoundToModule.prototype.create = function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        return this.factory.create(injector, projectableNodes, rootSelectorOrNode, ngModule || this.ngModule);\n    };\n    return ComponentFactoryBoundToModule;\n}(ComponentFactory));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an instance of an NgModule created via a {@link NgModuleFactory}.\n *\n * `NgModuleRef` provides access to the NgModule Instance as well other objects related to this\n * NgModule Instance.\n *\n * @stable\n */\nvar NgModuleRef = /** @class */ (function () {\n    function NgModuleRef() {\n    }\n    return NgModuleRef;\n}());\n/**\n * @experimental\n */\nvar NgModuleFactory = /** @class */ (function () {\n    function NgModuleFactory() {\n    }\n    return NgModuleFactory;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar trace;\nvar events;\nfunction detectWTF() {\n    var wtf = _global /** TODO #9100 */['wtf'];\n    if (wtf) {\n        trace = wtf['trace'];\n        if (trace) {\n            events = trace['events'];\n            return true;\n        }\n    }\n    return false;\n}\nfunction createScope(signature, flags) {\n    if (flags === void 0) { flags = null; }\n    return events.createScope(signature, flags);\n}\nfunction leave(scope, returnValue) {\n    trace.leaveScope(scope, returnValue);\n    return returnValue;\n}\nfunction startTimeRange(rangeType, action) {\n    return trace.beginTimeRange(rangeType, action);\n}\nfunction endTimeRange(range) {\n    trace.endTimeRange(range);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * True if WTF is enabled.\n */\nvar wtfEnabled = detectWTF();\nfunction noopScope(arg0, arg1) {\n    return null;\n}\n/**\n * Create trace scope.\n *\n * Scopes must be strictly nested and are analogous to stack frames, but\n * do not have to follow the stack frames. Instead it is recommended that they follow logical\n * nesting. You may want to use\n * [Event\n * Signatures](http://google.github.io/tracing-framework/instrumenting-code.html#custom-events)\n * as they are defined in WTF.\n *\n * Used to mark scope entry. The return value is used to leave the scope.\n *\n *     var myScope = wtfCreateScope('MyClass#myMethod(ascii someVal)');\n *\n *     someMethod() {\n *        var s = myScope('Foo'); // 'Foo' gets stored in tracing UI\n *        // DO SOME WORK HERE\n *        return wtfLeave(s, 123); // Return value 123\n *     }\n *\n * Note, adding try-finally block around the work to ensure that `wtfLeave` gets called can\n * negatively impact the performance of your application. For this reason we recommend that\n * you don't add them to ensure that `wtfLeave` gets called. In production `wtfLeave` is a noop and\n * so try-finally block has no value. When debugging perf issues, skipping `wtfLeave`, do to\n * exception, will produce incorrect trace, but presence of exception signifies logic error which\n * needs to be fixed before the app should be profiled. Add try-finally only when you expect that\n * an exception is expected during normal execution while profiling.\n *\n * @experimental\n */\nvar wtfCreateScope = wtfEnabled ? createScope : function (signature, flags) { return noopScope; };\n/**\n * Used to mark end of Scope.\n *\n * - `scope` to end.\n * - `returnValue` (optional) to be passed to the WTF.\n *\n * Returns the `returnValue for easy chaining.\n * @experimental\n */\nvar wtfLeave = wtfEnabled ? leave : function (s, r) { return r; };\n/**\n * Used to mark Async start. Async are similar to scope but they don't have to be strictly nested.\n * The return value is used in the call to [endAsync]. Async ranges only work if WTF has been\n * enabled.\n *\n *     someMethod() {\n *        var s = wtfStartTimeRange('HTTP:GET', 'some.url');\n *        var future = new Future.delay(5).then((_) {\n *          wtfEndTimeRange(s);\n *        });\n *     }\n * @experimental\n */\nvar wtfStartTimeRange = wtfEnabled ? startTimeRange : function (rangeType, action) { return null; };\n/**\n * Ends a async time range operation.\n * [range] is the return value from [wtfStartTimeRange] Async ranges only work if WTF has been\n * enabled.\n * @experimental\n */\nvar wtfEndTimeRange = wtfEnabled ? endTimeRange : function (r) { return null; };\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Use by directives and components to emit custom Events.\n *\n * ### Examples\n *\n * In the following example, `Zippy` alternatively emits `open` and `close` events when its\n * title gets clicked:\n *\n * ```\n * @Component({\n *   selector: 'zippy',\n *   template: `\n *   <div class=\"zippy\">\n *     <div (click)=\"toggle()\">Toggle</div>\n *     <div [hidden]=\"!visible\">\n *       <ng-content></ng-content>\n *     </div>\n *  </div>`})\n * export class Zippy {\n *   visible: boolean = true;\n *   @Output() open: EventEmitter<any> = new EventEmitter();\n *   @Output() close: EventEmitter<any> = new EventEmitter();\n *\n *   toggle() {\n *     this.visible = !this.visible;\n *     if (this.visible) {\n *       this.open.emit(null);\n *     } else {\n *       this.close.emit(null);\n *     }\n *   }\n * }\n * ```\n *\n * The events payload can be accessed by the parameter `$event` on the components output event\n * handler:\n *\n * ```\n * <zippy (open)=\"onOpen($event)\" (close)=\"onClose($event)\"></zippy>\n * ```\n *\n * Uses Rx.Observable but provides an adapter to make it work as specified here:\n * https://github.com/jhusain/observable-spec\n *\n * Once a reference implementation of the spec is available, switch to it.\n * @stable\n */\nvar EventEmitter = /** @class */ (function (_super) {\n    tslib_1.__extends(EventEmitter, _super);\n    /**\n     * Creates an instance of {@link EventEmitter}, which depending on `isAsync`,\n     * delivers events synchronously or asynchronously.\n     *\n     * @param isAsync By default, events are delivered synchronously (default value: `false`).\n     * Set to `true` for asynchronous event delivery.\n     */\n    function EventEmitter(isAsync) {\n        if (isAsync === void 0) { isAsync = false; }\n        var _this = _super.call(this) || this;\n        _this.__isAsync = isAsync;\n        return _this;\n    }\n    EventEmitter.prototype.emit = function (value) { _super.prototype.next.call(this, value); };\n    EventEmitter.prototype.subscribe = function (generatorOrNext, error, complete) {\n        var schedulerFn;\n        var errorFn = function (err) { return null; };\n        var completeFn = function () { return null; };\n        if (generatorOrNext && typeof generatorOrNext === 'object') {\n            schedulerFn = this.__isAsync ? function (value) {\n                setTimeout(function () { return generatorOrNext.next(value); });\n            } : function (value) { generatorOrNext.next(value); };\n            if (generatorOrNext.error) {\n                errorFn = this.__isAsync ? function (err) { setTimeout(function () { return generatorOrNext.error(err); }); } :\n                    function (err) { generatorOrNext.error(err); };\n            }\n            if (generatorOrNext.complete) {\n                completeFn = this.__isAsync ? function () { setTimeout(function () { return generatorOrNext.complete(); }); } :\n                    function () { generatorOrNext.complete(); };\n            }\n        }\n        else {\n            schedulerFn = this.__isAsync ? function (value) { setTimeout(function () { return generatorOrNext(value); }); } :\n                function (value) { generatorOrNext(value); };\n            if (error) {\n                errorFn =\n                    this.__isAsync ? function (err) { setTimeout(function () { return error(err); }); } : function (err) { error(err); };\n            }\n            if (complete) {\n                completeFn =\n                    this.__isAsync ? function () { setTimeout(function () { return complete(); }); } : function () { complete(); };\n            }\n        }\n        var sink = _super.prototype.subscribe.call(this, schedulerFn, errorFn, completeFn);\n        if (generatorOrNext instanceof rxjs.Subscription) {\n            generatorOrNext.add(sink);\n        }\n        return sink;\n    };\n    return EventEmitter;\n}(rxjs.Subject));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An injectable service for executing work inside or outside of the Angular zone.\n *\n * The most common use of this service is to optimize performance when starting a work consisting of\n * one or more asynchronous tasks that don't require UI updates or error handling to be handled by\n * Angular. Such tasks can be kicked off via {@link #runOutsideAngular} and if needed, these tasks\n * can reenter the Angular zone via {@link #run}.\n *\n * <!-- TODO: add/fix links to:\n *   - docs explaining zones and the use of zones in Angular and change-detection\n *   - link to runOutsideAngular/run (throughout this file!)\n *   -->\n *\n * ### Example\n *\n * ```\n * import {Component, NgZone} from '@angular/core';\n * import {NgIf} from '@angular/common';\n *\n * @Component({\n *   selector: 'ng-zone-demo',\n *   template: `\n *     <h2>Demo: NgZone</h2>\n *\n *     <p>Progress: {{progress}}%</p>\n *     <p *ngIf=\"progress >= 100\">Done processing {{label}} of Angular zone!</p>\n *\n *     <button (click)=\"processWithinAngularZone()\">Process within Angular zone</button>\n *     <button (click)=\"processOutsideOfAngularZone()\">Process outside of Angular zone</button>\n *   `,\n * })\n * export class NgZoneDemo {\n *   progress: number = 0;\n *   label: string;\n *\n *   constructor(private _ngZone: NgZone) {}\n *\n *   // Loop inside the Angular zone\n *   // so the UI DOES refresh after each setTimeout cycle\n *   processWithinAngularZone() {\n *     this.label = 'inside';\n *     this.progress = 0;\n *     this._increaseProgress(() => console.log('Inside Done!'));\n *   }\n *\n *   // Loop outside of the Angular zone\n *   // so the UI DOES NOT refresh after each setTimeout cycle\n *   processOutsideOfAngularZone() {\n *     this.label = 'outside';\n *     this.progress = 0;\n *     this._ngZone.runOutsideAngular(() => {\n *       this._increaseProgress(() => {\n *         // reenter the Angular zone and display done\n *         this._ngZone.run(() => { console.log('Outside Done!'); });\n *       });\n *     });\n *   }\n *\n *   _increaseProgress(doneCallback: () => void) {\n *     this.progress += 1;\n *     console.log(`Current progress: ${this.progress}%`);\n *\n *     if (this.progress < 100) {\n *       window.setTimeout(() => this._increaseProgress(doneCallback), 10);\n *     } else {\n *       doneCallback();\n *     }\n *   }\n * }\n * ```\n *\n * @experimental\n */\nvar NgZone = /** @class */ (function () {\n    function NgZone(_a) {\n        var _b = _a.enableLongStackTrace, enableLongStackTrace = _b === void 0 ? false : _b;\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        /**\n           * Whether there are no outstanding microtasks or macrotasks.\n           */\n        this.isStable = true;\n        /**\n           * Notifies when code enters Angular Zone. This gets fired first on VM Turn.\n           */\n        this.onUnstable = new EventEmitter(false);\n        /**\n           * Notifies when there is no more microtasks enqueued in the current VM Turn.\n           * This is a hint for Angular to do change detection, which may enqueue more microtasks.\n           * For this reason this event can fire multiple times per VM Turn.\n           */\n        this.onMicrotaskEmpty = new EventEmitter(false);\n        /**\n           * Notifies when the last `onMicrotaskEmpty` has run and there are no more microtasks, which\n           * implies we are about to relinquish VM turn.\n           * This event gets called just once.\n           */\n        this.onStable = new EventEmitter(false);\n        /**\n           * Notifies that an error has been delivered.\n           */\n        this.onError = new EventEmitter(false);\n        if (typeof Zone == 'undefined') {\n            throw new Error(\"In this configuration Angular requires Zone.js\");\n        }\n        Zone.assertZonePatched();\n        var self = this;\n        self._nesting = 0;\n        self._outer = self._inner = Zone.current;\n        if (Zone['wtfZoneSpec']) {\n            self._inner = self._inner.fork(Zone['wtfZoneSpec']);\n        }\n        if (Zone['TaskTrackingZoneSpec']) {\n            self._inner = self._inner.fork(new Zone['TaskTrackingZoneSpec']);\n        }\n        if (enableLongStackTrace && Zone['longStackTraceZoneSpec']) {\n            self._inner = self._inner.fork(Zone['longStackTraceZoneSpec']);\n        }\n        forkInnerZoneWithAngularBehavior(self);\n    }\n    NgZone.isInAngularZone = function () { return Zone.current.get('isAngularZone') === true; };\n    NgZone.assertInAngularZone = function () {\n        if (!NgZone.isInAngularZone()) {\n            throw new Error('Expected to be in Angular Zone, but it is not!');\n        }\n    };\n    NgZone.assertNotInAngularZone = function () {\n        if (NgZone.isInAngularZone()) {\n            throw new Error('Expected to not be in Angular Zone, but it is!');\n        }\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n     * the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n       * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n       * the function.\n       *\n       * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n       * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n       *\n       * Any future tasks or microtasks scheduled from within this function will continue executing from\n       * within the Angular zone.\n       *\n       * If a synchronous error happens it will be rethrown and not reported via `onError`.\n       */\n    NgZone.prototype.run = /**\n       * Executes the `fn` function synchronously within the Angular zone and returns value returned by\n       * the function.\n       *\n       * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n       * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n       *\n       * Any future tasks or microtasks scheduled from within this function will continue executing from\n       * within the Angular zone.\n       *\n       * If a synchronous error happens it will be rethrown and not reported via `onError`.\n       */\n    function (fn, applyThis, applyArgs) {\n        return this._inner.run(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n     * returned by the function.\n     *\n     * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n     * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * within the Angular zone.\n     *\n     * If a synchronous error happens it will be rethrown and not reported via `onError`.\n     */\n    /**\n       * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n       * returned by the function.\n       *\n       * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n       * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n       *\n       * Any future tasks or microtasks scheduled from within this function will continue executing from\n       * within the Angular zone.\n       *\n       * If a synchronous error happens it will be rethrown and not reported via `onError`.\n       */\n    NgZone.prototype.runTask = /**\n       * Executes the `fn` function synchronously within the Angular zone as a task and returns value\n       * returned by the function.\n       *\n       * Running functions via `run` allows you to reenter Angular zone from a task that was executed\n       * outside of the Angular zone (typically started via {@link #runOutsideAngular}).\n       *\n       * Any future tasks or microtasks scheduled from within this function will continue executing from\n       * within the Angular zone.\n       *\n       * If a synchronous error happens it will be rethrown and not reported via `onError`.\n       */\n    function (fn, applyThis, applyArgs, name) {\n        var zone = this._inner;\n        var task = zone.scheduleEventTask('NgZoneEvent: ' + name, fn, EMPTY_PAYLOAD, noop, noop);\n        try {\n            return zone.runTask(task, applyThis, applyArgs);\n        }\n        finally {\n            zone.cancelTask(task);\n        }\n    };\n    /**\n     * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n     * rethrown.\n     */\n    /**\n       * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n       * rethrown.\n       */\n    NgZone.prototype.runGuarded = /**\n       * Same as `run`, except that synchronous errors are caught and forwarded via `onError` and not\n       * rethrown.\n       */\n    function (fn, applyThis, applyArgs) {\n        return this._inner.runGuarded(fn, applyThis, applyArgs);\n    };\n    /**\n     * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n     * the function.\n     *\n     * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n     * work that\n     * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n     *\n     * Any future tasks or microtasks scheduled from within this function will continue executing from\n     * outside of the Angular zone.\n     *\n     * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n     */\n    /**\n       * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n       * the function.\n       *\n       * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n       * work that\n       * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n       *\n       * Any future tasks or microtasks scheduled from within this function will continue executing from\n       * outside of the Angular zone.\n       *\n       * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n       */\n    NgZone.prototype.runOutsideAngular = /**\n       * Executes the `fn` function synchronously in Angular's parent zone and returns value returned by\n       * the function.\n       *\n       * Running functions via {@link #runOutsideAngular} allows you to escape Angular's zone and do\n       * work that\n       * doesn't trigger Angular change-detection or is subject to Angular's error handling.\n       *\n       * Any future tasks or microtasks scheduled from within this function will continue executing from\n       * outside of the Angular zone.\n       *\n       * Use {@link #run} to reenter the Angular zone and do work that updates the application model.\n       */\n    function (fn) {\n        return this._outer.run(fn);\n    };\n    return NgZone;\n}());\nfunction noop() { }\nvar EMPTY_PAYLOAD = {};\nfunction checkStable(zone) {\n    if (zone._nesting == 0 && !zone.hasPendingMicrotasks && !zone.isStable) {\n        try {\n            zone._nesting++;\n            zone.onMicrotaskEmpty.emit(null);\n        }\n        finally {\n            zone._nesting--;\n            if (!zone.hasPendingMicrotasks) {\n                try {\n                    zone.runOutsideAngular(function () { return zone.onStable.emit(null); });\n                }\n                finally {\n                    zone.isStable = true;\n                }\n            }\n        }\n    }\n}\nfunction forkInnerZoneWithAngularBehavior(zone) {\n    zone._inner = zone._inner.fork({\n        name: 'angular',\n        properties: { 'isAngularZone': true },\n        onInvokeTask: function (delegate, current, target, task, applyThis, applyArgs) {\n            try {\n                onEnter(zone);\n                return delegate.invokeTask(target, task, applyThis, applyArgs);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onInvoke: function (delegate, current, target, callback, applyThis, applyArgs, source) {\n            try {\n                onEnter(zone);\n                return delegate.invoke(target, callback, applyThis, applyArgs, source);\n            }\n            finally {\n                onLeave(zone);\n            }\n        },\n        onHasTask: function (delegate, current, target, hasTaskState) {\n            delegate.hasTask(target, hasTaskState);\n            if (current === target) {\n                // We are only interested in hasTask events which originate from our zone\n                // (A child hasTask event is not interesting to us)\n                if (hasTaskState.change == 'microTask') {\n                    zone.hasPendingMicrotasks = hasTaskState.microTask;\n                    checkStable(zone);\n                }\n                else if (hasTaskState.change == 'macroTask') {\n                    zone.hasPendingMacrotasks = hasTaskState.macroTask;\n                }\n            }\n        },\n        onHandleError: function (delegate, current, target, error) {\n            delegate.handleError(target, error);\n            zone.runOutsideAngular(function () { return zone.onError.emit(error); });\n            return false;\n        }\n    });\n}\nfunction onEnter(zone) {\n    zone._nesting++;\n    if (zone.isStable) {\n        zone.isStable = false;\n        zone.onUnstable.emit(null);\n    }\n}\nfunction onLeave(zone) {\n    zone._nesting--;\n    checkStable(zone);\n}\n/**\n * Provides a noop implementation of `NgZone` which does nothing. This zone requires explicit calls\n * to framework to perform rendering.\n */\nvar NoopNgZone = /** @class */ (function () {\n    function NoopNgZone() {\n        this.hasPendingMicrotasks = false;\n        this.hasPendingMacrotasks = false;\n        this.isStable = true;\n        this.onUnstable = new EventEmitter();\n        this.onMicrotaskEmpty = new EventEmitter();\n        this.onStable = new EventEmitter();\n        this.onError = new EventEmitter();\n    }\n    NoopNgZone.prototype.run = function (fn) { return fn(); };\n    NoopNgZone.prototype.runGuarded = function (fn) { return fn(); };\n    NoopNgZone.prototype.runOutsideAngular = function (fn) { return fn(); };\n    NoopNgZone.prototype.runTask = function (fn) { return fn(); };\n    return NoopNgZone;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * The Testability service provides testing hooks that can be accessed from\n * the browser and by services such as Protractor. Each bootstrapped Angular\n * application on the page will have an instance of Testability.\n * @experimental\n */\nvar Testability = /** @class */ (function () {\n    function Testability(_ngZone) {\n        var _this = this;\n        this._ngZone = _ngZone;\n        this._pendingCount = 0;\n        this._isZoneStable = true;\n        /**\n           * Whether any work was done since the last 'whenStable' callback. This is\n           * useful to detect if this could have potentially destabilized another\n           * component while it is stabilizing.\n           * @internal\n           */\n        this._didWork = false;\n        this._callbacks = [];\n        this._watchAngularEvents();\n        _ngZone.run(function () { _this.taskTrackingZone = Zone.current.get('TaskTrackingZone'); });\n    }\n    Testability.prototype._watchAngularEvents = function () {\n        var _this = this;\n        this._ngZone.onUnstable.subscribe({\n            next: function () {\n                _this._didWork = true;\n                _this._isZoneStable = false;\n            }\n        });\n        this._ngZone.runOutsideAngular(function () {\n            _this._ngZone.onStable.subscribe({\n                next: function () {\n                    NgZone.assertNotInAngularZone();\n                    scheduleMicroTask(function () {\n                        _this._isZoneStable = true;\n                        _this._runCallbacksIfReady();\n                    });\n                }\n            });\n        });\n    };\n    /**\n     * Increases the number of pending request\n     * @deprecated pending requests are now tracked with zones.\n     */\n    /**\n       * Increases the number of pending request\n       * @deprecated pending requests are now tracked with zones.\n       */\n    Testability.prototype.increasePendingRequestCount = /**\n       * Increases the number of pending request\n       * @deprecated pending requests are now tracked with zones.\n       */\n    function () {\n        this._pendingCount += 1;\n        this._didWork = true;\n        return this._pendingCount;\n    };\n    /**\n     * Decreases the number of pending request\n     * @deprecated pending requests are now tracked with zones\n     */\n    /**\n       * Decreases the number of pending request\n       * @deprecated pending requests are now tracked with zones\n       */\n    Testability.prototype.decreasePendingRequestCount = /**\n       * Decreases the number of pending request\n       * @deprecated pending requests are now tracked with zones\n       */\n    function () {\n        this._pendingCount -= 1;\n        if (this._pendingCount < 0) {\n            throw new Error('pending async requests below zero');\n        }\n        this._runCallbacksIfReady();\n        return this._pendingCount;\n    };\n    /**\n     * Whether an associated application is stable\n     */\n    /**\n       * Whether an associated application is stable\n       */\n    Testability.prototype.isStable = /**\n       * Whether an associated application is stable\n       */\n    function () {\n        return this._isZoneStable && this._pendingCount === 0 && !this._ngZone.hasPendingMacrotasks;\n    };\n    Testability.prototype._runCallbacksIfReady = function () {\n        var _this = this;\n        if (this.isStable()) {\n            // Schedules the call backs in a new frame so that it is always async.\n            scheduleMicroTask(function () {\n                while (_this._callbacks.length !== 0) {\n                    var cb = (_this._callbacks.pop());\n                    clearTimeout(cb.timeoutId);\n                    cb.doneCb(_this._didWork);\n                }\n                _this._didWork = false;\n            });\n        }\n        else {\n            // Still not stable, send updates.\n            var pending_1 = this.getPendingTasks();\n            this._callbacks = this._callbacks.filter(function (cb) {\n                if (cb.updateCb && cb.updateCb(pending_1)) {\n                    clearTimeout(cb.timeoutId);\n                    return false;\n                }\n                return true;\n            });\n            this._didWork = true;\n        }\n    };\n    Testability.prototype.getPendingTasks = function () {\n        if (!this.taskTrackingZone) {\n            return [];\n        }\n        return this.taskTrackingZone.macroTasks.map(function (t) {\n            return {\n                source: t.source,\n                isPeriodic: t.data.isPeriodic,\n                delay: t.data.delay,\n                // From TaskTrackingZone:\n                // https://github.com/angular/zone.js/blob/master/lib/zone-spec/task-tracking.ts#L40\n                creationLocation: t.creationLocation,\n                // Added by Zones for XHRs\n                // https://github.com/angular/zone.js/blob/master/lib/browser/browser.ts#L133\n                xhr: t.data.target\n            };\n        });\n    };\n    Testability.prototype.addCallback = function (cb, timeout, updateCb) {\n        var _this = this;\n        var timeoutId = -1;\n        if (timeout && timeout > 0) {\n            timeoutId = setTimeout(function () {\n                _this._callbacks = _this._callbacks.filter(function (cb) { return cb.timeoutId !== timeoutId; });\n                cb(_this._didWork, _this.getPendingTasks());\n            }, timeout);\n        }\n        this._callbacks.push({ doneCb: cb, timeoutId: timeoutId, updateCb: updateCb });\n    };\n    /**\n     * Wait for the application to be stable with a timeout. If the timeout is reached before that\n     * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n     *\n     * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n     *    whichever comes first.\n     * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n     *    specified, whenStable() will wait forever.\n     * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n     *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n     *    and no further updates will be issued.\n     */\n    /**\n       * Wait for the application to be stable with a timeout. If the timeout is reached before that\n       * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n       *\n       * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n       *    whichever comes first.\n       * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n       *    specified, whenStable() will wait forever.\n       * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n       *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n       *    and no further updates will be issued.\n       */\n    Testability.prototype.whenStable = /**\n       * Wait for the application to be stable with a timeout. If the timeout is reached before that\n       * happens, the callback receives a list of the macro tasks that were pending, otherwise null.\n       *\n       * @param doneCb The callback to invoke when Angular is stable or the timeout expires\n       *    whichever comes first.\n       * @param timeout Optional. The maximum time to wait for Angular to become stable. If not\n       *    specified, whenStable() will wait forever.\n       * @param updateCb Optional. If specified, this callback will be invoked whenever the set of\n       *    pending macrotasks changes. If this callback returns true doneCb will not be invoked\n       *    and no further updates will be issued.\n       */\n    function (doneCb, timeout, updateCb) {\n        if (updateCb && !this.taskTrackingZone) {\n            throw new Error('Task tracking zone is required when passing an update callback to ' +\n                'whenStable(). Is \"zone.js/dist/task-tracking.js\" loaded?');\n        }\n        // These arguments are 'Function' above to keep the public API simple.\n        this.addCallback(doneCb, timeout, updateCb);\n        this._runCallbacksIfReady();\n    };\n    /**\n     * Get the number of pending requests\n     * @deprecated pending requests are now tracked with zones\n     */\n    /**\n       * Get the number of pending requests\n       * @deprecated pending requests are now tracked with zones\n       */\n    Testability.prototype.getPendingRequestCount = /**\n       * Get the number of pending requests\n       * @deprecated pending requests are now tracked with zones\n       */\n    function () { return this._pendingCount; };\n    /**\n     * Find providers by name\n     * @param using The root element to search from\n     * @param provider The name of binding variable\n     * @param exactMatch Whether using exactMatch\n     */\n    /**\n       * Find providers by name\n       * @param using The root element to search from\n       * @param provider The name of binding variable\n       * @param exactMatch Whether using exactMatch\n       */\n    Testability.prototype.findProviders = /**\n       * Find providers by name\n       * @param using The root element to search from\n       * @param provider The name of binding variable\n       * @param exactMatch Whether using exactMatch\n       */\n    function (using, provider, exactMatch) {\n        // TODO(juliemr): implement.\n        return [];\n    };\n    Testability.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    Testability.ctorParameters = function () { return [\n        { type: NgZone, },\n    ]; };\n    return Testability;\n}());\n/**\n * A global registry of {@link Testability} instances for specific elements.\n * @experimental\n */\nvar TestabilityRegistry = /** @class */ (function () {\n    function TestabilityRegistry() {\n        /** @internal */\n        this._applications = new Map();\n        _testabilityGetter.addToWindow(this);\n    }\n    /**\n     * Registers an application with a testability hook so that it can be tracked\n     * @param token token of application, root element\n     * @param testability Testability hook\n     */\n    /**\n       * Registers an application with a testability hook so that it can be tracked\n       * @param token token of application, root element\n       * @param testability Testability hook\n       */\n    TestabilityRegistry.prototype.registerApplication = /**\n       * Registers an application with a testability hook so that it can be tracked\n       * @param token token of application, root element\n       * @param testability Testability hook\n       */\n    function (token, testability) {\n        this._applications.set(token, testability);\n    };\n    /**\n     * Unregisters an application.\n     * @param token token of application, root element\n     */\n    /**\n       * Unregisters an application.\n       * @param token token of application, root element\n       */\n    TestabilityRegistry.prototype.unregisterApplication = /**\n       * Unregisters an application.\n       * @param token token of application, root element\n       */\n    function (token) { this._applications.delete(token); };\n    /**\n     * Unregisters all applications\n     */\n    /**\n       * Unregisters all applications\n       */\n    TestabilityRegistry.prototype.unregisterAllApplications = /**\n       * Unregisters all applications\n       */\n    function () { this._applications.clear(); };\n    /**\n     * Get a testability hook associated with the application\n     * @param elem root element\n     */\n    /**\n       * Get a testability hook associated with the application\n       * @param elem root element\n       */\n    TestabilityRegistry.prototype.getTestability = /**\n       * Get a testability hook associated with the application\n       * @param elem root element\n       */\n    function (elem) { return this._applications.get(elem) || null; };\n    /**\n     * Get all registered testabilities\n     */\n    /**\n       * Get all registered testabilities\n       */\n    TestabilityRegistry.prototype.getAllTestabilities = /**\n       * Get all registered testabilities\n       */\n    function () { return Array.from(this._applications.values()); };\n    /**\n     * Get all registered applications(root elements)\n     */\n    /**\n       * Get all registered applications(root elements)\n       */\n    TestabilityRegistry.prototype.getAllRootElements = /**\n       * Get all registered applications(root elements)\n       */\n    function () { return Array.from(this._applications.keys()); };\n    /**\n     * Find testability of a node in the Tree\n     * @param elem node\n     * @param findInAncestors whether finding testability in ancestors if testability was not found in\n     * current node\n     */\n    /**\n       * Find testability of a node in the Tree\n       * @param elem node\n       * @param findInAncestors whether finding testability in ancestors if testability was not found in\n       * current node\n       */\n    TestabilityRegistry.prototype.findTestabilityInTree = /**\n       * Find testability of a node in the Tree\n       * @param elem node\n       * @param findInAncestors whether finding testability in ancestors if testability was not found in\n       * current node\n       */\n    function (elem, findInAncestors) {\n        if (findInAncestors === void 0) { findInAncestors = true; }\n        return _testabilityGetter.findTestabilityInTree(this, elem, findInAncestors);\n    };\n    TestabilityRegistry.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    TestabilityRegistry.ctorParameters = function () { return []; };\n    return TestabilityRegistry;\n}());\nvar _NoopGetTestability = /** @class */ (function () {\n    function _NoopGetTestability() {\n    }\n    _NoopGetTestability.prototype.addToWindow = function (registry) { };\n    _NoopGetTestability.prototype.findTestabilityInTree = function (registry, elem, findInAncestors) {\n        return null;\n    };\n    return _NoopGetTestability;\n}());\n/**\n * Set the {@link GetTestability} implementation used by the Angular testing framework.\n * @experimental\n */\nfunction setTestabilityGetter(getter) {\n    _testabilityGetter = getter;\n}\nvar _testabilityGetter = new _NoopGetTestability();\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _devMode = true;\nvar _runModeLocked = false;\nvar _platform;\nvar ALLOW_MULTIPLE_PLATFORMS = new InjectionToken('AllowMultipleToken');\n/**\n * Disable Angular's development mode, which turns off assertions and other\n * checks within the framework.\n *\n * One important assertion this disables verifies that a change detection pass\n * does not result in additional changes to any bindings (also known as\n * unidirectional data flow).\n *\n * @stable\n */\nfunction enableProdMode() {\n    if (_runModeLocked) {\n        throw new Error('Cannot enable prod mode after platform setup.');\n    }\n    _devMode = false;\n}\n/**\n * Returns whether Angular is in development mode. After called once,\n * the value is locked and won't change any more.\n *\n * By default, this is true, unless a user calls `enableProdMode` before calling this.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction isDevMode() {\n    _runModeLocked = true;\n    return _devMode;\n}\n/**\n * A token for third-party components that can register themselves with NgProbe.\n *\n * @experimental\n */\nvar NgProbeToken = /** @class */ (function () {\n    function NgProbeToken(name, token) {\n        this.name = name;\n        this.token = token;\n    }\n    return NgProbeToken;\n}());\n/**\n * Creates a platform.\n * Platforms have to be eagerly created via this function.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction createPlatform(injector) {\n    if (_platform && !_platform.destroyed &&\n        !_platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n        throw new Error('There can be only one platform. Destroy the previous one to create a new one.');\n    }\n    _platform = injector.get(PlatformRef);\n    var inits = injector.get(PLATFORM_INITIALIZER, null);\n    if (inits)\n        inits.forEach(function (init) { return init(); });\n    return _platform;\n}\n/**\n * Creates a factory for a platform\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction createPlatformFactory(parentPlatformFactory, name, providers) {\n    if (providers === void 0) { providers = []; }\n    var desc = \"Platform: \" + name;\n    var marker = new InjectionToken(desc);\n    return function (extraProviders) {\n        if (extraProviders === void 0) { extraProviders = []; }\n        var platform = getPlatform();\n        if (!platform || platform.injector.get(ALLOW_MULTIPLE_PLATFORMS, false)) {\n            if (parentPlatformFactory) {\n                parentPlatformFactory(providers.concat(extraProviders).concat({ provide: marker, useValue: true }));\n            }\n            else {\n                var injectedProviders = providers.concat(extraProviders).concat({ provide: marker, useValue: true });\n                createPlatform(Injector.create({ providers: injectedProviders, name: desc }));\n            }\n        }\n        return assertPlatform(marker);\n    };\n}\n/**\n * Checks that there currently is a platform which contains the given token as a provider.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction assertPlatform(requiredToken) {\n    var platform = getPlatform();\n    if (!platform) {\n        throw new Error('No platform exists!');\n    }\n    if (!platform.injector.get(requiredToken, null)) {\n        throw new Error('A platform with a different configuration has been created. Please destroy it first.');\n    }\n    return platform;\n}\n/**\n * Destroy the existing platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction destroyPlatform() {\n    if (_platform && !_platform.destroyed) {\n        _platform.destroy();\n    }\n}\n/**\n * Returns the current platform.\n *\n * @experimental APIs related to application bootstrap are currently under review.\n */\nfunction getPlatform() {\n    return _platform && !_platform.destroyed ? _platform : null;\n}\n/**\n * The Angular platform is the entry point for Angular on a web page. Each page\n * has exactly one platform, and services (such as reflection) which are common\n * to every Angular application running on the page are bound in its scope.\n *\n * A page's platform is initialized implicitly when a platform is created via a platform factory\n * (e.g. {@link platformBrowser}), or explicitly by calling the {@link createPlatform} function.\n *\n * @stable\n */\nvar PlatformRef = /** @class */ (function () {\n    /** @internal */\n    function PlatformRef(_injector) {\n        this._injector = _injector;\n        this._modules = [];\n        this._destroyListeners = [];\n        this._destroyed = false;\n    }\n    /**\n     * Creates an instance of an `@NgModule` for the given platform\n     * for offline compilation.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * my_module.ts:\n     *\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * main.ts:\n     * import {MyModuleNgFactory} from './my_module.ngfactory';\n     * import {platformBrowser} from '@angular/platform-browser';\n     *\n     * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n     * ```\n     *\n     * @experimental APIs related to application bootstrap are currently under review.\n     */\n    /**\n       * Creates an instance of an `@NgModule` for the given platform\n       * for offline compilation.\n       *\n       * ## Simple Example\n       *\n       * ```typescript\n       * my_module.ts:\n       *\n       * @NgModule({\n       *   imports: [BrowserModule]\n       * })\n       * class MyModule {}\n       *\n       * main.ts:\n       * import {MyModuleNgFactory} from './my_module.ngfactory';\n       * import {platformBrowser} from '@angular/platform-browser';\n       *\n       * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n       * ```\n       *\n       * @experimental APIs related to application bootstrap are currently under review.\n       */\n    PlatformRef.prototype.bootstrapModuleFactory = /**\n       * Creates an instance of an `@NgModule` for the given platform\n       * for offline compilation.\n       *\n       * ## Simple Example\n       *\n       * ```typescript\n       * my_module.ts:\n       *\n       * @NgModule({\n       *   imports: [BrowserModule]\n       * })\n       * class MyModule {}\n       *\n       * main.ts:\n       * import {MyModuleNgFactory} from './my_module.ngfactory';\n       * import {platformBrowser} from '@angular/platform-browser';\n       *\n       * let moduleRef = platformBrowser().bootstrapModuleFactory(MyModuleNgFactory);\n       * ```\n       *\n       * @experimental APIs related to application bootstrap are currently under review.\n       */\n    function (moduleFactory, options) {\n        var _this = this;\n        // Note: We need to create the NgZone _before_ we instantiate the module,\n        // as instantiating the module creates some providers eagerly.\n        // So we create a mini parent injector that just contains the new NgZone and\n        // pass that as parent to the NgModuleFactory.\n        var ngZoneOption = options ? options.ngZone : undefined;\n        var ngZone = getNgZone(ngZoneOption);\n        var providers = [{ provide: NgZone, useValue: ngZone }];\n        // Attention: Don't use ApplicationRef.run here,\n        // as we want to be sure that all possible constructor calls are inside `ngZone.run`!\n        return ngZone.run(function () {\n            var ngZoneInjector = Injector.create({ providers: providers, parent: _this.injector, name: moduleFactory.moduleType.name });\n            var moduleRef = moduleFactory.create(ngZoneInjector);\n            var exceptionHandler = moduleRef.injector.get(ErrorHandler, null);\n            if (!exceptionHandler) {\n                throw new Error('No ErrorHandler. Is platform module (BrowserModule) included?');\n            }\n            moduleRef.onDestroy(function () { return remove(_this._modules, moduleRef); });\n            ngZone.runOutsideAngular(function () {\n                return ngZone.onError.subscribe({ next: function (error) { exceptionHandler.handleError(error); } });\n            });\n            return _callAndReportToErrorHandler(exceptionHandler, (ngZone), function () {\n                var initStatus = moduleRef.injector.get(ApplicationInitStatus);\n                initStatus.runInitializers();\n                return initStatus.donePromise.then(function () {\n                    _this._moduleDoBootstrap(moduleRef);\n                    return moduleRef;\n                });\n            });\n        });\n    };\n    /**\n     * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n     *\n     * ## Simple Example\n     *\n     * ```typescript\n     * @NgModule({\n     *   imports: [BrowserModule]\n     * })\n     * class MyModule {}\n     *\n     * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n     * ```\n     * @stable\n     */\n    /**\n       * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n       *\n       * ## Simple Example\n       *\n       * ```typescript\n       * @NgModule({\n       *   imports: [BrowserModule]\n       * })\n       * class MyModule {}\n       *\n       * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n       * ```\n       * @stable\n       */\n    PlatformRef.prototype.bootstrapModule = /**\n       * Creates an instance of an `@NgModule` for a given platform using the given runtime compiler.\n       *\n       * ## Simple Example\n       *\n       * ```typescript\n       * @NgModule({\n       *   imports: [BrowserModule]\n       * })\n       * class MyModule {}\n       *\n       * let moduleRef = platformBrowser().bootstrapModule(MyModule);\n       * ```\n       * @stable\n       */\n    function (moduleType, compilerOptions) {\n        var _this = this;\n        if (compilerOptions === void 0) { compilerOptions = []; }\n        var compilerFactory = this.injector.get(CompilerFactory);\n        var options = optionsReducer({}, compilerOptions);\n        var compiler = compilerFactory.createCompiler([options]);\n        return compiler.compileModuleAsync(moduleType)\n            .then(function (moduleFactory) { return _this.bootstrapModuleFactory(moduleFactory, options); });\n    };\n    PlatformRef.prototype._moduleDoBootstrap = function (moduleRef) {\n        var appRef = moduleRef.injector.get(ApplicationRef);\n        if (moduleRef._bootstrapComponents.length > 0) {\n            moduleRef._bootstrapComponents.forEach(function (f) { return appRef.bootstrap(f); });\n        }\n        else if (moduleRef.instance.ngDoBootstrap) {\n            moduleRef.instance.ngDoBootstrap(appRef);\n        }\n        else {\n            throw new Error(\"The module \" + stringify(moduleRef.instance.constructor) + \" was bootstrapped, but it does not declare \\\"@NgModule.bootstrap\\\" components nor a \\\"ngDoBootstrap\\\" method. \" +\n                \"Please define one of these.\");\n        }\n        this._modules.push(moduleRef);\n    };\n    /**\n     * Register a listener to be called when the platform is disposed.\n     */\n    /**\n       * Register a listener to be called when the platform is disposed.\n       */\n    PlatformRef.prototype.onDestroy = /**\n       * Register a listener to be called when the platform is disposed.\n       */\n    function (callback) { this._destroyListeners.push(callback); };\n    Object.defineProperty(PlatformRef.prototype, \"injector\", {\n        /**\n         * Retrieve the platform {@link Injector}, which is the parent injector for\n         * every Angular application on the page and provides singleton providers.\n         */\n        get: /**\n           * Retrieve the platform {@link Injector}, which is the parent injector for\n           * every Angular application on the page and provides singleton providers.\n           */\n        function () { return this._injector; },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Destroy the Angular platform and all Angular applications on the page.\n     */\n    /**\n       * Destroy the Angular platform and all Angular applications on the page.\n       */\n    PlatformRef.prototype.destroy = /**\n       * Destroy the Angular platform and all Angular applications on the page.\n       */\n    function () {\n        if (this._destroyed) {\n            throw new Error('The platform has already been destroyed!');\n        }\n        this._modules.slice().forEach(function (module) { return module.destroy(); });\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n        this._destroyed = true;\n    };\n    Object.defineProperty(PlatformRef.prototype, \"destroyed\", {\n        get: function () { return this._destroyed; },\n        enumerable: true,\n        configurable: true\n    });\n    PlatformRef.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    PlatformRef.ctorParameters = function () { return [\n        { type: Injector, },\n    ]; };\n    return PlatformRef;\n}());\nfunction getNgZone(ngZoneOption) {\n    var ngZone;\n    if (ngZoneOption === 'noop') {\n        ngZone = new NoopNgZone();\n    }\n    else {\n        ngZone = (ngZoneOption === 'zone.js' ? undefined : ngZoneOption) ||\n            new NgZone({ enableLongStackTrace: isDevMode() });\n    }\n    return ngZone;\n}\nfunction _callAndReportToErrorHandler(errorHandler, ngZone, callback) {\n    try {\n        var result = callback();\n        if (isPromise(result)) {\n            return result.catch(function (e) {\n                ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n                // rethrow as the exception handler might not do it\n                throw e;\n            });\n        }\n        return result;\n    }\n    catch (e) {\n        ngZone.runOutsideAngular(function () { return errorHandler.handleError(e); });\n        // rethrow as the exception handler might not do it\n        throw e;\n    }\n}\nfunction optionsReducer(dst, objs) {\n    if (Array.isArray(objs)) {\n        dst = objs.reduce(optionsReducer, dst);\n    }\n    else {\n        dst = tslib_1.__assign({}, dst, objs);\n    }\n    return dst;\n}\n/**\n * A reference to an Angular application running on a page.\n *\n * @stable\n */\nvar ApplicationRef = /** @class */ (function () {\n    /** @internal */\n    function ApplicationRef(_zone, _console, _injector, _exceptionHandler, _componentFactoryResolver, _initStatus) {\n        var _this = this;\n        this._zone = _zone;\n        this._console = _console;\n        this._injector = _injector;\n        this._exceptionHandler = _exceptionHandler;\n        this._componentFactoryResolver = _componentFactoryResolver;\n        this._initStatus = _initStatus;\n        this._bootstrapListeners = [];\n        this._views = [];\n        this._runningTick = false;\n        this._enforceNoNewChanges = false;\n        this._stable = true;\n        /**\n           * Get a list of component types registered to this application.\n           * This list is populated even before the component is created.\n           */\n        this.componentTypes = [];\n        /**\n           * Get a list of components registered to this application.\n           */\n        this.components = [];\n        this._enforceNoNewChanges = isDevMode();\n        this._zone.onMicrotaskEmpty.subscribe({ next: function () { _this._zone.run(function () { _this.tick(); }); } });\n        var isCurrentlyStable = new rxjs.Observable(function (observer) {\n            _this._stable = _this._zone.isStable && !_this._zone.hasPendingMacrotasks &&\n                !_this._zone.hasPendingMicrotasks;\n            _this._zone.runOutsideAngular(function () {\n                observer.next(_this._stable);\n                observer.complete();\n            });\n        });\n        var isStable = new rxjs.Observable(function (observer) {\n            // Create the subscription to onStable outside the Angular Zone so that\n            // the callback is run outside the Angular Zone.\n            var stableSub;\n            _this._zone.runOutsideAngular(function () {\n                stableSub = _this._zone.onStable.subscribe(function () {\n                    NgZone.assertNotInAngularZone();\n                    // Check whether there are no pending macro/micro tasks in the next tick\n                    // to allow for NgZone to update the state.\n                    scheduleMicroTask(function () {\n                        if (!_this._stable && !_this._zone.hasPendingMacrotasks &&\n                            !_this._zone.hasPendingMicrotasks) {\n                            _this._stable = true;\n                            observer.next(true);\n                        }\n                    });\n                });\n            });\n            var unstableSub = _this._zone.onUnstable.subscribe(function () {\n                NgZone.assertInAngularZone();\n                if (_this._stable) {\n                    _this._stable = false;\n                    _this._zone.runOutsideAngular(function () { observer.next(false); });\n                }\n            });\n            return function () {\n                stableSub.unsubscribe();\n                unstableSub.unsubscribe();\n            };\n        });\n        this.isStable =\n            rxjs.merge(isCurrentlyStable, isStable.pipe(operators.share()));\n    }\n    /**\n     * Bootstrap a new component at the root level of the application.\n     *\n     * ### Bootstrap process\n     *\n     * When bootstrapping a new root component into an application, Angular mounts the\n     * specified application component onto DOM elements identified by the [componentType]'s\n     * selector and kicks off automatic change detection to finish initializing the component.\n     *\n     * Optionally, a component can be mounted onto a DOM element that does not match the\n     * [componentType]'s selector.\n     *\n     * ### Example\n     * {@example core/ts/platform/platform.ts region='longform'}\n     */\n    /**\n       * Bootstrap a new component at the root level of the application.\n       *\n       * ### Bootstrap process\n       *\n       * When bootstrapping a new root component into an application, Angular mounts the\n       * specified application component onto DOM elements identified by the [componentType]'s\n       * selector and kicks off automatic change detection to finish initializing the component.\n       *\n       * Optionally, a component can be mounted onto a DOM element that does not match the\n       * [componentType]'s selector.\n       *\n       * ### Example\n       * {@example core/ts/platform/platform.ts region='longform'}\n       */\n    ApplicationRef.prototype.bootstrap = /**\n       * Bootstrap a new component at the root level of the application.\n       *\n       * ### Bootstrap process\n       *\n       * When bootstrapping a new root component into an application, Angular mounts the\n       * specified application component onto DOM elements identified by the [componentType]'s\n       * selector and kicks off automatic change detection to finish initializing the component.\n       *\n       * Optionally, a component can be mounted onto a DOM element that does not match the\n       * [componentType]'s selector.\n       *\n       * ### Example\n       * {@example core/ts/platform/platform.ts region='longform'}\n       */\n    function (componentOrFactory, rootSelectorOrNode) {\n        var _this = this;\n        if (!this._initStatus.done) {\n            throw new Error('Cannot bootstrap as there are still asynchronous initializers running. Bootstrap components in the `ngDoBootstrap` method of the root module.');\n        }\n        var componentFactory;\n        if (componentOrFactory instanceof ComponentFactory) {\n            componentFactory = componentOrFactory;\n        }\n        else {\n            componentFactory =\n                (this._componentFactoryResolver.resolveComponentFactory(componentOrFactory));\n        }\n        this.componentTypes.push(componentFactory.componentType);\n        // Create a factory associated with the current module if it's not bound to some other\n        var ngModule = componentFactory instanceof ComponentFactoryBoundToModule ?\n            null :\n            this._injector.get(NgModuleRef);\n        var selectorOrNode = rootSelectorOrNode || componentFactory.selector;\n        var compRef = componentFactory.create(Injector.NULL, [], selectorOrNode, ngModule);\n        compRef.onDestroy(function () { _this._unloadComponent(compRef); });\n        var testability = compRef.injector.get(Testability, null);\n        if (testability) {\n            compRef.injector.get(TestabilityRegistry)\n                .registerApplication(compRef.location.nativeElement, testability);\n        }\n        this._loadComponent(compRef);\n        if (isDevMode()) {\n            this._console.log(\"Angular is running in the development mode. Call enableProdMode() to enable the production mode.\");\n        }\n        return compRef;\n    };\n    /**\n     * Invoke this method to explicitly process change detection and its side-effects.\n     *\n     * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n     * further changes are detected. If additional changes are picked up during this second cycle,\n     * bindings in the app have side-effects that cannot be resolved in a single change detection\n     * pass.\n     * In this case, Angular throws an error, since an Angular application can only have one change\n     * detection pass during which all change detection must complete.\n     */\n    /**\n       * Invoke this method to explicitly process change detection and its side-effects.\n       *\n       * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n       * further changes are detected. If additional changes are picked up during this second cycle,\n       * bindings in the app have side-effects that cannot be resolved in a single change detection\n       * pass.\n       * In this case, Angular throws an error, since an Angular application can only have one change\n       * detection pass during which all change detection must complete.\n       */\n    ApplicationRef.prototype.tick = /**\n       * Invoke this method to explicitly process change detection and its side-effects.\n       *\n       * In development mode, `tick()` also performs a second change detection cycle to ensure that no\n       * further changes are detected. If additional changes are picked up during this second cycle,\n       * bindings in the app have side-effects that cannot be resolved in a single change detection\n       * pass.\n       * In this case, Angular throws an error, since an Angular application can only have one change\n       * detection pass during which all change detection must complete.\n       */\n    function () {\n        var _this = this;\n        if (this._runningTick) {\n            throw new Error('ApplicationRef.tick is called recursively');\n        }\n        var scope = ApplicationRef._tickScope();\n        try {\n            this._runningTick = true;\n            this._views.forEach(function (view) { return view.detectChanges(); });\n            if (this._enforceNoNewChanges) {\n                this._views.forEach(function (view) { return view.checkNoChanges(); });\n            }\n        }\n        catch (e) {\n            // Attention: Don't rethrow as it could cancel subscriptions to Observables!\n            this._zone.runOutsideAngular(function () { return _this._exceptionHandler.handleError(e); });\n        }\n        finally {\n            this._runningTick = false;\n            wtfLeave(scope);\n        }\n    };\n    /**\n     * Attaches a view so that it will be dirty checked.\n     * The view will be automatically detached when it is destroyed.\n     * This will throw if the view is already attached to a ViewContainer.\n     */\n    /**\n       * Attaches a view so that it will be dirty checked.\n       * The view will be automatically detached when it is destroyed.\n       * This will throw if the view is already attached to a ViewContainer.\n       */\n    ApplicationRef.prototype.attachView = /**\n       * Attaches a view so that it will be dirty checked.\n       * The view will be automatically detached when it is destroyed.\n       * This will throw if the view is already attached to a ViewContainer.\n       */\n    function (viewRef) {\n        var view = viewRef;\n        this._views.push(view);\n        view.attachToAppRef(this);\n    };\n    /**\n     * Detaches a view from dirty checking again.\n     */\n    /**\n       * Detaches a view from dirty checking again.\n       */\n    ApplicationRef.prototype.detachView = /**\n       * Detaches a view from dirty checking again.\n       */\n    function (viewRef) {\n        var view = viewRef;\n        remove(this._views, view);\n        view.detachFromAppRef();\n    };\n    ApplicationRef.prototype._loadComponent = function (componentRef) {\n        this.attachView(componentRef.hostView);\n        this.tick();\n        this.components.push(componentRef);\n        // Get the listeners lazily to prevent DI cycles.\n        var listeners = this._injector.get(APP_BOOTSTRAP_LISTENER, []).concat(this._bootstrapListeners);\n        listeners.forEach(function (listener) { return listener(componentRef); });\n    };\n    ApplicationRef.prototype._unloadComponent = function (componentRef) {\n        this.detachView(componentRef.hostView);\n        remove(this.components, componentRef);\n    };\n    /** @internal */\n    /** @internal */\n    ApplicationRef.prototype.ngOnDestroy = /** @internal */\n    function () {\n        // TODO(alxhub): Dispose of the NgZone.\n        this._views.slice().forEach(function (view) { return view.destroy(); });\n    };\n    Object.defineProperty(ApplicationRef.prototype, \"viewCount\", {\n        /**\n         * Returns the number of attached views.\n         */\n        get: /**\n           * Returns the number of attached views.\n           */\n        function () { return this._views.length; },\n        enumerable: true,\n        configurable: true\n    });\n    /** @internal */\n    ApplicationRef._tickScope = wtfCreateScope('ApplicationRef#tick()');\n    ApplicationRef.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    ApplicationRef.ctorParameters = function () { return [\n        { type: NgZone, },\n        { type: Console, },\n        { type: Injector, },\n        { type: ErrorHandler, },\n        { type: ComponentFactoryResolver, },\n        { type: ApplicationInitStatus, },\n    ]; };\n    return ApplicationRef;\n}());\nfunction remove(list, el) {\n    var index = list.indexOf(el);\n    if (index > -1) {\n        list.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @deprecated Use `RendererType2` (and `Renderer2`) instead.\n */\nvar RenderComponentType = /** @class */ (function () {\n    function RenderComponentType(id, templateUrl, slotCount, encapsulation, styles, animations) {\n        this.id = id;\n        this.templateUrl = templateUrl;\n        this.slotCount = slotCount;\n        this.encapsulation = encapsulation;\n        this.styles = styles;\n        this.animations = animations;\n    }\n    return RenderComponentType;\n}());\n/**\n * @deprecated Debug info is handeled internally in the view engine now.\n */\nvar RenderDebugInfo = /** @class */ (function () {\n    function RenderDebugInfo() {\n    }\n    return RenderDebugInfo;\n}());\n/**\n * @deprecated Use the `Renderer2` instead.\n */\nvar Renderer = /** @class */ (function () {\n    function Renderer() {\n    }\n    return Renderer;\n}());\nvar Renderer2Interceptor = new InjectionToken('Renderer2Interceptor');\n/**\n * Injectable service that provides a low-level interface for modifying the UI.\n *\n * Use this service to bypass Angular's templating and make custom UI changes that can't be\n * expressed declaratively. For example if you need to set a property or an attribute whose name is\n * not statically known, use {@link Renderer#setElementProperty setElementProperty} or\n * {@link Renderer#setElementAttribute setElementAttribute} respectively.\n *\n * If you are implementing a custom renderer, you must implement this interface.\n *\n * The default Renderer implementation is `DomRenderer`. Also available is `WebWorkerRenderer`.\n *\n * @deprecated Use `RendererFactory2` instead.\n */\nvar RootRenderer = /** @class */ (function () {\n    function RootRenderer() {\n    }\n    return RootRenderer;\n}());\n/**\n * @experimental\n */\nvar RendererFactory2 = /** @class */ (function () {\n    function RendererFactory2() {\n    }\n    return RendererFactory2;\n}());\n/**\n * @experimental\n */\n/**\n * @experimental\n */\n\n/**\n * @experimental\n */\n(function (RendererStyleFlags2) {\n    RendererStyleFlags2[RendererStyleFlags2[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags2[RendererStyleFlags2[\"DashCase\"] = 2] = \"DashCase\";\n})(exports.RendererStyleFlags2 || (exports.RendererStyleFlags2 = {}));\n/**\n * @experimental\n */\nvar Renderer2 = /** @class */ (function () {\n    function Renderer2() {\n    }\n    return Renderer2;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A wrapper around a native element inside of a View.\n *\n * An `ElementRef` is backed by a render-specific element. In the browser, this is usually a DOM\n * element.\n *\n * @security Permitting direct access to the DOM can make your application more vulnerable to\n * XSS attacks. Carefully review any use of `ElementRef` in your code. For more detail, see the\n * [Security Guide](http://g.co/ng/security).\n *\n * @stable\n */\n// Note: We don't expose things like `Injector`, `ViewContainer`, ... here,\n// i.e. users have to ask for what they need. With that, we can build better analysis tools\n// and could do better codegen in the future.\nvar ElementRef = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Used to load ng module factories.\n * @stable\n */\nvar NgModuleFactoryLoader = /** @class */ (function () {\n    function NgModuleFactoryLoader() {\n    }\n    return NgModuleFactoryLoader;\n}());\nvar moduleFactories = new Map();\n/**\n * Registers a loaded module. Should only be called from generated NgModuleFactory code.\n * @experimental\n */\nfunction registerModuleFactory(id, factory) {\n    var existing = moduleFactories.get(id);\n    if (existing) {\n        throw new Error(\"Duplicate module registered for \" + id + \" - \" + existing.moduleType.name + \" vs \" + factory.moduleType.name);\n    }\n    moduleFactories.set(id, factory);\n}\n\n/**\n * Returns the NgModuleFactory with the given id, if it exists and has been loaded.\n * Factories for modules that do not specify an `id` cannot be retrieved. Throws if the module\n * cannot be found.\n * @experimental\n */\nfunction getModuleFactory(id) {\n    var factory = moduleFactories.get(id);\n    if (!factory)\n        throw new Error(\"No module with ID \" + id + \" loaded\");\n    return factory;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An unmodifiable list of items that Angular keeps up to date when the state\n * of the application changes.\n *\n * The type of object that {@link ViewChildren}, {@link ContentChildren}, and {@link QueryList}\n * provide.\n *\n * Implements an iterable interface, therefore it can be used in both ES6\n * javascript `for (var i of items)` loops as well as in Angular templates with\n * `*ngFor=\"let i of myList\"`.\n *\n * Changes can be observed by subscribing to the changes `Observable`.\n *\n * NOTE: In the future this class will implement an `Observable` interface.\n *\n * ### Example ([live demo](http://plnkr.co/edit/RX8sJnQYl9FWuSCWme5z?p=preview))\n * ```typescript\n * @Component({...})\n * class Container {\n *   @ViewChildren(Item) items:QueryList<Item>;\n * }\n * ```\n * @stable\n */\nvar QueryList = /** @class */ (function () {\n    function QueryList() {\n        this.dirty = true;\n        this._results = [];\n        this.changes = new EventEmitter();\n        this.length = 0;\n    }\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n       * See\n       * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n       */\n    QueryList.prototype.map = /**\n       * See\n       * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n       */\n    function (fn) { return this._results.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n       * See\n       * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n       */\n    QueryList.prototype.filter = /**\n       * See\n       * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n       */\n    function (fn) {\n        return this._results.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n       * See\n       * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n       */\n    QueryList.prototype.find = /**\n       * See\n       * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n       */\n    function (fn) {\n        return this._results.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n       * See\n       * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n       */\n    QueryList.prototype.reduce = /**\n       * See\n       * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n       */\n    function (fn, init) {\n        return this._results.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n       * See\n       * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n       */\n    QueryList.prototype.forEach = /**\n       * See\n       * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n       */\n    function (fn) { this._results.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n       * See\n       * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n       */\n    QueryList.prototype.some = /**\n       * See\n       * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n       */\n    function (fn) {\n        return this._results.some(fn);\n    };\n    QueryList.prototype.toArray = function () { return this._results.slice(); };\n    QueryList.prototype[getSymbolIterator()] = function () { return this._results[getSymbolIterator()](); };\n    QueryList.prototype.toString = function () { return this._results.toString(); };\n    QueryList.prototype.reset = function (res) {\n        this._results = flatten(res);\n        this.dirty = false;\n        this.length = this._results.length;\n        this.last = this._results[this.length - 1];\n        this.first = this._results[0];\n    };\n    QueryList.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    /** internal */\n    /** internal */\n    QueryList.prototype.setDirty = /** internal */\n    function () { this.dirty = true; };\n    /** internal */\n    /** internal */\n    QueryList.prototype.destroy = /** internal */\n    function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList;\n}());\nfunction flatten(list) {\n    return list.reduce(function (flat, item) {\n        var flatItem = Array.isArray(item) ? flatten(item) : item;\n        return flat.concat(flatItem);\n    }, []);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _SEPARATOR = '#';\nvar FACTORY_CLASS_SUFFIX = 'NgFactory';\n/**\n * Configuration for SystemJsNgModuleLoader.\n * token.\n *\n * @experimental\n */\nvar SystemJsNgModuleLoaderConfig = /** @class */ (function () {\n    function SystemJsNgModuleLoaderConfig() {\n    }\n    return SystemJsNgModuleLoaderConfig;\n}());\nvar DEFAULT_CONFIG = {\n    factoryPathPrefix: '',\n    factoryPathSuffix: '.ngfactory',\n};\n/**\n * NgModuleFactoryLoader that uses SystemJS to load NgModuleFactory\n * @experimental\n */\nvar SystemJsNgModuleLoader = /** @class */ (function () {\n    function SystemJsNgModuleLoader(_compiler, config) {\n        this._compiler = _compiler;\n        this._config = config || DEFAULT_CONFIG;\n    }\n    SystemJsNgModuleLoader.prototype.load = function (path) {\n        var offlineMode = this._compiler instanceof Compiler;\n        return offlineMode ? this.loadFactory(path) : this.loadAndCompile(path);\n    };\n    SystemJsNgModuleLoader.prototype.loadAndCompile = function (path) {\n        var _this = this;\n        var _a = tslib_1.__read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        if (exportName === undefined) {\n            exportName = 'default';\n        }\n        return System.import(module)\n            .then(function (module) { return module[exportName]; })\n            .then(function (type) { return checkNotEmpty(type, module, exportName); })\n            .then(function (type) { return _this._compiler.compileModuleAsync(type); });\n    };\n    SystemJsNgModuleLoader.prototype.loadFactory = function (path) {\n        var _a = tslib_1.__read(path.split(_SEPARATOR), 2), module = _a[0], exportName = _a[1];\n        var factoryClassSuffix = FACTORY_CLASS_SUFFIX;\n        if (exportName === undefined) {\n            exportName = 'default';\n            factoryClassSuffix = '';\n        }\n        return System.import(this._config.factoryPathPrefix + module + this._config.factoryPathSuffix)\n            .then(function (module) { return module[exportName + factoryClassSuffix]; })\n            .then(function (factory) { return checkNotEmpty(factory, module, exportName); });\n    };\n    SystemJsNgModuleLoader.decorators = [\n        { type: Injectable }\n    ];\n    /** @nocollapse */\n    SystemJsNgModuleLoader.ctorParameters = function () { return [\n        { type: Compiler, },\n        { type: SystemJsNgModuleLoaderConfig, decorators: [{ type: Optional },] },\n    ]; };\n    return SystemJsNgModuleLoader;\n}());\nfunction checkNotEmpty(value, modulePath, exportName) {\n    if (!value) {\n        throw new Error(\"Cannot find '\" + exportName + \"' in '\" + modulePath + \"'\");\n    }\n    return value;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents an Embedded Template that can be used to instantiate Embedded Views.\n *\n * You can access a `TemplateRef`, in two ways. Via a directive placed on a `<ng-template>` element\n * (or directive prefixed with `*`) and have the `TemplateRef` for this Embedded View injected into\n * the constructor of the directive using the `TemplateRef` Token. Alternatively you can query for\n * the `TemplateRef` from a Component or a Directive via {@link Query}.\n *\n * To instantiate Embedded Views based on a Template, use {@link ViewContainerRef#\n * createEmbeddedView}, which will create the View and attach it to the View Container.\n * @stable\n */\nvar TemplateRef = /** @class */ (function () {\n    function TemplateRef() {\n    }\n    return TemplateRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Represents a container where one or more Views can be attached.\n *\n * The container can contain two kinds of Views. Host Views, created by instantiating a\n * {@link Component} via {@link #createComponent}, and Embedded Views, created by instantiating an\n * {@link TemplateRef Embedded Template} via {@link #createEmbeddedView}.\n *\n * The location of the View Container within the containing View is specified by the Anchor\n * `element`. Each View Container can have only one Anchor Element and each Anchor Element can only\n * have a single View Container.\n *\n * Root elements of Views attached to this container become siblings of the Anchor Element in\n * the Rendered View.\n *\n * To access a `ViewContainerRef` of an Element, you can either place a {@link Directive} injected\n * with `ViewContainerRef` on the Element, or you obtain it via a {@link ViewChild} query.\n * @stable\n */\nvar ViewContainerRef = /** @class */ (function () {\n    function ViewContainerRef() {\n    }\n    return ViewContainerRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @stable\n */\nvar ChangeDetectorRef = /** @class */ (function () {\n    function ChangeDetectorRef() {\n    }\n    return ChangeDetectorRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @stable\n */\nvar ViewRef = /** @class */ (function (_super) {\n    tslib_1.__extends(ViewRef, _super);\n    function ViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return ViewRef;\n}(ChangeDetectorRef));\n/**\n * Represents an Angular View.\n *\n * <!-- TODO: move the next two paragraphs to the dev guide -->\n * A View is a fundamental building block of the application UI. It is the smallest grouping of\n * Elements which are created and destroyed together.\n *\n * Properties of elements in a View can change, but the structure (number and order) of elements in\n * a View cannot. Changing the structure of Elements can only be done by inserting, moving or\n * removing nested Views via a {@link ViewContainerRef}. Each View can contain many View Containers.\n * <!-- /TODO -->\n *\n * ### Example\n *\n * Given this template...\n *\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <li *ngFor=\"let  item of items\">{{item}}</li>\n * </ul>\n * ```\n *\n * We have two {@link TemplateRef}s:\n *\n * Outer {@link TemplateRef}:\n * ```\n * Count: {{items.length}}\n * <ul>\n *   <ng-template ngFor let-item [ngForOf]=\"items\"></ng-template>\n * </ul>\n * ```\n *\n * Inner {@link TemplateRef}:\n * ```\n *   <li>{{item}}</li>\n * ```\n *\n * Notice that the original template is broken down into two separate {@link TemplateRef}s.\n *\n * The outer/inner {@link TemplateRef}s are then assembled into views like so:\n *\n * ```\n * <!-- ViewRef: outer-0 -->\n * Count: 2\n * <ul>\n *   <ng-template view-container-ref></ng-template>\n *   <!-- ViewRef: inner-1 --><li>first</li><!-- /ViewRef: inner-1 -->\n *   <!-- ViewRef: inner-2 --><li>second</li><!-- /ViewRef: inner-2 -->\n * </ul>\n * <!-- /ViewRef: outer-0 -->\n * ```\n * @experimental\n */\nvar EmbeddedViewRef = /** @class */ (function (_super) {\n    tslib_1.__extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EventListener = /** @class */ (function () {\n    function EventListener(name, callback) {\n        this.name = name;\n        this.callback = callback;\n    }\n    return EventListener;\n}());\n/**\n * @experimental All debugging apis are currently experimental.\n */\nvar DebugNode = /** @class */ (function () {\n    function DebugNode(nativeNode, parent, _debugContext) {\n        this._debugContext = _debugContext;\n        this.nativeNode = nativeNode;\n        if (parent && parent instanceof DebugElement) {\n            parent.addChild(this);\n        }\n        else {\n            this.parent = null;\n        }\n        this.listeners = [];\n    }\n    Object.defineProperty(DebugNode.prototype, \"injector\", {\n        get: function () { return this._debugContext.injector; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"componentInstance\", {\n        get: function () { return this._debugContext.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"context\", {\n        get: function () { return this._debugContext.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"references\", {\n        get: function () { return this._debugContext.references; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugNode.prototype, \"providerTokens\", {\n        get: function () { return this._debugContext.providerTokens; },\n        enumerable: true,\n        configurable: true\n    });\n    return DebugNode;\n}());\n/**\n * @experimental All debugging apis are currently experimental.\n */\nvar DebugElement = /** @class */ (function (_super) {\n    tslib_1.__extends(DebugElement, _super);\n    function DebugElement(nativeNode, parent, _debugContext) {\n        var _this = _super.call(this, nativeNode, parent, _debugContext) || this;\n        _this.properties = {};\n        _this.attributes = {};\n        _this.classes = {};\n        _this.styles = {};\n        _this.childNodes = [];\n        _this.nativeElement = nativeNode;\n        return _this;\n    }\n    DebugElement.prototype.addChild = function (child) {\n        if (child) {\n            this.childNodes.push(child);\n            child.parent = this;\n        }\n    };\n    DebugElement.prototype.removeChild = function (child) {\n        var childIndex = this.childNodes.indexOf(child);\n        if (childIndex !== -1) {\n            child.parent = null;\n            this.childNodes.splice(childIndex, 1);\n        }\n    };\n    DebugElement.prototype.insertChildrenAfter = function (child, newChildren) {\n        var _this = this;\n        var siblingIndex = this.childNodes.indexOf(child);\n        if (siblingIndex !== -1) {\n            (_a = this.childNodes).splice.apply(_a, tslib_1.__spread([siblingIndex + 1, 0], newChildren));\n            newChildren.forEach(function (c) {\n                if (c.parent) {\n                    c.parent.removeChild(c);\n                }\n                c.parent = _this;\n            });\n        }\n        var _a;\n    };\n    DebugElement.prototype.insertBefore = function (refChild, newChild) {\n        var refIndex = this.childNodes.indexOf(refChild);\n        if (refIndex === -1) {\n            this.addChild(newChild);\n        }\n        else {\n            if (newChild.parent) {\n                newChild.parent.removeChild(newChild);\n            }\n            newChild.parent = this;\n            this.childNodes.splice(refIndex, 0, newChild);\n        }\n    };\n    DebugElement.prototype.query = function (predicate) {\n        var results = this.queryAll(predicate);\n        return results[0] || null;\n    };\n    DebugElement.prototype.queryAll = function (predicate) {\n        var matches = [];\n        _queryElementChildren(this, predicate, matches);\n        return matches;\n    };\n    DebugElement.prototype.queryAllNodes = function (predicate) {\n        var matches = [];\n        _queryNodeChildren(this, predicate, matches);\n        return matches;\n    };\n    Object.defineProperty(DebugElement.prototype, \"children\", {\n        get: function () {\n            return this.childNodes.filter(function (node) { return node instanceof DebugElement; });\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugElement.prototype.triggerEventHandler = function (eventName, eventObj) {\n        this.listeners.forEach(function (listener) {\n            if (listener.name == eventName) {\n                listener.callback(eventObj);\n            }\n        });\n    };\n    return DebugElement;\n}(DebugNode));\n/**\n * @experimental\n */\nfunction asNativeElements(debugEls) {\n    return debugEls.map(function (el) { return el.nativeElement; });\n}\nfunction _queryElementChildren(element, predicate, matches) {\n    element.childNodes.forEach(function (node) {\n        if (node instanceof DebugElement) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            _queryElementChildren(node, predicate, matches);\n        }\n    });\n}\nfunction _queryNodeChildren(parentNode, predicate, matches) {\n    if (parentNode instanceof DebugElement) {\n        parentNode.childNodes.forEach(function (node) {\n            if (predicate(node)) {\n                matches.push(node);\n            }\n            if (node instanceof DebugElement) {\n                _queryNodeChildren(node, predicate, matches);\n            }\n        });\n    }\n}\n// Need to keep the nodes in a global Map so that multiple angular apps are supported.\nvar _nativeNodeToDebugNode = new Map();\n/**\n * @experimental\n */\nfunction getDebugNode(nativeNode) {\n    return _nativeNodeToDebugNode.get(nativeNode) || null;\n}\n\nfunction indexDebugNode(node) {\n    _nativeNodeToDebugNode.set(node.nativeNode, node);\n}\nfunction removeDebugNodeFromIndex(node) {\n    _nativeNodeToDebugNode.delete(node.nativeNode);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction devModeEqual(a, b) {\n    var isListLikeIterableA = isListLikeIterable(a);\n    var isListLikeIterableB = isListLikeIterable(b);\n    if (isListLikeIterableA && isListLikeIterableB) {\n        return areIterablesEqual(a, b, devModeEqual);\n    }\n    else {\n        var isAObject = a && (typeof a === 'object' || typeof a === 'function');\n        var isBObject = b && (typeof b === 'object' || typeof b === 'function');\n        if (!isListLikeIterableA && isAObject && !isListLikeIterableB && isBObject) {\n            return true;\n        }\n        else {\n            return looseIdentical(a, b);\n        }\n    }\n}\n/**\n * Indicates that the result of a {@link Pipe} transformation has changed even though the\n * reference has not changed.\n *\n * Wrapped values are unwrapped automatically during the change detection, and the unwrapped value\n * is stored.\n *\n * Example:\n *\n * ```\n * if (this._latestValue === this._latestReturnedValue) {\n *    return this._latestReturnedValue;\n *  } else {\n *    this._latestReturnedValue = this._latestValue;\n *    return WrappedValue.wrap(this._latestValue); // this will force update\n *  }\n * ```\n * @stable\n */\nvar WrappedValue = /** @class */ (function () {\n    function WrappedValue(value) {\n        this.wrapped = value;\n    }\n    /** Creates a wrapped value. */\n    /** Creates a wrapped value. */\n    WrappedValue.wrap = /** Creates a wrapped value. */\n    function (value) { return new WrappedValue(value); };\n    /**\n     * Returns the underlying value of a wrapped value.\n     * Returns the given `value` when it is not wrapped.\n     **/\n    /**\n       * Returns the underlying value of a wrapped value.\n       * Returns the given `value` when it is not wrapped.\n       **/\n    WrappedValue.unwrap = /**\n       * Returns the underlying value of a wrapped value.\n       * Returns the given `value` when it is not wrapped.\n       **/\n    function (value) { return WrappedValue.isWrapped(value) ? value.wrapped : value; };\n    /** Returns true if `value` is a wrapped value. */\n    /** Returns true if `value` is a wrapped value. */\n    WrappedValue.isWrapped = /** Returns true if `value` is a wrapped value. */\n    function (value) { return value instanceof WrappedValue; };\n    return WrappedValue;\n}());\n/**\n * Represents a basic change from a previous to a new value.\n * @stable\n */\nvar SimpleChange = /** @class */ (function () {\n    function SimpleChange(previousValue, currentValue, firstChange) {\n        this.previousValue = previousValue;\n        this.currentValue = currentValue;\n        this.firstChange = firstChange;\n    }\n    /**\n     * Check whether the new value is the first value assigned.\n     */\n    /**\n       * Check whether the new value is the first value assigned.\n       */\n    SimpleChange.prototype.isFirstChange = /**\n       * Check whether the new value is the first value assigned.\n       */\n    function () { return this.firstChange; };\n    return SimpleChange;\n}());\nfunction isListLikeIterable(obj) {\n    if (!isJsObject(obj))\n        return false;\n    return Array.isArray(obj) ||\n        (!(obj instanceof Map) && // JS Map are iterables but return entries as [k, v]\n            // JS Map are iterables but return entries as [k, v]\n            getSymbolIterator() in obj); // JS Iterable have a Symbol.iterator prop\n}\nfunction areIterablesEqual(a, b, comparator) {\n    var iterator1 = a[getSymbolIterator()]();\n    var iterator2 = b[getSymbolIterator()]();\n    while (true) {\n        var item1 = iterator1.next();\n        var item2 = iterator2.next();\n        if (item1.done && item2.done)\n            return true;\n        if (item1.done || item2.done)\n            return false;\n        if (!comparator(item1.value, item2.value))\n            return false;\n    }\n}\nfunction iterateListLike(obj, fn) {\n    if (Array.isArray(obj)) {\n        for (var i = 0; i < obj.length; i++) {\n            fn(obj[i]);\n        }\n    }\n    else {\n        var iterator = obj[getSymbolIterator()]();\n        var item = void 0;\n        while (!((item = iterator.next()).done)) {\n            fn(item.value);\n        }\n    }\n}\nfunction isJsObject(o) {\n    return o !== null && (typeof o === 'function' || typeof o === 'object');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultIterableDifferFactory = /** @class */ (function () {\n    function DefaultIterableDifferFactory() {\n    }\n    DefaultIterableDifferFactory.prototype.supports = function (obj) { return isListLikeIterable(obj); };\n    DefaultIterableDifferFactory.prototype.create = function (trackByFn) {\n        return new DefaultIterableDiffer(trackByFn);\n    };\n    return DefaultIterableDifferFactory;\n}());\nvar trackByIdentity = function (index, item) { return item; };\n/**\n * @deprecated v4.0.0 - Should not be part of public API.\n */\nvar DefaultIterableDiffer = /** @class */ (function () {\n    function DefaultIterableDiffer(trackByFn) {\n        this.length = 0;\n        // Keeps track of the used records at any point in time (during & across `_check()` calls)\n        this._linkedRecords = null;\n        // Keeps track of the removed records at any point in time during `_check()` calls.\n        this._unlinkedRecords = null;\n        this._previousItHead = null;\n        this._itHead = null;\n        this._itTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._movesHead = null;\n        this._movesTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n        // Keeps track of records where custom track by is the same, but item identity has changed\n        this._identityChangesHead = null;\n        this._identityChangesTail = null;\n        this._trackByFn = trackByFn || trackByIdentity;\n    }\n    DefaultIterableDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._itHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachOperation = function (fn) {\n        var nextIt = this._itHead;\n        var nextRemove = this._removalsHead;\n        var addRemoveOffset = 0;\n        var moveOffsets = null;\n        while (nextIt || nextRemove) {\n            // Figure out which is the next record to process\n            // Order: remove, add, move\n            var record = !nextRemove ||\n                nextIt &&\n                    (nextIt.currentIndex) <\n                        getPreviousIndex(nextRemove, addRemoveOffset, moveOffsets) ?\n                nextIt :\n                nextRemove;\n            var adjPreviousIndex = getPreviousIndex(record, addRemoveOffset, moveOffsets);\n            var currentIndex = record.currentIndex;\n            // consume the item, and adjust the addRemoveOffset and update moveDistance if necessary\n            if (record === nextRemove) {\n                addRemoveOffset--;\n                nextRemove = nextRemove._nextRemoved;\n            }\n            else {\n                nextIt = nextIt._next;\n                if (record.previousIndex == null) {\n                    addRemoveOffset++;\n                }\n                else {\n                    // INVARIANT:  currentIndex < previousIndex\n                    if (!moveOffsets)\n                        moveOffsets = [];\n                    var localMovePreviousIndex = adjPreviousIndex - addRemoveOffset;\n                    var localCurrentIndex = (currentIndex) - addRemoveOffset;\n                    if (localMovePreviousIndex != localCurrentIndex) {\n                        for (var i = 0; i < localMovePreviousIndex; i++) {\n                            var offset = i < moveOffsets.length ? moveOffsets[i] : (moveOffsets[i] = 0);\n                            var index = offset + i;\n                            if (localCurrentIndex <= index && index < localMovePreviousIndex) {\n                                moveOffsets[i] = offset + 1;\n                            }\n                        }\n                        var previousIndex = record.previousIndex;\n                        moveOffsets[previousIndex] = localCurrentIndex - localMovePreviousIndex;\n                    }\n                }\n            }\n            if (adjPreviousIndex !== currentIndex) {\n                fn(record, adjPreviousIndex, currentIndex);\n            }\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousItHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachMovedItem = function (fn) {\n        var record;\n        for (record = this._movesHead; record !== null; record = record._nextMoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.forEachIdentityChange = function (fn) {\n        var record;\n        for (record = this._identityChangesHead; record !== null; record = record._nextIdentityChange) {\n            fn(record);\n        }\n    };\n    DefaultIterableDiffer.prototype.diff = function (collection) {\n        if (collection == null)\n            collection = [];\n        if (!isListLikeIterable(collection)) {\n            throw new Error(\"Error trying to diff '\" + stringify(collection) + \"'. Only arrays and iterables are allowed\");\n        }\n        if (this.check(collection)) {\n            return this;\n        }\n        else {\n            return null;\n        }\n    };\n    DefaultIterableDiffer.prototype.onDestroy = function () { };\n    DefaultIterableDiffer.prototype.check = function (collection) {\n        var _this = this;\n        this._reset();\n        var record = this._itHead;\n        var mayBeDirty = false;\n        var index;\n        var item;\n        var itemTrackBy;\n        if (Array.isArray(collection)) {\n            this.length = collection.length;\n            for (var index_1 = 0; index_1 < this.length; index_1++) {\n                item = collection[index_1];\n                itemTrackBy = this._trackByFn(index_1, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = this._mismatch(record, item, itemTrackBy, index_1);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = this._verifyReinsertion(record, item, itemTrackBy, index_1);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        this._addIdentityChange(record, item);\n                }\n                record = record._next;\n            }\n        }\n        else {\n            index = 0;\n            iterateListLike(collection, function (item) {\n                itemTrackBy = _this._trackByFn(index, item);\n                if (record === null || !looseIdentical(record.trackById, itemTrackBy)) {\n                    record = _this._mismatch(record, item, itemTrackBy, index);\n                    mayBeDirty = true;\n                }\n                else {\n                    if (mayBeDirty) {\n                        // TODO(misko): can we limit this to duplicates only?\n                        record = _this._verifyReinsertion(record, item, itemTrackBy, index);\n                    }\n                    if (!looseIdentical(record.item, item))\n                        _this._addIdentityChange(record, item);\n                }\n                record = record._next;\n                index++;\n            });\n            this.length = index;\n        }\n        this._truncate(record);\n        this.collection = collection;\n        return this.isDirty;\n    };\n    Object.defineProperty(DefaultIterableDiffer.prototype, \"isDirty\", {\n        /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n         * changes.\n         */\n        get: /* CollectionChanges is considered dirty if it has any additions, moves, removals, or identity\n           * changes.\n           */\n        function () {\n            return this._additionsHead !== null || this._movesHead !== null ||\n                this._removalsHead !== null || this._identityChangesHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Reset the state of the change objects to show no changes. This means set previousKey to\n     * currentKey, and clear all of the queues (additions, moves, removals).\n     * Set the previousIndexes of moved and added items to their currentIndexes\n     * Reset the list of additions, moves and removals\n     *\n     * @internal\n     */\n    /**\n       * Reset the state of the change objects to show no changes. This means set previousKey to\n       * currentKey, and clear all of the queues (additions, moves, removals).\n       * Set the previousIndexes of moved and added items to their currentIndexes\n       * Reset the list of additions, moves and removals\n       *\n       * @internal\n       */\n    DefaultIterableDiffer.prototype._reset = /**\n       * Reset the state of the change objects to show no changes. This means set previousKey to\n       * currentKey, and clear all of the queues (additions, moves, removals).\n       * Set the previousIndexes of moved and added items to their currentIndexes\n       * Reset the list of additions, moves and removals\n       *\n       * @internal\n       */\n    function () {\n        if (this.isDirty) {\n            var record = void 0;\n            var nextRecord = void 0;\n            for (record = this._previousItHead = this._itHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n                record.previousIndex = record.currentIndex;\n            }\n            this._additionsHead = this._additionsTail = null;\n            for (record = this._movesHead; record !== null; record = nextRecord) {\n                record.previousIndex = record.currentIndex;\n                nextRecord = record._nextMoved;\n            }\n            this._movesHead = this._movesTail = null;\n            this._removalsHead = this._removalsTail = null;\n            this._identityChangesHead = this._identityChangesTail = null;\n            // todo(vicb) when assert gets supported\n            // assert(!this.isDirty);\n        }\n    };\n    /**\n     * This is the core function which handles differences between collections.\n     *\n     * - `record` is the record which we saw at this position last time. If null then it is a new\n     *   item.\n     * - `item` is the current item in the collection\n     * - `index` is the position of the item in the collection\n     *\n     * @internal\n     */\n    /**\n       * This is the core function which handles differences between collections.\n       *\n       * - `record` is the record which we saw at this position last time. If null then it is a new\n       *   item.\n       * - `item` is the current item in the collection\n       * - `index` is the position of the item in the collection\n       *\n       * @internal\n       */\n    DefaultIterableDiffer.prototype._mismatch = /**\n       * This is the core function which handles differences between collections.\n       *\n       * - `record` is the record which we saw at this position last time. If null then it is a new\n       *   item.\n       * - `item` is the current item in the collection\n       * - `index` is the position of the item in the collection\n       *\n       * @internal\n       */\n    function (record, item, itemTrackBy, index) {\n        // The previous record after which we will append the current one.\n        var previousRecord;\n        if (record === null) {\n            previousRecord = this._itTail;\n        }\n        else {\n            previousRecord = record._prev;\n            // Remove the record from the collection since we know it does not match the item.\n            this._remove(record);\n        }\n        // Attempt to see if we have seen the item before.\n        record = this._linkedRecords === null ? null : this._linkedRecords.get(itemTrackBy, index);\n        if (record !== null) {\n            // We have seen this before, we need to move it forward in the collection.\n            // But first we need to check if identity changed, so we can update in view if necessary\n            if (!looseIdentical(record.item, item))\n                this._addIdentityChange(record, item);\n            this._moveAfter(record, previousRecord, index);\n        }\n        else {\n            // Never seen it, check evicted list.\n            record = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n            if (record !== null) {\n                // It is an item which we have evicted earlier: reinsert it back into the list.\n                // But first we need to check if identity changed, so we can update in view if necessary\n                if (!looseIdentical(record.item, item))\n                    this._addIdentityChange(record, item);\n                this._reinsertAfter(record, previousRecord, index);\n            }\n            else {\n                // It is a new item: add it.\n                record =\n                    this._addAfter(new IterableChangeRecord_(item, itemTrackBy), previousRecord, index);\n            }\n        }\n        return record;\n    };\n    /**\n     * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n     *\n     * Use case: `[a, a]` => `[b, a, a]`\n     *\n     * If we did not have this check then the insertion of `b` would:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) leave `a` at index `1` as is. <-- this is wrong!\n     *   3) reinsert `a` at index 2. <-- this is wrong!\n     *\n     * The correct behavior is:\n     *   1) evict first `a`\n     *   2) insert `b` at `0` index.\n     *   3) reinsert `a` at index 1.\n     *   3) move `a` at from `1` to `2`.\n     *\n     *\n     * Double check that we have not evicted a duplicate item. We need to check if the item type may\n     * have already been removed:\n     * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n     * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n     * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n     * at the end.\n     *\n     * @internal\n     */\n    /**\n       * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n       *\n       * Use case: `[a, a]` => `[b, a, a]`\n       *\n       * If we did not have this check then the insertion of `b` would:\n       *   1) evict first `a`\n       *   2) insert `b` at `0` index.\n       *   3) leave `a` at index `1` as is. <-- this is wrong!\n       *   3) reinsert `a` at index 2. <-- this is wrong!\n       *\n       * The correct behavior is:\n       *   1) evict first `a`\n       *   2) insert `b` at `0` index.\n       *   3) reinsert `a` at index 1.\n       *   3) move `a` at from `1` to `2`.\n       *\n       *\n       * Double check that we have not evicted a duplicate item. We need to check if the item type may\n       * have already been removed:\n       * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n       * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n       * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n       * at the end.\n       *\n       * @internal\n       */\n    DefaultIterableDiffer.prototype._verifyReinsertion = /**\n       * This check is only needed if an array contains duplicates. (Short circuit of nothing dirty)\n       *\n       * Use case: `[a, a]` => `[b, a, a]`\n       *\n       * If we did not have this check then the insertion of `b` would:\n       *   1) evict first `a`\n       *   2) insert `b` at `0` index.\n       *   3) leave `a` at index `1` as is. <-- this is wrong!\n       *   3) reinsert `a` at index 2. <-- this is wrong!\n       *\n       * The correct behavior is:\n       *   1) evict first `a`\n       *   2) insert `b` at `0` index.\n       *   3) reinsert `a` at index 1.\n       *   3) move `a` at from `1` to `2`.\n       *\n       *\n       * Double check that we have not evicted a duplicate item. We need to check if the item type may\n       * have already been removed:\n       * The insertion of b will evict the first 'a'. If we don't reinsert it now it will be reinserted\n       * at the end. Which will show up as the two 'a's switching position. This is incorrect, since a\n       * better way to think of it is as insert of 'b' rather then switch 'a' with 'b' and then add 'a'\n       * at the end.\n       *\n       * @internal\n       */\n    function (record, item, itemTrackBy, index) {\n        var reinsertRecord = this._unlinkedRecords === null ? null : this._unlinkedRecords.get(itemTrackBy, null);\n        if (reinsertRecord !== null) {\n            record = this._reinsertAfter(reinsertRecord, (record._prev), index);\n        }\n        else if (record.currentIndex != index) {\n            record.currentIndex = index;\n            this._addToMoves(record, index);\n        }\n        return record;\n    };\n    /**\n     * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n     *\n     * - `record` The first excess {@link IterableChangeRecord_}.\n     *\n     * @internal\n     */\n    /**\n       * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n       *\n       * - `record` The first excess {@link IterableChangeRecord_}.\n       *\n       * @internal\n       */\n    DefaultIterableDiffer.prototype._truncate = /**\n       * Get rid of any excess {@link IterableChangeRecord_}s from the previous collection\n       *\n       * - `record` The first excess {@link IterableChangeRecord_}.\n       *\n       * @internal\n       */\n    function (record) {\n        // Anything after that needs to be removed;\n        while (record !== null) {\n            var nextRecord = record._next;\n            this._addToRemovals(this._unlink(record));\n            record = nextRecord;\n        }\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.clear();\n        }\n        if (this._additionsTail !== null) {\n            this._additionsTail._nextAdded = null;\n        }\n        if (this._movesTail !== null) {\n            this._movesTail._nextMoved = null;\n        }\n        if (this._itTail !== null) {\n            this._itTail._next = null;\n        }\n        if (this._removalsTail !== null) {\n            this._removalsTail._nextRemoved = null;\n        }\n        if (this._identityChangesTail !== null) {\n            this._identityChangesTail._nextIdentityChange = null;\n        }\n    };\n    /** @internal */\n    /** @internal */\n    DefaultIterableDiffer.prototype._reinsertAfter = /** @internal */\n    function (record, prevRecord, index) {\n        if (this._unlinkedRecords !== null) {\n            this._unlinkedRecords.remove(record);\n        }\n        var prev = record._prevRemoved;\n        var next = record._nextRemoved;\n        if (prev === null) {\n            this._removalsHead = next;\n        }\n        else {\n            prev._nextRemoved = next;\n        }\n        if (next === null) {\n            this._removalsTail = prev;\n        }\n        else {\n            next._prevRemoved = prev;\n        }\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /** @internal */\n    DefaultIterableDiffer.prototype._moveAfter = /** @internal */\n    function (record, prevRecord, index) {\n        this._unlink(record);\n        this._insertAfter(record, prevRecord, index);\n        this._addToMoves(record, index);\n        return record;\n    };\n    /** @internal */\n    /** @internal */\n    DefaultIterableDiffer.prototype._addAfter = /** @internal */\n    function (record, prevRecord, index) {\n        this._insertAfter(record, prevRecord, index);\n        if (this._additionsTail === null) {\n            // todo(vicb)\n            // assert(this._additionsHead === null);\n            this._additionsTail = this._additionsHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_additionsTail._nextAdded === null);\n            // assert(record._nextAdded === null);\n            this._additionsTail = this._additionsTail._nextAdded = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /** @internal */\n    DefaultIterableDiffer.prototype._insertAfter = /** @internal */\n    function (record, prevRecord, index) {\n        // todo(vicb)\n        // assert(record != prevRecord);\n        // assert(record._next === null);\n        // assert(record._prev === null);\n        var next = prevRecord === null ? this._itHead : prevRecord._next;\n        // todo(vicb)\n        // assert(next != record);\n        // assert(prevRecord != record);\n        record._next = next;\n        record._prev = prevRecord;\n        if (next === null) {\n            this._itTail = record;\n        }\n        else {\n            next._prev = record;\n        }\n        if (prevRecord === null) {\n            this._itHead = record;\n        }\n        else {\n            prevRecord._next = record;\n        }\n        if (this._linkedRecords === null) {\n            this._linkedRecords = new _DuplicateMap();\n        }\n        this._linkedRecords.put(record);\n        record.currentIndex = index;\n        return record;\n    };\n    /** @internal */\n    /** @internal */\n    DefaultIterableDiffer.prototype._remove = /** @internal */\n    function (record) {\n        return this._addToRemovals(this._unlink(record));\n    };\n    /** @internal */\n    /** @internal */\n    DefaultIterableDiffer.prototype._unlink = /** @internal */\n    function (record) {\n        if (this._linkedRecords !== null) {\n            this._linkedRecords.remove(record);\n        }\n        var prev = record._prev;\n        var next = record._next;\n        // todo(vicb)\n        // assert((record._prev = null) === null);\n        // assert((record._next = null) === null);\n        if (prev === null) {\n            this._itHead = next;\n        }\n        else {\n            prev._next = next;\n        }\n        if (next === null) {\n            this._itTail = prev;\n        }\n        else {\n            next._prev = prev;\n        }\n        return record;\n    };\n    /** @internal */\n    /** @internal */\n    DefaultIterableDiffer.prototype._addToMoves = /** @internal */\n    function (record, toIndex) {\n        // todo(vicb)\n        // assert(record._nextMoved === null);\n        if (record.previousIndex === toIndex) {\n            return record;\n        }\n        if (this._movesTail === null) {\n            // todo(vicb)\n            // assert(_movesHead === null);\n            this._movesTail = this._movesHead = record;\n        }\n        else {\n            // todo(vicb)\n            // assert(_movesTail._nextMoved === null);\n            this._movesTail = this._movesTail._nextMoved = record;\n        }\n        return record;\n    };\n    DefaultIterableDiffer.prototype._addToRemovals = function (record) {\n        if (this._unlinkedRecords === null) {\n            this._unlinkedRecords = new _DuplicateMap();\n        }\n        this._unlinkedRecords.put(record);\n        record.currentIndex = null;\n        record._nextRemoved = null;\n        if (this._removalsTail === null) {\n            // todo(vicb)\n            // assert(_removalsHead === null);\n            this._removalsTail = this._removalsHead = record;\n            record._prevRemoved = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(_removalsTail._nextRemoved === null);\n            // assert(record._nextRemoved === null);\n            record._prevRemoved = this._removalsTail;\n            this._removalsTail = this._removalsTail._nextRemoved = record;\n        }\n        return record;\n    };\n    /** @internal */\n    /** @internal */\n    DefaultIterableDiffer.prototype._addIdentityChange = /** @internal */\n    function (record, item) {\n        record.item = item;\n        if (this._identityChangesTail === null) {\n            this._identityChangesTail = this._identityChangesHead = record;\n        }\n        else {\n            this._identityChangesTail = this._identityChangesTail._nextIdentityChange = record;\n        }\n        return record;\n    };\n    return DefaultIterableDiffer;\n}());\n/**\n * @stable\n */\nvar IterableChangeRecord_ = /** @class */ (function () {\n    function IterableChangeRecord_(item, trackById) {\n        this.item = item;\n        this.trackById = trackById;\n        this.currentIndex = null;\n        this.previousIndex = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prevDup = null;\n        /** @internal */\n        this._nextDup = null;\n        /** @internal */\n        this._prevRemoved = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextMoved = null;\n        /** @internal */\n        this._nextIdentityChange = null;\n    }\n    return IterableChangeRecord_;\n}());\n// A linked list of CollectionChangeRecords with the same IterableChangeRecord_.item\nvar _DuplicateItemRecordList = /** @class */ (function () {\n    function _DuplicateItemRecordList() {\n        /** @internal */\n        this._head = null;\n        /** @internal */\n        this._tail = null;\n    }\n    /**\n     * Append the record to the list of duplicates.\n     *\n     * Note: by design all records in the list of duplicates hold the same value in record.item.\n     */\n    /**\n       * Append the record to the list of duplicates.\n       *\n       * Note: by design all records in the list of duplicates hold the same value in record.item.\n       */\n    _DuplicateItemRecordList.prototype.add = /**\n       * Append the record to the list of duplicates.\n       *\n       * Note: by design all records in the list of duplicates hold the same value in record.item.\n       */\n    function (record) {\n        if (this._head === null) {\n            this._head = this._tail = record;\n            record._nextDup = null;\n            record._prevDup = null;\n        }\n        else {\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            // todo(vicb)\n            // assert(record.item ==  _head.item ||\n            //       record.item is num && record.item.isNaN && _head.item is num && _head.item.isNaN);\n            this._tail._nextDup = record;\n            record._prevDup = this._tail;\n            record._nextDup = null;\n            this._tail = record;\n        }\n    };\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    _DuplicateItemRecordList.prototype.get = \n    // Returns a IterableChangeRecord_ having IterableChangeRecord_.trackById == trackById and\n    // IterableChangeRecord_.currentIndex >= atOrAfterIndex\n    function (trackById, atOrAfterIndex) {\n        var record;\n        for (record = this._head; record !== null; record = record._nextDup) {\n            if ((atOrAfterIndex === null || atOrAfterIndex <= (record.currentIndex)) &&\n                looseIdentical(record.trackById, trackById)) {\n                return record;\n            }\n        }\n        return null;\n    };\n    /**\n     * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * Returns whether the list of duplicates is empty.\n     */\n    /**\n       * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n       *\n       * Returns whether the list of duplicates is empty.\n       */\n    _DuplicateItemRecordList.prototype.remove = /**\n       * Remove one {@link IterableChangeRecord_} from the list of duplicates.\n       *\n       * Returns whether the list of duplicates is empty.\n       */\n    function (record) {\n        // todo(vicb)\n        // assert(() {\n        //  // verify that the record being removed is in the list.\n        //  for (IterableChangeRecord_ cursor = _head; cursor != null; cursor = cursor._nextDup) {\n        //    if (identical(cursor, record)) return true;\n        //  }\n        //  return false;\n        //});\n        var prev = record._prevDup;\n        var next = record._nextDup;\n        if (prev === null) {\n            this._head = next;\n        }\n        else {\n            prev._nextDup = next;\n        }\n        if (next === null) {\n            this._tail = prev;\n        }\n        else {\n            next._prevDup = prev;\n        }\n        return this._head === null;\n    };\n    return _DuplicateItemRecordList;\n}());\nvar _DuplicateMap = /** @class */ (function () {\n    function _DuplicateMap() {\n        this.map = new Map();\n    }\n    _DuplicateMap.prototype.put = function (record) {\n        var key = record.trackById;\n        var duplicates = this.map.get(key);\n        if (!duplicates) {\n            duplicates = new _DuplicateItemRecordList();\n            this.map.set(key, duplicates);\n        }\n        duplicates.add(record);\n    };\n    /**\n     * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n     * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n     *\n     * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n     * have any more `a`s needs to return the second `a`.\n     */\n    /**\n       * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n       * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n       *\n       * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n       * have any more `a`s needs to return the second `a`.\n       */\n    _DuplicateMap.prototype.get = /**\n       * Retrieve the `value` using key. Because the IterableChangeRecord_ value may be one which we\n       * have already iterated over, we use the `atOrAfterIndex` to pretend it is not there.\n       *\n       * Use case: `[a, b, c, a, a]` if we are at index `3` which is the second `a` then asking if we\n       * have any more `a`s needs to return the second `a`.\n       */\n    function (trackById, atOrAfterIndex) {\n        var key = trackById;\n        var recordList = this.map.get(key);\n        return recordList ? recordList.get(trackById, atOrAfterIndex) : null;\n    };\n    /**\n     * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n     *\n     * The list of duplicates also is removed from the map if it gets empty.\n     */\n    /**\n       * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n       *\n       * The list of duplicates also is removed from the map if it gets empty.\n       */\n    _DuplicateMap.prototype.remove = /**\n       * Removes a {@link IterableChangeRecord_} from the list of duplicates.\n       *\n       * The list of duplicates also is removed from the map if it gets empty.\n       */\n    function (record) {\n        var key = record.trackById;\n        var recordList = (this.map.get(key));\n        // Remove the list of duplicates when it gets empty\n        if (recordList.remove(record)) {\n            this.map.delete(key);\n        }\n        return record;\n    };\n    Object.defineProperty(_DuplicateMap.prototype, \"isEmpty\", {\n        get: function () { return this.map.size === 0; },\n        enumerable: true,\n        configurable: true\n    });\n    _DuplicateMap.prototype.clear = function () { this.map.clear(); };\n    return _DuplicateMap;\n}());\nfunction getPreviousIndex(item, addRemoveOffset, moveOffsets) {\n    var previousIndex = item.previousIndex;\n    if (previousIndex === null)\n        return previousIndex;\n    var moveOffset = 0;\n    if (moveOffsets && previousIndex < moveOffsets.length) {\n        moveOffset = moveOffsets[previousIndex];\n    }\n    return previousIndex + addRemoveOffset + moveOffset;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar DefaultKeyValueDifferFactory = /** @class */ (function () {\n    function DefaultKeyValueDifferFactory() {\n    }\n    DefaultKeyValueDifferFactory.prototype.supports = function (obj) { return obj instanceof Map || isJsObject(obj); };\n    DefaultKeyValueDifferFactory.prototype.create = function () { return new DefaultKeyValueDiffer(); };\n    return DefaultKeyValueDifferFactory;\n}());\nvar DefaultKeyValueDiffer = /** @class */ (function () {\n    function DefaultKeyValueDiffer() {\n        this._records = new Map();\n        this._mapHead = null;\n        // _appendAfter is used in the check loop\n        this._appendAfter = null;\n        this._previousMapHead = null;\n        this._changesHead = null;\n        this._changesTail = null;\n        this._additionsHead = null;\n        this._additionsTail = null;\n        this._removalsHead = null;\n        this._removalsTail = null;\n    }\n    Object.defineProperty(DefaultKeyValueDiffer.prototype, \"isDirty\", {\n        get: function () {\n            return this._additionsHead !== null || this._changesHead !== null ||\n                this._removalsHead !== null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DefaultKeyValueDiffer.prototype.forEachItem = function (fn) {\n        var record;\n        for (record = this._mapHead; record !== null; record = record._next) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachPreviousItem = function (fn) {\n        var record;\n        for (record = this._previousMapHead; record !== null; record = record._nextPrevious) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachChangedItem = function (fn) {\n        var record;\n        for (record = this._changesHead; record !== null; record = record._nextChanged) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachAddedItem = function (fn) {\n        var record;\n        for (record = this._additionsHead; record !== null; record = record._nextAdded) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.forEachRemovedItem = function (fn) {\n        var record;\n        for (record = this._removalsHead; record !== null; record = record._nextRemoved) {\n            fn(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype.diff = function (map) {\n        if (!map) {\n            map = new Map();\n        }\n        else if (!(map instanceof Map || isJsObject(map))) {\n            throw new Error(\"Error trying to diff '\" + stringify(map) + \"'. Only maps and objects are allowed\");\n        }\n        return this.check(map) ? this : null;\n    };\n    DefaultKeyValueDiffer.prototype.onDestroy = function () { };\n    /**\n     * Check the current state of the map vs the previous.\n     * The algorithm is optimised for when the keys do no change.\n     */\n    /**\n       * Check the current state of the map vs the previous.\n       * The algorithm is optimised for when the keys do no change.\n       */\n    DefaultKeyValueDiffer.prototype.check = /**\n       * Check the current state of the map vs the previous.\n       * The algorithm is optimised for when the keys do no change.\n       */\n    function (map) {\n        var _this = this;\n        this._reset();\n        var insertBefore = this._mapHead;\n        this._appendAfter = null;\n        this._forEach(map, function (value, key) {\n            if (insertBefore && insertBefore.key === key) {\n                _this._maybeAddToChanges(insertBefore, value);\n                _this._appendAfter = insertBefore;\n                insertBefore = insertBefore._next;\n            }\n            else {\n                var record = _this._getOrCreateRecordForKey(key, value);\n                insertBefore = _this._insertBeforeOrAppend(insertBefore, record);\n            }\n        });\n        // Items remaining at the end of the list have been deleted\n        if (insertBefore) {\n            if (insertBefore._prev) {\n                insertBefore._prev._next = null;\n            }\n            this._removalsHead = insertBefore;\n            for (var record = insertBefore; record !== null; record = record._nextRemoved) {\n                if (record === this._mapHead) {\n                    this._mapHead = null;\n                }\n                this._records.delete(record.key);\n                record._nextRemoved = record._next;\n                record.previousValue = record.currentValue;\n                record.currentValue = null;\n                record._prev = null;\n                record._next = null;\n            }\n        }\n        // Make sure tails have no next records from previous runs\n        if (this._changesTail)\n            this._changesTail._nextChanged = null;\n        if (this._additionsTail)\n            this._additionsTail._nextAdded = null;\n        return this.isDirty;\n    };\n    /**\n     * Inserts a record before `before` or append at the end of the list when `before` is null.\n     *\n     * Notes:\n     * - This method appends at `this._appendAfter`,\n     * - This method updates `this._appendAfter`,\n     * - The return value is the new value for the insertion pointer.\n     */\n    /**\n       * Inserts a record before `before` or append at the end of the list when `before` is null.\n       *\n       * Notes:\n       * - This method appends at `this._appendAfter`,\n       * - This method updates `this._appendAfter`,\n       * - The return value is the new value for the insertion pointer.\n       */\n    DefaultKeyValueDiffer.prototype._insertBeforeOrAppend = /**\n       * Inserts a record before `before` or append at the end of the list when `before` is null.\n       *\n       * Notes:\n       * - This method appends at `this._appendAfter`,\n       * - This method updates `this._appendAfter`,\n       * - The return value is the new value for the insertion pointer.\n       */\n    function (before, record) {\n        if (before) {\n            var prev = before._prev;\n            record._next = before;\n            record._prev = prev;\n            before._prev = record;\n            if (prev) {\n                prev._next = record;\n            }\n            if (before === this._mapHead) {\n                this._mapHead = record;\n            }\n            this._appendAfter = before;\n            return before;\n        }\n        if (this._appendAfter) {\n            this._appendAfter._next = record;\n            record._prev = this._appendAfter;\n        }\n        else {\n            this._mapHead = record;\n        }\n        this._appendAfter = record;\n        return null;\n    };\n    DefaultKeyValueDiffer.prototype._getOrCreateRecordForKey = function (key, value) {\n        if (this._records.has(key)) {\n            var record_1 = (this._records.get(key));\n            this._maybeAddToChanges(record_1, value);\n            var prev = record_1._prev;\n            var next = record_1._next;\n            if (prev) {\n                prev._next = next;\n            }\n            if (next) {\n                next._prev = prev;\n            }\n            record_1._next = null;\n            record_1._prev = null;\n            return record_1;\n        }\n        var record = new KeyValueChangeRecord_(key);\n        this._records.set(key, record);\n        record.currentValue = value;\n        this._addToAdditions(record);\n        return record;\n    };\n    /** @internal */\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._reset = /** @internal */\n    function () {\n        if (this.isDirty) {\n            var record = void 0;\n            // let `_previousMapHead` contain the state of the map before the changes\n            this._previousMapHead = this._mapHead;\n            for (record = this._previousMapHead; record !== null; record = record._next) {\n                record._nextPrevious = record._next;\n            }\n            // Update `record.previousValue` with the value of the item before the changes\n            // We need to update all changed items (that's those which have been added and changed)\n            for (record = this._changesHead; record !== null; record = record._nextChanged) {\n                record.previousValue = record.currentValue;\n            }\n            for (record = this._additionsHead; record != null; record = record._nextAdded) {\n                record.previousValue = record.currentValue;\n            }\n            this._changesHead = this._changesTail = null;\n            this._additionsHead = this._additionsTail = null;\n            this._removalsHead = null;\n        }\n    };\n    // Add the record or a given key to the list of changes only when the value has actually changed\n    // Add the record or a given key to the list of changes only when the value has actually changed\n    DefaultKeyValueDiffer.prototype._maybeAddToChanges = \n    // Add the record or a given key to the list of changes only when the value has actually changed\n    function (record, newValue) {\n        if (!looseIdentical(newValue, record.currentValue)) {\n            record.previousValue = record.currentValue;\n            record.currentValue = newValue;\n            this._addToChanges(record);\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToAdditions = function (record) {\n        if (this._additionsHead === null) {\n            this._additionsHead = this._additionsTail = record;\n        }\n        else {\n            this._additionsTail._nextAdded = record;\n            this._additionsTail = record;\n        }\n    };\n    DefaultKeyValueDiffer.prototype._addToChanges = function (record) {\n        if (this._changesHead === null) {\n            this._changesHead = this._changesTail = record;\n        }\n        else {\n            this._changesTail._nextChanged = record;\n            this._changesTail = record;\n        }\n    };\n    /** @internal */\n    /** @internal */\n    DefaultKeyValueDiffer.prototype._forEach = /** @internal */\n    function (obj, fn) {\n        if (obj instanceof Map) {\n            obj.forEach(fn);\n        }\n        else {\n            Object.keys(obj).forEach(function (k) { return fn(obj[k], k); });\n        }\n    };\n    return DefaultKeyValueDiffer;\n}());\n/**\n * @stable\n */\nvar KeyValueChangeRecord_ = /** @class */ (function () {\n    function KeyValueChangeRecord_(key) {\n        this.key = key;\n        this.previousValue = null;\n        this.currentValue = null;\n        /** @internal */\n        this._nextPrevious = null;\n        /** @internal */\n        this._next = null;\n        /** @internal */\n        this._prev = null;\n        /** @internal */\n        this._nextAdded = null;\n        /** @internal */\n        this._nextRemoved = null;\n        /** @internal */\n        this._nextChanged = null;\n    }\n    return KeyValueChangeRecord_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different iterable diffing strategies used by NgFor, NgClass, and others.\n * @stable\n */\nvar IterableDiffers = /** @class */ (function () {\n    function IterableDiffers(factories) {\n        this.factories = factories;\n    }\n    IterableDiffers.create = function (factories, parent) {\n        if (parent != null) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new IterableDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n     * inherited {@link IterableDiffers} instance with the provided factories and return a new\n     * {@link IterableDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link IterableDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     IterableDiffers.extend([new ImmutableListDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n       * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n       * inherited {@link IterableDiffers} instance with the provided factories and return a new\n       * {@link IterableDiffers} instance.\n       *\n       * The following example shows how to extend an existing list of factories,\n       * which will only be applied to the injector for this component and its children.\n       * This step is all that's required to make a new {@link IterableDiffer} available.\n       *\n       * ### Example\n       *\n       * ```\n       * @Component({\n       *   viewProviders: [\n       *     IterableDiffers.extend([new ImmutableListDiffer()])\n       *   ]\n       * })\n       * ```\n       */\n    IterableDiffers.extend = /**\n       * Takes an array of {@link IterableDifferFactory} and returns a provider used to extend the\n       * inherited {@link IterableDiffers} instance with the provided factories and return a new\n       * {@link IterableDiffers} instance.\n       *\n       * The following example shows how to extend an existing list of factories,\n       * which will only be applied to the injector for this component and its children.\n       * This step is all that's required to make a new {@link IterableDiffer} available.\n       *\n       * ### Example\n       *\n       * ```\n       * @Component({\n       *   viewProviders: [\n       *     IterableDiffers.extend([new ImmutableListDiffer()])\n       *   ]\n       * })\n       * ```\n       */\n    function (factories) {\n        return {\n            provide: IterableDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling IterableDiffers.extend inside of dependencies passed\n                    // to\n                    // bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend IterableDiffers without a parent injector');\n                }\n                return IterableDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[IterableDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    IterableDiffers.prototype.find = function (iterable) {\n        var factory = this.factories.find(function (f) { return f.supports(iterable); });\n        if (factory != null) {\n            return factory;\n        }\n        else {\n            throw new Error(\"Cannot find a differ supporting object '\" + iterable + \"' of type '\" + getTypeNameForDebugging(iterable) + \"'\");\n        }\n    };\n    return IterableDiffers;\n}());\nfunction getTypeNameForDebugging(type) {\n    return type['name'] || typeof type;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A repository of different Map diffing strategies used by NgClass, NgStyle, and others.\n * @stable\n */\nvar KeyValueDiffers = /** @class */ (function () {\n    function KeyValueDiffers(factories) {\n        this.factories = factories;\n    }\n    KeyValueDiffers.create = function (factories, parent) {\n        if (parent) {\n            var copied = parent.factories.slice();\n            factories = factories.concat(copied);\n        }\n        return new KeyValueDiffers(factories);\n    };\n    /**\n     * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n     * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n     * {@link KeyValueDiffers} instance.\n     *\n     * The following example shows how to extend an existing list of factories,\n     * which will only be applied to the injector for this component and its children.\n     * This step is all that's required to make a new {@link KeyValueDiffer} available.\n     *\n     * ### Example\n     *\n     * ```\n     * @Component({\n     *   viewProviders: [\n     *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n     *   ]\n     * })\n     * ```\n     */\n    /**\n       * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n       * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n       * {@link KeyValueDiffers} instance.\n       *\n       * The following example shows how to extend an existing list of factories,\n       * which will only be applied to the injector for this component and its children.\n       * This step is all that's required to make a new {@link KeyValueDiffer} available.\n       *\n       * ### Example\n       *\n       * ```\n       * @Component({\n       *   viewProviders: [\n       *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n       *   ]\n       * })\n       * ```\n       */\n    KeyValueDiffers.extend = /**\n       * Takes an array of {@link KeyValueDifferFactory} and returns a provider used to extend the\n       * inherited {@link KeyValueDiffers} instance with the provided factories and return a new\n       * {@link KeyValueDiffers} instance.\n       *\n       * The following example shows how to extend an existing list of factories,\n       * which will only be applied to the injector for this component and its children.\n       * This step is all that's required to make a new {@link KeyValueDiffer} available.\n       *\n       * ### Example\n       *\n       * ```\n       * @Component({\n       *   viewProviders: [\n       *     KeyValueDiffers.extend([new ImmutableMapDiffer()])\n       *   ]\n       * })\n       * ```\n       */\n    function (factories) {\n        return {\n            provide: KeyValueDiffers,\n            useFactory: function (parent) {\n                if (!parent) {\n                    // Typically would occur when calling KeyValueDiffers.extend inside of dependencies passed\n                    // to bootstrap(), which would override default pipes instead of extending them.\n                    throw new Error('Cannot extend KeyValueDiffers without a parent injector');\n                }\n                return KeyValueDiffers.create(factories, parent);\n            },\n            // Dependency technically isn't optional, but we can provide a better error message this way.\n            deps: [[KeyValueDiffers, new SkipSelf(), new Optional()]]\n        };\n    };\n    KeyValueDiffers.prototype.find = function (kv) {\n        var factory = this.factories.find(function (f) { return f.supports(kv); });\n        if (factory) {\n            return factory;\n        }\n        throw new Error(\"Cannot find a differ supporting object '\" + kv + \"'\");\n    };\n    return KeyValueDiffers;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Structural diffing for `Object`s and `Map`s.\n */\nvar keyValDiff = [new DefaultKeyValueDifferFactory()];\n/**\n * Structural diffing for `Iterable` types such as `Array`s.\n */\nvar iterableDiff = [new DefaultIterableDifferFactory()];\nvar defaultIterableDiffers = new IterableDiffers(iterableDiff);\nvar defaultKeyValueDiffers = new KeyValueDiffers(keyValDiff);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar _CORE_PLATFORM_PROVIDERS = [\n    // Set a default platform name for platforms that don't set it explicitly.\n    { provide: PLATFORM_ID, useValue: 'unknown' },\n    { provide: PlatformRef, deps: [Injector] },\n    { provide: TestabilityRegistry, deps: [] },\n    { provide: Console, deps: [] },\n];\n/**\n * This platform has to be included in any other platform\n *\n * @experimental\n */\nvar platformCore = createPlatformFactory(null, 'core', _CORE_PLATFORM_PROVIDERS);\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Provide this token to set the locale of your application.\n * It is used for i18n extraction, by i18n pipes (DatePipe, I18nPluralPipe, CurrencyPipe,\n * DecimalPipe and PercentPipe) and by ICU expressions.\n *\n * See the {@linkDocs guide/i18n#setting-up-locale i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { LOCALE_ID } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: LOCALE_ID, useValue: 'en-US' }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar LOCALE_ID = new InjectionToken('LocaleId');\n/**\n * Use this token at bootstrap to provide the content of your translation file (`xtb`,\n * `xlf` or `xlf2`) when you want to translate your application in another language.\n *\n * See the {@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * // content of your translation file\n * const translations = '....';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS, useValue: translations }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar TRANSLATIONS = new InjectionToken('Translations');\n/**\n * Provide this token at bootstrap to set the format of your {@link TRANSLATIONS}: `xtb`,\n * `xlf` or `xlf2`.\n *\n * See the {@linkDocs guide/i18n#merge i18n guide} for more information.\n *\n * ### Example\n *\n * ```typescript\n * import { TRANSLATIONS_FORMAT } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   providers: [{provide: TRANSLATIONS_FORMAT, useValue: 'xlf' }]\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\nvar TRANSLATIONS_FORMAT = new InjectionToken('TranslationsFormat');\n/**\n * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n * that the compiler should use in case of missing translations:\n * - Error: throw if you have missing translations.\n * - Warning (default): show a warning in the console and/or shell.\n * - Ignore: do nothing.\n *\n * See the {@linkDocs guide/i18n#missing-translation i18n guide} for more information.\n *\n * ### Example\n * ```typescript\n * import { MissingTranslationStrategy } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   missingTranslation: MissingTranslationStrategy.Error\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\n/**\n * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n * that the compiler should use in case of missing translations:\n * - Error: throw if you have missing translations.\n * - Warning (default): show a warning in the console and/or shell.\n * - Ignore: do nothing.\n *\n * See the {@linkDocs guide/i18n#missing-translation i18n guide} for more information.\n *\n * ### Example\n * ```typescript\n * import { MissingTranslationStrategy } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   missingTranslation: MissingTranslationStrategy.Error\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\n\n/**\n * Use this enum at bootstrap as an option of `bootstrapModule` to define the strategy\n * that the compiler should use in case of missing translations:\n * - Error: throw if you have missing translations.\n * - Warning (default): show a warning in the console and/or shell.\n * - Ignore: do nothing.\n *\n * See the {@linkDocs guide/i18n#missing-translation i18n guide} for more information.\n *\n * ### Example\n * ```typescript\n * import { MissingTranslationStrategy } from '@angular/core';\n * import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n * import { AppModule } from './app/app.module';\n *\n * platformBrowserDynamic().bootstrapModule(AppModule, {\n *   missingTranslation: MissingTranslationStrategy.Error\n * });\n * ```\n *\n * @experimental i18n support is experimental.\n */\n(function (MissingTranslationStrategy) {\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Error\"] = 0] = \"Error\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Warning\"] = 1] = \"Warning\";\n    MissingTranslationStrategy[MissingTranslationStrategy[\"Ignore\"] = 2] = \"Ignore\";\n})(exports.MissingTranslationStrategy || (exports.MissingTranslationStrategy = {}));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction _iterableDiffersFactory() {\n    return defaultIterableDiffers;\n}\nfunction _keyValueDiffersFactory() {\n    return defaultKeyValueDiffers;\n}\nfunction _localeFactory(locale) {\n    return locale || 'en-US';\n}\n/**\n * This module includes the providers of @angular/core that are needed\n * to bootstrap components via `ApplicationRef`.\n *\n * @experimental\n */\nvar ApplicationModule = /** @class */ (function () {\n    // Inject ApplicationRef to make it eager...\n    function ApplicationModule(appRef) {\n    }\n    ApplicationModule.decorators = [\n        { type: NgModule, args: [{\n                    providers: [\n                        ApplicationRef,\n                        ApplicationInitStatus,\n                        Compiler,\n                        APP_ID_RANDOM_PROVIDER,\n                        { provide: IterableDiffers, useFactory: _iterableDiffersFactory },\n                        { provide: KeyValueDiffers, useFactory: _keyValueDiffersFactory },\n                        {\n                            provide: LOCALE_ID,\n                            useFactory: _localeFactory,\n                            deps: [[new Inject(LOCALE_ID), new Optional(), new SkipSelf()]]\n                        },\n                    ]\n                },] }\n    ];\n    /** @nocollapse */\n    ApplicationModule.ctorParameters = function () { return [\n        { type: ApplicationRef, },\n    ]; };\n    return ApplicationModule;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * This helper class is used to get hold of an inert tree of DOM elements containing dirty HTML\n * that needs sanitizing.\n * Depending upon browser support we must use one of three strategies for doing this.\n * Support: Safari 10.x -> XHR strategy\n * Support: Firefox -> DomParser strategy\n * Default: InertDocument strategy\n */\nvar InertBodyHelper = /** @class */ (function () {\n    function InertBodyHelper(defaultDoc) {\n        this.defaultDoc = defaultDoc;\n        this.inertDocument = this.defaultDoc.implementation.createHTMLDocument('sanitization-inert');\n        this.inertBodyElement = this.inertDocument.body;\n        if (this.inertBodyElement == null) {\n            // usually there should be only one body element in the document, but IE doesn't have any, so\n            // we need to create one.\n            var inertHtml = this.inertDocument.createElement('html');\n            this.inertDocument.appendChild(inertHtml);\n            this.inertBodyElement = this.inertDocument.createElement('body');\n            inertHtml.appendChild(this.inertBodyElement);\n        }\n        this.inertBodyElement.innerHTML = '<svg><g onload=\"this.parentNode.remove()\"></g></svg>';\n        if (this.inertBodyElement.querySelector && !this.inertBodyElement.querySelector('svg')) {\n            // We just hit the Safari 10.1 bug - which allows JS to run inside the SVG G element\n            // so use the XHR strategy.\n            this.getInertBodyElement = this.getInertBodyElement_XHR;\n            return;\n        }\n        this.inertBodyElement.innerHTML =\n            '<svg><p><style><img src=\"</style><img src=x onerror=alert(1)//\">';\n        if (this.inertBodyElement.querySelector && this.inertBodyElement.querySelector('svg img')) {\n            // We just hit the Firefox bug - which prevents the inner img JS from being sanitized\n            // so use the DOMParser strategy, if it is available.\n            // If the DOMParser is not available then we are not in Firefox (Server/WebWorker?) so we\n            // fall through to the default strategy below.\n            if (isDOMParserAvailable()) {\n                this.getInertBodyElement = this.getInertBodyElement_DOMParser;\n                return;\n            }\n        }\n        // None of the bugs were hit so it is safe for us to use the default InertDocument strategy\n        this.getInertBodyElement = this.getInertBodyElement_InertDocument;\n    }\n    /**\n     * Use XHR to create and fill an inert body element (on Safari 10.1)\n     * See\n     * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n     */\n    /**\n       * Use XHR to create and fill an inert body element (on Safari 10.1)\n       * See\n       * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n       */\n    InertBodyHelper.prototype.getInertBodyElement_XHR = /**\n       * Use XHR to create and fill an inert body element (on Safari 10.1)\n       * See\n       * https://github.com/cure53/DOMPurify/blob/a992d3a75031cb8bb032e5ea8399ba972bdf9a65/src/purify.js#L439-L449\n       */\n    function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            html = encodeURI(html);\n        }\n        catch (e) {\n            return null;\n        }\n        var xhr = new XMLHttpRequest();\n        xhr.responseType = 'document';\n        xhr.open('GET', 'data:text/html;charset=utf-8,' + html, false);\n        xhr.send(null);\n        var body = xhr.response.body;\n        body.removeChild((body.firstChild));\n        return body;\n    };\n    /**\n     * Use DOMParser to create and fill an inert body element (on Firefox)\n     * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n     *\n     */\n    /**\n       * Use DOMParser to create and fill an inert body element (on Firefox)\n       * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n       *\n       */\n    InertBodyHelper.prototype.getInertBodyElement_DOMParser = /**\n       * Use DOMParser to create and fill an inert body element (on Firefox)\n       * See https://github.com/cure53/DOMPurify/releases/tag/0.6.7\n       *\n       */\n    function (html) {\n        // We add these extra elements to ensure that the rest of the content is parsed as expected\n        // e.g. leading whitespace is maintained and tags like `<meta>` do not get hoisted to the\n        // `<head>` tag.\n        html = '<body><remove></remove>' + html + '</body>';\n        try {\n            var body = new window\n                .DOMParser()\n                .parseFromString(html, 'text/html')\n                .body;\n            body.removeChild((body.firstChild));\n            return body;\n        }\n        catch (e) {\n            return null;\n        }\n    };\n    /**\n     * Use an HTML5 `template` element, if supported, or an inert body element created via\n     * `createHtmlDocument` to create and fill an inert DOM element.\n     * This is the default sane strategy to use if the browser does not require one of the specialised\n     * strategies above.\n     */\n    /**\n       * Use an HTML5 `template` element, if supported, or an inert body element created via\n       * `createHtmlDocument` to create and fill an inert DOM element.\n       * This is the default sane strategy to use if the browser does not require one of the specialised\n       * strategies above.\n       */\n    InertBodyHelper.prototype.getInertBodyElement_InertDocument = /**\n       * Use an HTML5 `template` element, if supported, or an inert body element created via\n       * `createHtmlDocument` to create and fill an inert DOM element.\n       * This is the default sane strategy to use if the browser does not require one of the specialised\n       * strategies above.\n       */\n    function (html) {\n        // Prefer using <template> element if supported.\n        var templateEl = this.inertDocument.createElement('template');\n        if ('content' in templateEl) {\n            templateEl.innerHTML = html;\n            return templateEl;\n        }\n        this.inertBodyElement.innerHTML = html;\n        // Support: IE 9-11 only\n        // strip custom-namespaced attributes on IE<=11\n        if (this.defaultDoc.documentMode) {\n            this.stripCustomNsAttrs(this.inertBodyElement);\n        }\n        return this.inertBodyElement;\n    };\n    /**\n     * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n     * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n     * 'ns1:xlink:foo').\n     *\n     * This is undesirable since we don't want to allow any of these custom attributes. This method\n     * strips them all.\n     */\n    /**\n       * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n       * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n       * 'ns1:xlink:foo').\n       *\n       * This is undesirable since we don't want to allow any of these custom attributes. This method\n       * strips them all.\n       */\n    InertBodyHelper.prototype.stripCustomNsAttrs = /**\n       * When IE9-11 comes across an unknown namespaced attribute e.g. 'xlink:foo' it adds 'xmlns:ns1'\n       * attribute to declare ns1 namespace and prefixes the attribute with 'ns1' (e.g.\n       * 'ns1:xlink:foo').\n       *\n       * This is undesirable since we don't want to allow any of these custom attributes. This method\n       * strips them all.\n       */\n    function (el) {\n        var elAttrs = el.attributes;\n        // loop backwards so that we can support removals.\n        for (var i = elAttrs.length - 1; 0 < i; i--) {\n            var attrib = elAttrs.item(i);\n            var attrName = attrib.name;\n            if (attrName === 'xmlns:ns1' || attrName.indexOf('ns1:') === 0) {\n                el.removeAttribute(attrName);\n            }\n        }\n        var childNode = el.firstChild;\n        while (childNode) {\n            if (childNode.nodeType === Node.ELEMENT_NODE)\n                this.stripCustomNsAttrs(childNode);\n            childNode = childNode.nextSibling;\n        }\n    };\n    return InertBodyHelper;\n}());\n/**\n * We need to determine whether the DOMParser exists in the global context.\n * The try-catch is because, on some browsers, trying to access this property\n * on window can actually throw an error.\n *\n * @suppress {uselessCode}\n */\nfunction isDOMParserAvailable() {\n    try {\n        return !!window.DOMParser;\n    }\n    catch (e) {\n        return false;\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A pattern that recognizes a commonly useful subset of URLs that are safe.\n *\n * This regular expression matches a subset of URLs that will not cause script\n * execution if used in URL context within a HTML document. Specifically, this\n * regular expression matches if (comment from here on and regex copied from\n * Soy's EscapingConventions):\n * (1) Either a protocol in a whitelist (http, https, mailto or ftp).\n * (2) or no protocol.  A protocol must be followed by a colon. The below\n *     allows that by allowing colons only after one of the characters [/?#].\n *     A colon after a hash (#) must be in the fragment.\n *     Otherwise, a colon after a (?) must be in a query.\n *     Otherwise, a colon after a single solidus (/) must be in a path.\n *     Otherwise, a colon after a double solidus (//) must be in the authority\n *     (before port).\n *\n * The pattern disallows &, used in HTML entity declarations before\n * one of the characters in [/?#]. This disallows HTML entities used in the\n * protocol name, which should never happen, e.g. \"h&#116;tp\" for \"http\".\n * It also disallows HTML entities in the first path part of a relative path,\n * e.g. \"foo&lt;bar/baz\".  Our existing escaping functions should not produce\n * that. More importantly, it disallows masking of a colon,\n * e.g. \"javascript&#58;...\".\n *\n * This regular expression was taken from the Closure sanitization library.\n */\nvar SAFE_URL_PATTERN = /^(?:(?:https?|mailto|ftp|tel|file):|[^&:/?#]*(?:[/?#]|$))/gi;\n/** A pattern that matches safe data URLs. Only matches image, video and audio types. */\nvar DATA_URL_PATTERN = /^data:(?:image\\/(?:bmp|gif|jpeg|jpg|png|tiff|webp)|video\\/(?:mpeg|mp4|ogg|webm)|audio\\/(?:mp3|oga|ogg|opus));base64,[a-z0-9+\\/]+=*$/i;\nfunction _sanitizeUrl(url) {\n    url = String(url);\n    if (url.match(SAFE_URL_PATTERN) || url.match(DATA_URL_PATTERN))\n        return url;\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe URL value \" + url + \" (see http://g.co/ng/security#xss)\");\n    }\n    return 'unsafe:' + url;\n}\nfunction sanitizeSrcset(srcset) {\n    srcset = String(srcset);\n    return srcset.split(',').map(function (srcset) { return _sanitizeUrl(srcset.trim()); }).join(', ');\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction tagSet(tags) {\n    var res = {};\n    try {\n        for (var _a = tslib_1.__values(tags.split(',')), _b = _a.next(); !_b.done; _b = _a.next()) {\n            var t = _b.value;\n            res[t] = true;\n        }\n    }\n    catch (e_1_1) { e_1 = { error: e_1_1 }; }\n    finally {\n        try {\n            if (_b && !_b.done && (_c = _a.return)) _c.call(_a);\n        }\n        finally { if (e_1) throw e_1.error; }\n    }\n    return res;\n    var e_1, _c;\n}\nfunction merge$1() {\n    var sets = [];\n    for (var _i = 0; _i < arguments.length; _i++) {\n        sets[_i] = arguments[_i];\n    }\n    var res = {};\n    try {\n        for (var sets_1 = tslib_1.__values(sets), sets_1_1 = sets_1.next(); !sets_1_1.done; sets_1_1 = sets_1.next()) {\n            var s = sets_1_1.value;\n            for (var v in s) {\n                if (s.hasOwnProperty(v))\n                    res[v] = true;\n            }\n        }\n    }\n    catch (e_2_1) { e_2 = { error: e_2_1 }; }\n    finally {\n        try {\n            if (sets_1_1 && !sets_1_1.done && (_a = sets_1.return)) _a.call(sets_1);\n        }\n        finally { if (e_2) throw e_2.error; }\n    }\n    return res;\n    var e_2, _a;\n}\n// Good source of info about elements and attributes\n// http://dev.w3.org/html5/spec/Overview.html#semantics\n// http://simon.html5.org/html-elements\n// Safe Void Elements - HTML5\n// http://dev.w3.org/html5/spec/Overview.html#void-elements\nvar VOID_ELEMENTS = tagSet('area,br,col,hr,img,wbr');\n// Elements that you can, intentionally, leave open (and which close themselves)\n// http://dev.w3.org/html5/spec/Overview.html#optional-tags\nvar OPTIONAL_END_TAG_BLOCK_ELEMENTS = tagSet('colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr');\nvar OPTIONAL_END_TAG_INLINE_ELEMENTS = tagSet('rp,rt');\nvar OPTIONAL_END_TAG_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, OPTIONAL_END_TAG_BLOCK_ELEMENTS);\n// Safe Block Elements - HTML5\nvar BLOCK_ELEMENTS = merge$1(OPTIONAL_END_TAG_BLOCK_ELEMENTS, tagSet('address,article,' +\n    'aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,' +\n    'h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul'));\n// Inline Elements - HTML5\nvar INLINE_ELEMENTS = merge$1(OPTIONAL_END_TAG_INLINE_ELEMENTS, tagSet('a,abbr,acronym,audio,b,' +\n    'bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,' +\n    'samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video'));\nvar VALID_ELEMENTS = merge$1(VOID_ELEMENTS, BLOCK_ELEMENTS, INLINE_ELEMENTS, OPTIONAL_END_TAG_ELEMENTS);\n// Attributes that have href and hence need to be sanitized\nvar URI_ATTRS = tagSet('background,cite,href,itemtype,longdesc,poster,src,xlink:href');\n// Attributes that have special href set hence need to be sanitized\nvar SRCSET_ATTRS = tagSet('srcset');\nvar HTML_ATTRS = tagSet('abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,' +\n    'compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,' +\n    'ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,' +\n    'scope,scrolling,shape,size,sizes,span,srclang,start,summary,tabindex,target,title,translate,type,usemap,' +\n    'valign,value,vspace,width');\n// NB: This currently consciously doesn't support SVG. SVG sanitization has had several security\n// issues in the past, so it seems safer to leave it out if possible. If support for binding SVG via\n// innerHTML is required, SVG attributes should be added here.\n// NB: Sanitization does not allow <form> elements or other active elements (<button> etc). Those\n// can be sanitized, but they increase security surface area without a legitimate use case, so they\n// are left out here.\nvar VALID_ATTRS = merge$1(URI_ATTRS, SRCSET_ATTRS, HTML_ATTRS);\n/**\n * SanitizingHtmlSerializer serializes a DOM fragment, stripping out any unsafe elements and unsafe\n * attributes.\n */\nvar SanitizingHtmlSerializer = /** @class */ (function () {\n    function SanitizingHtmlSerializer() {\n        // Explicitly track if something was stripped, to avoid accidentally warning of sanitization just\n        // because characters were re-encoded.\n        this.sanitizedSomething = false;\n        this.buf = [];\n    }\n    SanitizingHtmlSerializer.prototype.sanitizeChildren = function (el) {\n        // This cannot use a TreeWalker, as it has to run on Angular's various DOM adapters.\n        // However this code never accesses properties off of `document` before deleting its contents\n        // again, so it shouldn't be vulnerable to DOM clobbering.\n        var current = (el.firstChild);\n        while (current) {\n            if (current.nodeType === Node.ELEMENT_NODE) {\n                this.startElement(current);\n            }\n            else if (current.nodeType === Node.TEXT_NODE) {\n                this.chars((current.nodeValue));\n            }\n            else {\n                // Strip non-element, non-text nodes.\n                this.sanitizedSomething = true;\n            }\n            if (current.firstChild) {\n                current = (current.firstChild);\n                continue;\n            }\n            while (current) {\n                // Leaving the element. Walk up and to the right, closing tags as we go.\n                if (current.nodeType === Node.ELEMENT_NODE) {\n                    this.endElement(current);\n                }\n                var next = this.checkClobberedElement(current, (current.nextSibling));\n                if (next) {\n                    current = next;\n                    break;\n                }\n                current = this.checkClobberedElement(current, (current.parentNode));\n            }\n        }\n        return this.buf.join('');\n    };\n    SanitizingHtmlSerializer.prototype.startElement = function (element) {\n        var tagName = element.nodeName.toLowerCase();\n        if (!VALID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.sanitizedSomething = true;\n            return;\n        }\n        this.buf.push('<');\n        this.buf.push(tagName);\n        var elAttrs = element.attributes;\n        for (var i = 0; i < elAttrs.length; i++) {\n            var elAttr = elAttrs.item(i);\n            var attrName = elAttr.name;\n            var lower = attrName.toLowerCase();\n            if (!VALID_ATTRS.hasOwnProperty(lower)) {\n                this.sanitizedSomething = true;\n                continue;\n            }\n            var value = elAttr.value;\n            // TODO(martinprobst): Special case image URIs for data:image/...\n            if (URI_ATTRS[lower])\n                value = _sanitizeUrl(value);\n            if (SRCSET_ATTRS[lower])\n                value = sanitizeSrcset(value);\n            this.buf.push(' ', attrName, '=\"', encodeEntities(value), '\"');\n        }\n        this.buf.push('>');\n    };\n    SanitizingHtmlSerializer.prototype.endElement = function (current) {\n        var tagName = current.nodeName.toLowerCase();\n        if (VALID_ELEMENTS.hasOwnProperty(tagName) && !VOID_ELEMENTS.hasOwnProperty(tagName)) {\n            this.buf.push('</');\n            this.buf.push(tagName);\n            this.buf.push('>');\n        }\n    };\n    SanitizingHtmlSerializer.prototype.chars = function (chars) { this.buf.push(encodeEntities(chars)); };\n    SanitizingHtmlSerializer.prototype.checkClobberedElement = function (node, nextNode) {\n        if (nextNode &&\n            (node.compareDocumentPosition(nextNode) &\n                Node.DOCUMENT_POSITION_CONTAINED_BY) === Node.DOCUMENT_POSITION_CONTAINED_BY) {\n            throw new Error(\"Failed to sanitize html because the element is clobbered: \" + node.outerHTML);\n        }\n        return nextNode;\n    };\n    return SanitizingHtmlSerializer;\n}());\n// Regular Expressions for parsing tags and attributes\nvar SURROGATE_PAIR_REGEXP = /[\\uD800-\\uDBFF][\\uDC00-\\uDFFF]/g;\n// ! to ~ is the ASCII range.\nvar NON_ALPHANUMERIC_REGEXP = /([^\\#-~ |!])/g;\n/**\n * Escapes all potentially dangerous characters, so that the\n * resulting string can be safely inserted into attribute or\n * element text.\n * @param value\n */\nfunction encodeEntities(value) {\n    return value.replace(/&/g, '&amp;')\n        .replace(SURROGATE_PAIR_REGEXP, function (match) {\n        var hi = match.charCodeAt(0);\n        var low = match.charCodeAt(1);\n        return '&#' + (((hi - 0xD800) * 0x400) + (low - 0xDC00) + 0x10000) + ';';\n    })\n        .replace(NON_ALPHANUMERIC_REGEXP, function (match) { return '&#' + match.charCodeAt(0) + ';'; })\n        .replace(/</g, '&lt;')\n        .replace(/>/g, '&gt;');\n}\nvar inertBodyHelper;\n/**\n * Sanitizes the given unsafe, untrusted HTML fragment, and returns HTML text that is safe to add to\n * the DOM in a browser environment.\n */\nfunction _sanitizeHtml(defaultDoc, unsafeHtmlInput) {\n    var inertBodyElement = null;\n    try {\n        inertBodyHelper = inertBodyHelper || new InertBodyHelper(defaultDoc);\n        // Make sure unsafeHtml is actually a string (TypeScript types are not enforced at runtime).\n        var unsafeHtml = unsafeHtmlInput ? String(unsafeHtmlInput) : '';\n        inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        // mXSS protection. Repeatedly parse the document to make sure it stabilizes, so that a browser\n        // trying to auto-correct incorrect HTML cannot cause formerly inert HTML to become dangerous.\n        var mXSSAttempts = 5;\n        var parsedHtml = unsafeHtml;\n        do {\n            if (mXSSAttempts === 0) {\n                throw new Error('Failed to sanitize html because the input is unstable');\n            }\n            mXSSAttempts--;\n            unsafeHtml = parsedHtml;\n            parsedHtml = inertBodyElement.innerHTML;\n            inertBodyElement = inertBodyHelper.getInertBodyElement(unsafeHtml);\n        } while (unsafeHtml !== parsedHtml);\n        var sanitizer = new SanitizingHtmlSerializer();\n        var safeHtml = sanitizer.sanitizeChildren(getTemplateContent((inertBodyElement)) || inertBodyElement);\n        if (isDevMode() && sanitizer.sanitizedSomething) {\n            console.warn('WARNING: sanitizing HTML stripped some content (see http://g.co/ng/security#xss).');\n        }\n        return safeHtml;\n    }\n    finally {\n        // In case anything goes wrong, clear out inertElement to reset the entire DOM structure.\n        if (inertBodyElement) {\n            var parent_1 = getTemplateContent(inertBodyElement) || inertBodyElement;\n            while (parent_1.firstChild) {\n                parent_1.removeChild(parent_1.firstChild);\n            }\n        }\n    }\n}\nfunction getTemplateContent(el) {\n    return 'content' in el /** Microsoft/TypeScript#21517 */ && isTemplateElement(el) ?\n        el.content :\n        null;\n}\nfunction isTemplateElement(el) {\n    return el.nodeType === Node.ELEMENT_NODE && el.nodeName === 'TEMPLATE';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Regular expression for safe style values.\n *\n * Quotes (\" and ') are allowed, but a check must be done elsewhere to ensure they're balanced.\n *\n * ',' allows multiple values to be assigned to the same property (e.g. background-attachment or\n * font-family) and hence could allow multiple values to get injected, but that should pose no risk\n * of XSS.\n *\n * The function expression checks only for XSS safety, not for CSS validity.\n *\n * This regular expression was taken from the Closure sanitization library, and augmented for\n * transformation values.\n */\nvar VALUES = '[-,.\"\\'%_!# a-zA-Z0-9]+';\nvar TRANSFORMATION_FNS = '(?:matrix|translate|scale|rotate|skew|perspective)(?:X|Y|3d)?';\nvar COLOR_FNS = '(?:rgb|hsl)a?';\nvar GRADIENTS = '(?:repeating-)?(?:linear|radial)-gradient';\nvar CSS3_FNS = '(?:calc|attr)';\nvar FN_ARGS = '\\\\([-0-9.%, #a-zA-Z]+\\\\)';\nvar SAFE_STYLE_VALUE = new RegExp(\"^(\" + VALUES + \"|\" +\n    (\"(?:\" + TRANSFORMATION_FNS + \"|\" + COLOR_FNS + \"|\" + GRADIENTS + \"|\" + CSS3_FNS + \")\") +\n    (FN_ARGS + \")$\"), 'g');\n/**\n * Matches a `url(...)` value with an arbitrary argument as long as it does\n * not contain parentheses.\n *\n * The URL value still needs to be sanitized separately.\n *\n * `url(...)` values are a very common use case, e.g. for `background-image`. With carefully crafted\n * CSS style rules, it is possible to construct an information leak with `url` values in CSS, e.g.\n * by observing whether scroll bars are displayed, or character ranges used by a font face\n * definition.\n *\n * Angular only allows binding CSS values (as opposed to entire CSS rules), so it is unlikely that\n * binding a URL value without further cooperation from the page will cause an information leak, and\n * if so, it is just a leak, not a full blown XSS vulnerability.\n *\n * Given the common use case, low likelihood of attack vector, and low impact of an attack, this\n * code is permissive and allows URLs that sanitize otherwise.\n */\nvar URL_RE = /^url\\(([^)]+)\\)$/;\n/**\n * Checks that quotes (\" and ') are properly balanced inside a string. Assumes\n * that neither escape (\\) nor any other character that could result in\n * breaking out of a string parsing context are allowed;\n * see http://www.w3.org/TR/css3-syntax/#string-token-diagram.\n *\n * This code was taken from the Closure sanitization library.\n */\nfunction hasBalancedQuotes(value) {\n    var outsideSingle = true;\n    var outsideDouble = true;\n    for (var i = 0; i < value.length; i++) {\n        var c = value.charAt(i);\n        if (c === '\\'' && outsideDouble) {\n            outsideSingle = !outsideSingle;\n        }\n        else if (c === '\"' && outsideSingle) {\n            outsideDouble = !outsideDouble;\n        }\n    }\n    return outsideSingle && outsideDouble;\n}\n/**\n * Sanitizes the given untrusted CSS style property value (i.e. not an entire object, just a single\n * value) and returns a value that is safe to use in a browser environment.\n */\nfunction _sanitizeStyle(value) {\n    value = String(value).trim(); // Make sure it's actually a string.\n    if (!value)\n        return '';\n    // Single url(...) values are supported, but only for URLs that sanitize cleanly. See above for\n    // reasoning behind this.\n    var urlMatch = value.match(URL_RE);\n    if ((urlMatch && _sanitizeUrl(urlMatch[1]) === urlMatch[1]) ||\n        value.match(SAFE_STYLE_VALUE) && hasBalancedQuotes(value)) {\n        return value; // Safe style values.\n    }\n    if (isDevMode()) {\n        console.warn(\"WARNING: sanitizing unsafe style value \" + value + \" (see http://g.co/ng/security#xss).\");\n    }\n    return 'unsafe';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n * @stable\n */\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n * @stable\n */\n\n/**\n * A SecurityContext marks a location that has dangerous security implications, e.g. a DOM property\n * like `innerHTML` that could cause Cross Site Scripting (XSS) security bugs when improperly\n * handled.\n *\n * See DomSanitizer for more details on security in Angular applications.\n *\n * @stable\n */\n(function (SecurityContext) {\n    SecurityContext[SecurityContext[\"NONE\"] = 0] = \"NONE\";\n    SecurityContext[SecurityContext[\"HTML\"] = 1] = \"HTML\";\n    SecurityContext[SecurityContext[\"STYLE\"] = 2] = \"STYLE\";\n    SecurityContext[SecurityContext[\"SCRIPT\"] = 3] = \"SCRIPT\";\n    SecurityContext[SecurityContext[\"URL\"] = 4] = \"URL\";\n    SecurityContext[SecurityContext[\"RESOURCE_URL\"] = 5] = \"RESOURCE_URL\";\n})(exports.SecurityContext || (exports.SecurityContext = {}));\n/**\n * Sanitizer is used by the views to sanitize potentially dangerous values.\n *\n * @stable\n */\nvar Sanitizer = /** @class */ (function () {\n    function Sanitizer() {\n    }\n    return Sanitizer;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Called before each cycle of a view's check to detect whether this is in the\n// initState for which we need to call ngOnInit, ngAfterContentInit or ngAfterViewInit\n// lifecycle methods. Returns true if this check cycle should call lifecycle\n// methods.\nfunction shiftInitState(view, priorInitState, newInitState) {\n    // Only update the InitState if we are currently in the prior state.\n    // For example, only move into CallingInit if we are in BeforeInit. Only\n    // move into CallingContentInit if we are in CallingInit. Normally this will\n    // always be true because of how checkCycle is called in checkAndUpdateView.\n    // However, if checkAndUpdateView is called recursively or if an exception is\n    // thrown while checkAndUpdateView is running, checkAndUpdateView starts over\n    // from the beginning. This ensures the state is monotonically increasing,\n    // terminating in the AfterInit state, which ensures the Init methods are called\n    // at least once and only once.\n    var state = view.state;\n    var initState = state & 1792;\n    if (initState === priorInitState) {\n        view.state = (state & ~1792 /* InitState_Mask */) | newInitState;\n        view.initIndex = -1;\n        return true;\n    }\n    return initState === newInitState;\n}\n// Returns true if the lifecycle init method should be called for the node with\n// the given init index.\nfunction shouldCallLifecycleInitHook(view, initState, index) {\n    if ((view.state & 1792 /* InitState_Mask */) === initState && view.initIndex <= index) {\n        view.initIndex = index + 1;\n        return true;\n    }\n    return false;\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asTextData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asElementData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asProviderData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asPureExpressionData(view, index) {\n    return view.nodes[index];\n}\n/**\n * Accessor for view.nodes, enforcing that every usage site stays monomorphic.\n */\nfunction asQueryList(view, index) {\n    return view.nodes[index];\n}\nvar DebugContext = /** @class */ (function () {\n    function DebugContext() {\n    }\n    return DebugContext;\n}());\n/**\n * This object is used to prevent cycles in the source files and to have a place where\n * debug mode can hook it. It is lazily filled when `isDevMode` is known.\n */\nvar Services = {\n    setCurrentNode: (undefined),\n    createRootView: (undefined),\n    createEmbeddedView: (undefined),\n    createComponentView: (undefined),\n    createNgModuleRef: (undefined),\n    overrideProvider: (undefined),\n    overrideComponentView: (undefined),\n    clearOverrides: (undefined),\n    checkAndUpdateView: (undefined),\n    checkNoChangesView: (undefined),\n    destroyView: (undefined),\n    resolveDep: (undefined),\n    createDebugContext: (undefined),\n    handleEvent: (undefined),\n    updateDirectives: (undefined),\n    updateRenderer: (undefined),\n    dirtyParentQueries: (undefined),\n};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction expressionChangedAfterItHasBeenCheckedError(context, oldValue, currValue, isFirstCheck) {\n    var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n    if (isFirstCheck) {\n        msg +=\n            \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                \" Has it been created in a change detection hook ?\";\n    }\n    return viewDebugError(msg, context);\n}\nfunction viewWrappedDebugError(err, context) {\n    if (!(err instanceof Error)) {\n        // errors that are not Error instances don't have a stack,\n        // so it is ok to wrap them into a new Error object...\n        err = new Error(err.toString());\n    }\n    _addDebugContext(err, context);\n    return err;\n}\nfunction viewDebugError(msg, context) {\n    var err = new Error(msg);\n    _addDebugContext(err, context);\n    return err;\n}\nfunction _addDebugContext(err, context) {\n    err[ERROR_DEBUG_CONTEXT] = context;\n    err[ERROR_LOGGER] = context.logError.bind(context);\n}\nfunction isViewDebugError(err) {\n    return !!getDebugContext(err);\n}\nfunction viewDestroyedError(action) {\n    return new Error(\"ViewDestroyedError: Attempt to use a destroyed view: \" + action);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NOOP = function () { };\nvar _tokenKeyCache = new Map();\nfunction tokenKey(token) {\n    var key = _tokenKeyCache.get(token);\n    if (!key) {\n        key = stringify(token) + '_' + _tokenKeyCache.size;\n        _tokenKeyCache.set(token, key);\n    }\n    return key;\n}\nfunction unwrapValue(view, nodeIdx, bindingIdx, value) {\n    if (WrappedValue.isWrapped(value)) {\n        value = WrappedValue.unwrap(value);\n        var globalBindingIdx = view.def.nodes[nodeIdx].bindingIndex + bindingIdx;\n        var oldValue = WrappedValue.unwrap(view.oldValues[globalBindingIdx]);\n        view.oldValues[globalBindingIdx] = new WrappedValue(oldValue);\n    }\n    return value;\n}\nvar UNDEFINED_RENDERER_TYPE_ID = '$$undefined';\nvar EMPTY_RENDERER_TYPE_ID = '$$empty';\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createRendererType2(values) {\n    return {\n        id: UNDEFINED_RENDERER_TYPE_ID,\n        styles: values.styles,\n        encapsulation: values.encapsulation,\n        data: values.data\n    };\n}\nvar _renderCompCount = 0;\nfunction resolveRendererType2(type) {\n    if (type && type.id === UNDEFINED_RENDERER_TYPE_ID) {\n        // first time we see this RendererType2. Initialize it...\n        var isFilled = ((type.encapsulation != null && type.encapsulation !== exports.ViewEncapsulation.None) ||\n            type.styles.length || Object.keys(type.data).length);\n        if (isFilled) {\n            type.id = \"c\" + _renderCompCount++;\n        }\n        else {\n            type.id = EMPTY_RENDERER_TYPE_ID;\n        }\n    }\n    if (type && type.id === EMPTY_RENDERER_TYPE_ID) {\n        type = null;\n    }\n    return type || null;\n}\nfunction checkBinding(view, def, bindingIdx, value) {\n    var oldValues = view.oldValues;\n    if ((view.state & 2 /* FirstCheck */) ||\n        !looseIdentical(oldValues[def.bindingIndex + bindingIdx], value)) {\n        return true;\n    }\n    return false;\n}\nfunction checkAndUpdateBinding(view, def, bindingIdx, value) {\n    if (checkBinding(view, def, bindingIdx, value)) {\n        view.oldValues[def.bindingIndex + bindingIdx] = value;\n        return true;\n    }\n    return false;\n}\nfunction checkBindingNoChanges(view, def, bindingIdx, value) {\n    var oldValue = view.oldValues[def.bindingIndex + bindingIdx];\n    if ((view.state & 1 /* BeforeFirstCheck */) || !devModeEqual(oldValue, value)) {\n        var bindingName = def.bindings[bindingIdx].name;\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, def.nodeIndex), bindingName + \": \" + oldValue, bindingName + \": \" + value, (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction markParentViewsForCheck(view) {\n    var currView = view;\n    while (currView) {\n        if (currView.def.flags & 2 /* OnPush */) {\n            currView.state |= 8 /* ChecksEnabled */;\n        }\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction markParentViewsForCheckProjectedViews(view, endView) {\n    var currView = view;\n    while (currView && currView !== endView) {\n        currView.state |= 64 /* CheckProjectedViews */;\n        currView = currView.viewContainerParent || currView.parent;\n    }\n}\nfunction dispatchEvent(view, nodeIndex, eventName, event) {\n    try {\n        var nodeDef = view.def.nodes[nodeIndex];\n        var startView = nodeDef.flags & 33554432 /* ComponentView */ ?\n            asElementData(view, nodeIndex).componentView :\n            view;\n        markParentViewsForCheck(startView);\n        return Services.handleEvent(view, nodeIndex, eventName, event);\n    }\n    catch (e) {\n        // Attention: Don't rethrow, as it would cancel Observable subscriptions!\n        view.root.errorHandler.handleError(e);\n    }\n}\nfunction declaredViewContainer(view) {\n    if (view.parent) {\n        var parentView = view.parent;\n        return asElementData(parentView, view.parentNodeDef.nodeIndex);\n    }\n    return null;\n}\n/**\n * for component views, this is the host element.\n * for embedded views, this is the index of the parent node\n * that contains the view container.\n */\nfunction viewParentEl(view) {\n    var parentView = view.parent;\n    if (parentView) {\n        return view.parentNodeDef.parent;\n    }\n    else {\n        return null;\n    }\n}\nfunction renderNode(view, def) {\n    switch (def.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return asElementData(view, def.nodeIndex).renderElement;\n        case 2 /* TypeText */:\n            return asTextData(view, def.nodeIndex).renderText;\n    }\n}\nfunction elementEventFullName(target, name) {\n    return target ? target + \":\" + name : name;\n}\nfunction isComponentView(view) {\n    return !!view.parent && !!(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction isEmbeddedView(view) {\n    return !!view.parent && !(view.parentNodeDef.flags & 32768 /* Component */);\n}\nfunction filterQueryId(queryId) {\n    return 1 << (queryId % 32);\n}\nfunction splitMatchedQueriesDsl(matchedQueriesDsl) {\n    var matchedQueries = {};\n    var matchedQueryIds = 0;\n    var references = {};\n    if (matchedQueriesDsl) {\n        matchedQueriesDsl.forEach(function (_a) {\n            var _b = tslib_1.__read(_a, 2), queryId = _b[0], valueType = _b[1];\n            if (typeof queryId === 'number') {\n                matchedQueries[queryId] = valueType;\n                matchedQueryIds |= filterQueryId(queryId);\n            }\n            else {\n                references[queryId] = valueType;\n            }\n        });\n    }\n    return { matchedQueries: matchedQueries, references: references, matchedQueryIds: matchedQueryIds };\n}\nfunction splitDepsDsl(deps, sourceName) {\n    return deps.map(function (value) {\n        var token;\n        var flags;\n        if (Array.isArray(value)) {\n            _a = tslib_1.__read(value, 2), flags = _a[0], token = _a[1];\n        }\n        else {\n            flags = 0 /* None */;\n            token = value;\n        }\n        if (token && (typeof token === 'function' || typeof token === 'object') && sourceName) {\n            Object.defineProperty(token, SOURCE, { value: sourceName, configurable: true });\n        }\n        return { flags: flags, token: token, tokenKey: tokenKey(token) };\n        var _a;\n    });\n}\nfunction getParentRenderElement(view, renderHost, def) {\n    var renderParent = def.renderParent;\n    if (renderParent) {\n        if ((renderParent.flags & 1 /* TypeElement */) === 0 ||\n            (renderParent.flags & 33554432 /* ComponentView */) === 0 ||\n            (renderParent.element.componentRendererType &&\n                renderParent.element.componentRendererType.encapsulation ===\n                    exports.ViewEncapsulation.Native)) {\n            // only children of non components, or children of components with native encapsulation should\n            // be attached.\n            return asElementData(view, def.renderParent.nodeIndex).renderElement;\n        }\n    }\n    else {\n        return renderHost;\n    }\n}\nvar DEFINITION_CACHE = new WeakMap();\nfunction resolveDefinition(factory) {\n    var value = DEFINITION_CACHE.get(factory);\n    if (!value) {\n        value = factory(function () { return NOOP; });\n        value.factory = factory;\n        DEFINITION_CACHE.set(factory, value);\n    }\n    return value;\n}\nfunction rootRenderNodes(view) {\n    var renderNodes = [];\n    visitRootRenderNodes(view, 0 /* Collect */, undefined, undefined, renderNodes);\n    return renderNodes;\n}\nfunction visitRootRenderNodes(view, action, parentNode, nextSibling, target) {\n    // We need to re-compute the parent node in case the nodes have been moved around manually\n    if (action === 3 /* RemoveChild */) {\n        parentNode = view.renderer.parentNode(renderNode(view, (view.def.lastRenderRootNode)));\n    }\n    visitSiblingRenderNodes(view, action, 0, view.def.nodes.length - 1, parentNode, nextSibling, target);\n}\nfunction visitSiblingRenderNodes(view, action, startIndex, endIndex, parentNode, nextSibling, target) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & (1 /* TypeElement */ | 2 /* TypeText */ | 8 /* TypeNgContent */)) {\n            visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n}\nfunction visitProjectedRenderNodes(view, ngContentIndex, action, parentNode, nextSibling, target) {\n    var compView = view;\n    while (compView && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    var hostView = compView.parent;\n    var hostElDef = viewParentEl((compView));\n    var startIndex = hostElDef.nodeIndex + 1;\n    var endIndex = hostElDef.nodeIndex + hostElDef.childCount;\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = hostView.def.nodes[i];\n        if (nodeDef.ngContentIndex === ngContentIndex) {\n            visitRenderNode((hostView), nodeDef, action, parentNode, nextSibling, target);\n        }\n        // jump to next sibling\n        i += nodeDef.childCount;\n    }\n    if (!hostView.parent) {\n        // a root view\n        var projectedNodes = view.root.projectableNodes[ngContentIndex];\n        if (projectedNodes) {\n            for (var i = 0; i < projectedNodes.length; i++) {\n                execRenderNodeAction(view, projectedNodes[i], action, parentNode, nextSibling, target);\n            }\n        }\n    }\n}\nfunction visitRenderNode(view, nodeDef, action, parentNode, nextSibling, target) {\n    if (nodeDef.flags & 8 /* TypeNgContent */) {\n        visitProjectedRenderNodes(view, nodeDef.ngContent.index, action, parentNode, nextSibling, target);\n    }\n    else {\n        var rn = renderNode(view, nodeDef);\n        if (action === 3 /* RemoveChild */ && (nodeDef.flags & 33554432 /* ComponentView */) &&\n            (nodeDef.bindingFlags & 48 /* CatSyntheticProperty */)) {\n            // Note: we might need to do both actions.\n            if (nodeDef.bindingFlags & (16 /* SyntheticProperty */)) {\n                execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n            }\n            if (nodeDef.bindingFlags & (32 /* SyntheticHostProperty */)) {\n                var compView = asElementData(view, nodeDef.nodeIndex).componentView;\n                execRenderNodeAction(compView, rn, action, parentNode, nextSibling, target);\n            }\n        }\n        else {\n            execRenderNodeAction(view, rn, action, parentNode, nextSibling, target);\n        }\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            var embeddedViews = asElementData(view, nodeDef.nodeIndex).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                visitRootRenderNodes(embeddedViews[k], action, parentNode, nextSibling, target);\n            }\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && !nodeDef.element.name) {\n            visitSiblingRenderNodes(view, action, nodeDef.nodeIndex + 1, nodeDef.nodeIndex + nodeDef.childCount, parentNode, nextSibling, target);\n        }\n    }\n}\nfunction execRenderNodeAction(view, renderNode, action, parentNode, nextSibling, target) {\n    var renderer = view.renderer;\n    switch (action) {\n        case 1 /* AppendChild */:\n            renderer.appendChild(parentNode, renderNode);\n            break;\n        case 2 /* InsertBefore */:\n            renderer.insertBefore(parentNode, renderNode, nextSibling);\n            break;\n        case 3 /* RemoveChild */:\n            renderer.removeChild(parentNode, renderNode);\n            break;\n        case 0 /* Collect */:\n            target.push(renderNode);\n            break;\n    }\n}\nvar NS_PREFIX_RE = /^:([^:]+):(.+)$/;\nfunction splitNamespace(name) {\n    if (name[0] === ':') {\n        var match = (name.match(NS_PREFIX_RE));\n        return [match[1], match[2]];\n    }\n    return ['', name];\n}\nfunction calcBindingFlags(bindings) {\n    var flags = 0;\n    for (var i = 0; i < bindings.length; i++) {\n        flags |= bindings[i].flags;\n    }\n    return flags;\n}\nfunction interpolate(valueCount, constAndInterp) {\n    var result = '';\n    for (var i = 0; i < valueCount * 2; i = i + 2) {\n        result = result + constAndInterp[i] + _toStringWithNull(constAndInterp[i + 1]);\n    }\n    return result + constAndInterp[valueCount * 2];\n}\nfunction inlineInterpolate(valueCount, c0, a1, c1, a2, c2, a3, c3, a4, c4, a5, c5, a6, c6, a7, c7, a8, c8, a9, c9) {\n    switch (valueCount) {\n        case 1:\n            return c0 + _toStringWithNull(a1) + c1;\n        case 2:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2;\n        case 3:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3;\n        case 4:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4;\n        case 5:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5;\n        case 6:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) + c6;\n        case 7:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7;\n        case 8:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8;\n        case 9:\n            return c0 + _toStringWithNull(a1) + c1 + _toStringWithNull(a2) + c2 + _toStringWithNull(a3) +\n                c3 + _toStringWithNull(a4) + c4 + _toStringWithNull(a5) + c5 + _toStringWithNull(a6) +\n                c6 + _toStringWithNull(a7) + c7 + _toStringWithNull(a8) + c8 + _toStringWithNull(a9) + c9;\n        default:\n            throw new Error(\"Does not support more than 9 expressions\");\n    }\n}\nfunction _toStringWithNull(v) {\n    return v != null ? v.toString() : '';\n}\nvar EMPTY_ARRAY$2 = [];\nvar EMPTY_MAP = {};\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction anchorDef(flags, matchedQueriesDsl, ngContentIndex, childCount, handleEvent, templateFactory) {\n    flags |= 1 /* TypeElement */;\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var template = templateFactory ? resolveDefinition(templateFactory) : null;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        flags: flags,\n        checkIndex: -1,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: {\n            ns: null,\n            name: null,\n            attrs: null, template: template,\n            componentProvider: null,\n            componentView: null,\n            componentRendererType: null,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction elementDef(checkIndex, flags, matchedQueriesDsl, ngContentIndex, childCount, namespaceAndName, fixedAttrs, bindings, outputs, handleEvent, componentView, componentRendererType) {\n    if (fixedAttrs === void 0) { fixedAttrs = []; }\n    if (!handleEvent) {\n        handleEvent = NOOP;\n    }\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    var ns = (null);\n    var name = (null);\n    if (namespaceAndName) {\n        _b = tslib_1.__read(splitNamespace(namespaceAndName), 2), ns = _b[0], name = _b[1];\n    }\n    bindings = bindings || [];\n    var bindingDefs = new Array(bindings.length);\n    for (var i = 0; i < bindings.length; i++) {\n        var _c = tslib_1.__read(bindings[i], 3), bindingFlags = _c[0], namespaceAndName_1 = _c[1], suffixOrSecurityContext = _c[2];\n        var _d = tslib_1.__read(splitNamespace(namespaceAndName_1), 2), ns_1 = _d[0], name_1 = _d[1];\n        var securityContext = (undefined);\n        var suffix = (undefined);\n        switch (bindingFlags & 15 /* Types */) {\n            case 4 /* TypeElementStyle */:\n                suffix = suffixOrSecurityContext;\n                break;\n            case 1 /* TypeElementAttribute */:\n            case 8 /* TypeProperty */:\n                securityContext = suffixOrSecurityContext;\n                break;\n        }\n        bindingDefs[i] =\n            { flags: bindingFlags, ns: ns_1, name: name_1, nonMinifiedName: name_1, securityContext: securityContext, suffix: suffix };\n    }\n    outputs = outputs || [];\n    var outputDefs = new Array(outputs.length);\n    for (var i = 0; i < outputs.length; i++) {\n        var _e = tslib_1.__read(outputs[i], 2), target = _e[0], eventName = _e[1];\n        outputDefs[i] = {\n            type: 0 /* ElementOutput */,\n            target: target, eventName: eventName,\n            propName: null\n        };\n    }\n    fixedAttrs = fixedAttrs || [];\n    var attrs = fixedAttrs.map(function (_a) {\n        var _b = tslib_1.__read(_a, 2), namespaceAndName = _b[0], value = _b[1];\n        var _c = tslib_1.__read(splitNamespace(namespaceAndName), 2), ns = _c[0], name = _c[1];\n        return [ns, name, value];\n    });\n    componentRendererType = resolveRendererType2(componentRendererType);\n    if (componentView) {\n        flags |= 33554432 /* ComponentView */;\n    }\n    flags |= 1 /* TypeElement */;\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references, ngContentIndex: ngContentIndex, childCount: childCount,\n        bindings: bindingDefs,\n        bindingFlags: calcBindingFlags(bindingDefs),\n        outputs: outputDefs,\n        element: {\n            ns: ns,\n            name: name,\n            attrs: attrs,\n            template: null,\n            // will bet set by the view definition\n            componentProvider: null,\n            componentView: componentView || null,\n            componentRendererType: componentRendererType,\n            publicProviders: null,\n            allProviders: null,\n            handleEvent: handleEvent || NOOP,\n        },\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n    var _b;\n}\nfunction createElement(view, renderHost, def) {\n    var elDef = (def.element);\n    var rootSelectorOrNode = view.root.selectorOrNode;\n    var renderer = view.renderer;\n    var el;\n    if (view.parent || !rootSelectorOrNode) {\n        if (elDef.name) {\n            el = renderer.createElement(elDef.name, elDef.ns);\n        }\n        else {\n            el = renderer.createComment('');\n        }\n        var parentEl = getParentRenderElement(view, renderHost, def);\n        if (parentEl) {\n            renderer.appendChild(parentEl, el);\n        }\n    }\n    else {\n        el = renderer.selectRootElement(rootSelectorOrNode);\n    }\n    if (elDef.attrs) {\n        for (var i = 0; i < elDef.attrs.length; i++) {\n            var _a = tslib_1.__read(elDef.attrs[i], 3), ns = _a[0], name_2 = _a[1], value = _a[2];\n            renderer.setAttribute(el, name_2, value, ns);\n        }\n    }\n    return el;\n}\nfunction listenToElementOutputs(view, compView, def, el) {\n    for (var i = 0; i < def.outputs.length; i++) {\n        var output = def.outputs[i];\n        var handleEventClosure = renderEventHandlerClosure(view, def.nodeIndex, elementEventFullName(output.target, output.eventName));\n        var listenTarget = output.target;\n        var listenerView = view;\n        if (output.target === 'component') {\n            listenTarget = null;\n            listenerView = compView;\n        }\n        var disposable = listenerView.renderer.listen(listenTarget || el, output.eventName, handleEventClosure);\n        view.disposables[def.outputIndex + i] = disposable;\n    }\n}\nfunction renderEventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateElementInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = def.bindings.length;\n    var changed = false;\n    if (bindLen > 0 && checkAndUpdateElementValue(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateElementValue(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateElementValue(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateElementValue(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateElementValue(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateElementValue(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateElementValue(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateElementValue(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateElementValue(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateElementValue(view, def, 9, v9))\n        changed = true;\n    return changed;\n}\nfunction checkAndUpdateElementDynamic(view, def, values) {\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        if (checkAndUpdateElementValue(view, def, i, values[i]))\n            changed = true;\n    }\n    return changed;\n}\nfunction checkAndUpdateElementValue(view, def, bindingIdx, value) {\n    if (!checkAndUpdateBinding(view, def, bindingIdx, value)) {\n        return false;\n    }\n    var binding = def.bindings[bindingIdx];\n    var elData = asElementData(view, def.nodeIndex);\n    var renderNode$$1 = elData.renderElement;\n    var name = (binding.name);\n    switch (binding.flags & 15 /* Types */) {\n        case 1 /* TypeElementAttribute */:\n            setElementAttribute(view, binding, renderNode$$1, binding.ns, name, value);\n            break;\n        case 2 /* TypeElementClass */:\n            setElementClass(view, renderNode$$1, name, value);\n            break;\n        case 4 /* TypeElementStyle */:\n            setElementStyle(view, binding, renderNode$$1, name, value);\n            break;\n        case 8 /* TypeProperty */:\n            var bindView = (def.flags & 33554432 /* ComponentView */ &&\n                binding.flags & 32 /* SyntheticHostProperty */) ?\n                elData.componentView :\n                view;\n            setElementProperty(bindView, binding, renderNode$$1, name, value);\n            break;\n    }\n    return true;\n}\nfunction setElementAttribute(view, binding, renderNode$$1, ns, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    renderValue = renderValue != null ? renderValue.toString() : null;\n    var renderer = view.renderer;\n    if (value != null) {\n        renderer.setAttribute(renderNode$$1, name, renderValue, ns);\n    }\n    else {\n        renderer.removeAttribute(renderNode$$1, name, ns);\n    }\n}\nfunction setElementClass(view, renderNode$$1, name, value) {\n    var renderer = view.renderer;\n    if (value) {\n        renderer.addClass(renderNode$$1, name);\n    }\n    else {\n        renderer.removeClass(renderNode$$1, name);\n    }\n}\nfunction setElementStyle(view, binding, renderNode$$1, name, value) {\n    var renderValue = view.root.sanitizer.sanitize(exports.SecurityContext.STYLE, value);\n    if (renderValue != null) {\n        renderValue = renderValue.toString();\n        var unit = binding.suffix;\n        if (unit != null) {\n            renderValue = renderValue + unit;\n        }\n    }\n    else {\n        renderValue = null;\n    }\n    var renderer = view.renderer;\n    if (renderValue != null) {\n        renderer.setStyle(renderNode$$1, name, renderValue);\n    }\n    else {\n        renderer.removeStyle(renderNode$$1, name);\n    }\n}\nfunction setElementProperty(view, binding, renderNode$$1, name, value) {\n    var securityContext = binding.securityContext;\n    var renderValue = securityContext ? view.root.sanitizer.sanitize(securityContext, value) : value;\n    view.renderer.setProperty(renderNode$$1, name, renderValue);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar UNDEFINED_VALUE = new Object();\nvar InjectorRefTokenKey$1 = tokenKey(Injector);\nvar INJECTORRefTokenKey$1 = tokenKey(INJECTOR);\nvar NgModuleRefTokenKey = tokenKey(NgModuleRef);\nfunction moduleProvideDef(flags, token, value, deps) {\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the module definition\n        index: -1,\n        deps: depDefs, flags: flags, token: token, value: value\n    };\n}\nfunction moduleDef(providers) {\n    var providersByKey = {};\n    var modules = [];\n    var isRoot = false;\n    for (var i = 0; i < providers.length; i++) {\n        var provider = providers[i];\n        if (provider.token === APP_ROOT) {\n            isRoot = true;\n        }\n        if (provider.flags & 1073741824 /* TypeNgModule */) {\n            modules.push(provider.token);\n        }\n        provider.index = i;\n        providersByKey[tokenKey(provider.token)] = provider;\n    }\n    return {\n        // Will be filled later...\n        factory: null,\n        providersByKey: providersByKey,\n        providers: providers,\n        modules: modules,\n        isRoot: isRoot,\n    };\n}\nfunction initNgModule(data) {\n    var def = data._def;\n    var providers = data._providers = new Array(def.providers.length);\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (!(provDef.flags & 4096 /* LazyProvider */)) {\n            providers[i] = _createProviderInstance$1(data, provDef);\n        }\n    }\n}\nfunction resolveNgModuleDep(data, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    if (depDef.flags & 1 /* SkipSelf */) {\n        return data._parent.get(depDef.token, notFoundValue);\n    }\n    var tokenKey$$1 = depDef.tokenKey;\n    switch (tokenKey$$1) {\n        case InjectorRefTokenKey$1:\n        case INJECTORRefTokenKey$1:\n        case NgModuleRefTokenKey:\n            return data;\n    }\n    var providerDef = data._def.providersByKey[tokenKey$$1];\n    if (providerDef) {\n        var providerInstance = data._providers[providerDef.index];\n        if (providerInstance === undefined) {\n            providerInstance = data._providers[providerDef.index] =\n                _createProviderInstance$1(data, providerDef);\n        }\n        return providerInstance === UNDEFINED_VALUE ? undefined : providerInstance;\n    }\n    else if (depDef.token.ngInjectableDef && targetsModule(data, depDef.token.ngInjectableDef)) {\n        var injectableDef = depDef.token.ngInjectableDef;\n        var index = data._providers.length;\n        data._def.providersByKey[depDef.tokenKey] = {\n            flags: 1024 /* TypeFactoryProvider */ | 4096 /* LazyProvider */,\n            value: injectableDef.factory,\n            deps: [], index: index,\n            token: depDef.token,\n        };\n        var former = setCurrentInjector(data);\n        try {\n            data._providers[index] = UNDEFINED_VALUE;\n            return (data._providers[index] =\n                _createProviderInstance$1(data, data._def.providersByKey[depDef.tokenKey]));\n        }\n        finally {\n            setCurrentInjector(former);\n        }\n    }\n    return data._parent.get(depDef.token, notFoundValue);\n}\nfunction moduleTransitivelyPresent(ngModule, scope) {\n    return ngModule._def.modules.indexOf(scope) > -1;\n}\nfunction targetsModule(ngModule, def) {\n    return def.providedIn != null && (moduleTransitivelyPresent(ngModule, def.providedIn) ||\n        def.providedIn === 'root' && ngModule._def.isRoot);\n}\nfunction _createProviderInstance$1(ngModule, providerDef) {\n    var injectable;\n    switch (providerDef.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            injectable = _createClass(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 1024 /* TypeFactoryProvider */:\n            injectable = _callFactory(ngModule, providerDef.value, providerDef.deps);\n            break;\n        case 2048 /* TypeUseExistingProvider */:\n            injectable = resolveNgModuleDep(ngModule, providerDef.deps[0]);\n            break;\n        case 256 /* TypeValueProvider */:\n            injectable = providerDef.value;\n            break;\n    }\n    return injectable === undefined ? UNDEFINED_VALUE : injectable;\n}\nfunction _createClass(ngModule, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return new ctor(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, tslib_1.__spread([void 0], depValues)))();\n    }\n}\nfunction _callFactory(ngModule, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveNgModuleDep(ngModule, deps[0]));\n        case 2:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]));\n        case 3:\n            return factory(resolveNgModuleDep(ngModule, deps[0]), resolveNgModuleDep(ngModule, deps[1]), resolveNgModuleDep(ngModule, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveNgModuleDep(ngModule, deps[i]);\n            }\n            return factory.apply(void 0, tslib_1.__spread(depValues));\n    }\n}\nfunction callNgModuleLifecycle(ngModule, lifecycles) {\n    var def = ngModule._def;\n    for (var i = 0; i < def.providers.length; i++) {\n        var provDef = def.providers[i];\n        if (provDef.flags & 131072 /* OnDestroy */) {\n            var instance = ngModule._providers[i];\n            if (instance && instance !== UNDEFINED_VALUE) {\n                instance.ngOnDestroy();\n            }\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction attachEmbeddedView(parentView, elementData, viewIndex, view) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex === null || viewIndex === undefined) {\n        viewIndex = embeddedViews.length;\n    }\n    view.viewContainerParent = parentView;\n    addToArray(embeddedViews, (viewIndex), view);\n    attachProjectedView(elementData, view);\n    Services.dirtyParentQueries(view);\n    var prevView = (viewIndex) > 0 ? embeddedViews[(viewIndex) - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n}\nfunction attachProjectedView(vcElementData, view) {\n    var dvcElementData = declaredViewContainer(view);\n    if (!dvcElementData || dvcElementData === vcElementData ||\n        view.state & 16 /* IsProjectedView */) {\n        return;\n    }\n    // Note: For performance reasons, we\n    // - add a view to template._projectedViews only 1x throughout its lifetime,\n    //   and remove it not until the view is destroyed.\n    //   (hard, as when a parent view is attached/detached we would need to attach/detach all\n    //    nested projected views as well, even across component boundaries).\n    // - don't track the insertion order of views in the projected views array\n    //   (hard, as when the views of the same template are inserted different view containers)\n    view.state |= 16 /* IsProjectedView */;\n    var projectedViews = dvcElementData.template._projectedViews;\n    if (!projectedViews) {\n        projectedViews = dvcElementData.template._projectedViews = [];\n    }\n    projectedViews.push(view);\n    // Note: we are changing the NodeDef here as we cannot calculate\n    // the fact whether a template is used for projection during compilation.\n    markNodeAsProjectedTemplate(view.parent.def, (view.parentNodeDef));\n}\nfunction markNodeAsProjectedTemplate(viewDef, nodeDef) {\n    if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n        return;\n    }\n    viewDef.nodeFlags |= 4 /* ProjectedTemplate */;\n    nodeDef.flags |= 4 /* ProjectedTemplate */;\n    var parentNodeDef = nodeDef.parent;\n    while (parentNodeDef) {\n        parentNodeDef.childFlags |= 4 /* ProjectedTemplate */;\n        parentNodeDef = parentNodeDef.parent;\n    }\n}\nfunction detachEmbeddedView(elementData, viewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    if (viewIndex == null || viewIndex >= embeddedViews.length) {\n        viewIndex = embeddedViews.length - 1;\n    }\n    if (viewIndex < 0) {\n        return null;\n    }\n    var view = embeddedViews[viewIndex];\n    view.viewContainerParent = null;\n    removeFromArray(embeddedViews, viewIndex);\n    // See attachProjectedView for why we don't update projectedViews here.\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    return view;\n}\nfunction detachProjectedView(view) {\n    if (!(view.state & 16 /* IsProjectedView */)) {\n        return;\n    }\n    var dvcElementData = declaredViewContainer(view);\n    if (dvcElementData) {\n        var projectedViews = dvcElementData.template._projectedViews;\n        if (projectedViews) {\n            removeFromArray(projectedViews, projectedViews.indexOf(view));\n            Services.dirtyParentQueries(view);\n        }\n    }\n}\nfunction moveEmbeddedView(elementData, oldViewIndex, newViewIndex) {\n    var embeddedViews = elementData.viewContainer._embeddedViews;\n    var view = embeddedViews[oldViewIndex];\n    removeFromArray(embeddedViews, oldViewIndex);\n    if (newViewIndex == null) {\n        newViewIndex = embeddedViews.length;\n    }\n    addToArray(embeddedViews, newViewIndex, view);\n    // Note: Don't need to change projectedViews as the order in there\n    // as always invalid...\n    Services.dirtyParentQueries(view);\n    renderDetachView(view);\n    var prevView = newViewIndex > 0 ? embeddedViews[newViewIndex - 1] : null;\n    renderAttachEmbeddedView(elementData, prevView, view);\n    return view;\n}\nfunction renderAttachEmbeddedView(elementData, prevView, view) {\n    var prevRenderNode = prevView ? renderNode(prevView, (prevView.def.lastRenderRootNode)) :\n        elementData.renderElement;\n    var parentNode = view.renderer.parentNode(prevRenderNode);\n    var nextSibling = view.renderer.nextSibling(prevRenderNode);\n    // Note: We can't check if `nextSibling` is present, as on WebWorkers it will always be!\n    // However, browsers automatically do `appendChild` when there is no `nextSibling`.\n    visitRootRenderNodes(view, 2 /* InsertBefore */, parentNode, nextSibling, undefined);\n}\nfunction renderDetachView(view) {\n    visitRootRenderNodes(view, 3 /* RemoveChild */, null, null, undefined);\n}\nfunction addToArray(arr, index, value) {\n    // perf: array.push is faster than array.splice!\n    if (index >= arr.length) {\n        arr.push(value);\n    }\n    else {\n        arr.splice(index, 0, value);\n    }\n}\nfunction removeFromArray(arr, index) {\n    // perf: array.pop is faster than array.splice!\n    if (index >= arr.length - 1) {\n        arr.pop();\n    }\n    else {\n        arr.splice(index, 1);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar EMPTY_CONTEXT = new Object();\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createComponentFactory(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors) {\n    return new ComponentFactory_(selector, componentType, viewDefFactory, inputs, outputs, ngContentSelectors);\n}\nfunction getComponentViewDefinitionFactory(componentFactory) {\n    return componentFactory.viewDefFactory;\n}\nvar ComponentFactory_ = /** @class */ (function (_super) {\n    tslib_1.__extends(ComponentFactory_, _super);\n    function ComponentFactory_(selector, componentType, viewDefFactory, _inputs, _outputs, ngContentSelectors) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.selector = selector;\n        _this.componentType = componentType;\n        _this._inputs = _inputs;\n        _this._outputs = _outputs;\n        _this.ngContentSelectors = ngContentSelectors;\n        _this.viewDefFactory = viewDefFactory;\n        return _this;\n    }\n    Object.defineProperty(ComponentFactory_.prototype, \"inputs\", {\n        get: function () {\n            var inputsArr = [];\n            var inputs = (this._inputs);\n            for (var propName in inputs) {\n                var templateName = inputs[propName];\n                inputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return inputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentFactory_.prototype, \"outputs\", {\n        get: function () {\n            var outputsArr = [];\n            for (var propName in this._outputs) {\n                var templateName = this._outputs[propName];\n                outputsArr.push({ propName: propName, templateName: templateName });\n            }\n            return outputsArr;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * Creates a new component.\n     */\n    /**\n       * Creates a new component.\n       */\n    ComponentFactory_.prototype.create = /**\n       * Creates a new component.\n       */\n    function (injector, projectableNodes, rootSelectorOrNode, ngModule) {\n        if (!ngModule) {\n            throw new Error('ngModule should be provided');\n        }\n        var viewDef = resolveDefinition(this.viewDefFactory);\n        var componentNodeIndex = viewDef.nodes[0].element.componentProvider.nodeIndex;\n        var view = Services.createRootView(injector, projectableNodes || [], rootSelectorOrNode, viewDef, ngModule, EMPTY_CONTEXT);\n        var component = asProviderData(view, componentNodeIndex).instance;\n        if (rootSelectorOrNode) {\n            view.renderer.setAttribute(asElementData(view, 0).renderElement, 'ng-version', VERSION.full);\n        }\n        return new ComponentRef_(view, new ViewRef_(view), component);\n    };\n    return ComponentFactory_;\n}(ComponentFactory));\nvar ComponentRef_ = /** @class */ (function (_super) {\n    tslib_1.__extends(ComponentRef_, _super);\n    function ComponentRef_(_view, _viewRef, _component) {\n        var _this = _super.call(this) || this;\n        _this._view = _view;\n        _this._viewRef = _viewRef;\n        _this._component = _component;\n        _this._elDef = _this._view.def.nodes[0];\n        _this.hostView = _viewRef;\n        _this.changeDetectorRef = _viewRef;\n        _this.instance = _component;\n        return _this;\n    }\n    Object.defineProperty(ComponentRef_.prototype, \"location\", {\n        get: function () {\n            return new ElementRef(asElementData(this._view, this._elDef.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ComponentRef_.prototype, \"componentType\", {\n        get: function () { return this._component.constructor; },\n        enumerable: true,\n        configurable: true\n    });\n    ComponentRef_.prototype.destroy = function () { this._viewRef.destroy(); };\n    ComponentRef_.prototype.onDestroy = function (callback) { this._viewRef.onDestroy(callback); };\n    return ComponentRef_;\n}(ComponentRef));\nfunction createViewContainerData(view, elDef, elData) {\n    return new ViewContainerRef_(view, elDef, elData);\n}\nvar ViewContainerRef_ = /** @class */ (function () {\n    function ViewContainerRef_(_view, _elDef, _data) {\n        this._view = _view;\n        this._elDef = _elDef;\n        this._data = _data;\n        /**\n           * @internal\n           */\n        this._embeddedViews = [];\n    }\n    Object.defineProperty(ViewContainerRef_.prototype, \"element\", {\n        get: function () { return new ElementRef(this._data.renderElement); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"injector\", {\n        get: function () { return new Injector_(this._view, this._elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewContainerRef_.prototype, \"parentInjector\", {\n        get: function () {\n            var view = this._view;\n            var elDef = this._elDef.parent;\n            while (!elDef && view) {\n                elDef = viewParentEl(view);\n                view = (view.parent);\n            }\n            return view ? new Injector_(view, elDef) : new Injector_(this._view, null);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.clear = function () {\n        var len = this._embeddedViews.length;\n        for (var i = len - 1; i >= 0; i--) {\n            var view = (detachEmbeddedView(this._data, i));\n            Services.destroyView(view);\n        }\n    };\n    ViewContainerRef_.prototype.get = function (index) {\n        var view = this._embeddedViews[index];\n        if (view) {\n            var ref = new ViewRef_(view);\n            ref.attachToViewContainerRef(this);\n            return ref;\n        }\n        return null;\n    };\n    Object.defineProperty(ViewContainerRef_.prototype, \"length\", {\n        get: function () { return this._embeddedViews.length; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewContainerRef_.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var viewRef = templateRef.createEmbeddedView(context || {});\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModuleRef) {\n        var contextInjector = injector || this.parentInjector;\n        if (!ngModuleRef && !(componentFactory instanceof ComponentFactoryBoundToModule)) {\n            ngModuleRef = contextInjector.get(NgModuleRef);\n        }\n        var componentRef = componentFactory.create(contextInjector, projectableNodes, undefined, ngModuleRef);\n        this.insert(componentRef.hostView, index);\n        return componentRef;\n    };\n    ViewContainerRef_.prototype.insert = function (viewRef, index) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot insert a destroyed View in a ViewContainer!');\n        }\n        var viewRef_ = viewRef;\n        var viewData = viewRef_._view;\n        attachEmbeddedView(this._view, this._data, index, viewData);\n        viewRef_.attachToViewContainerRef(this);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.move = function (viewRef, currentIndex) {\n        if (viewRef.destroyed) {\n            throw new Error('Cannot move a destroyed View in a ViewContainer!');\n        }\n        var previousIndex = this._embeddedViews.indexOf(viewRef._view);\n        moveEmbeddedView(this._data, previousIndex, currentIndex);\n        return viewRef;\n    };\n    ViewContainerRef_.prototype.indexOf = function (viewRef) {\n        return this._embeddedViews.indexOf(viewRef._view);\n    };\n    ViewContainerRef_.prototype.remove = function (index) {\n        var viewData = detachEmbeddedView(this._data, index);\n        if (viewData) {\n            Services.destroyView(viewData);\n        }\n    };\n    ViewContainerRef_.prototype.detach = function (index) {\n        var view = detachEmbeddedView(this._data, index);\n        return view ? new ViewRef_(view) : null;\n    };\n    return ViewContainerRef_;\n}());\nfunction createChangeDetectorRef(view) {\n    return new ViewRef_(view);\n}\nvar ViewRef_ = /** @class */ (function () {\n    function ViewRef_(_view) {\n        this._view = _view;\n        this._viewContainerRef = null;\n        this._appRef = null;\n    }\n    Object.defineProperty(ViewRef_.prototype, \"rootNodes\", {\n        get: function () { return rootRenderNodes(this._view); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"context\", {\n        get: function () { return this._view.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(ViewRef_.prototype, \"destroyed\", {\n        get: function () { return (this._view.state & 128 /* Destroyed */) !== 0; },\n        enumerable: true,\n        configurable: true\n    });\n    ViewRef_.prototype.markForCheck = function () { markParentViewsForCheck(this._view); };\n    ViewRef_.prototype.detach = function () { this._view.state &= ~4 /* Attached */; };\n    ViewRef_.prototype.detectChanges = function () {\n        var fs = this._view.root.rendererFactory;\n        if (fs.begin) {\n            fs.begin();\n        }\n        try {\n            Services.checkAndUpdateView(this._view);\n        }\n        finally {\n            if (fs.end) {\n                fs.end();\n            }\n        }\n    };\n    ViewRef_.prototype.checkNoChanges = function () { Services.checkNoChangesView(this._view); };\n    ViewRef_.prototype.reattach = function () { this._view.state |= 4 /* Attached */; };\n    ViewRef_.prototype.onDestroy = function (callback) {\n        if (!this._view.disposables) {\n            this._view.disposables = [];\n        }\n        this._view.disposables.push(callback);\n    };\n    ViewRef_.prototype.destroy = function () {\n        if (this._appRef) {\n            this._appRef.detachView(this);\n        }\n        else if (this._viewContainerRef) {\n            this._viewContainerRef.detach(this._viewContainerRef.indexOf(this));\n        }\n        Services.destroyView(this._view);\n    };\n    ViewRef_.prototype.detachFromAppRef = function () {\n        this._appRef = null;\n        renderDetachView(this._view);\n        Services.dirtyParentQueries(this._view);\n    };\n    ViewRef_.prototype.attachToAppRef = function (appRef) {\n        if (this._viewContainerRef) {\n            throw new Error('This view is already attached to a ViewContainer!');\n        }\n        this._appRef = appRef;\n    };\n    ViewRef_.prototype.attachToViewContainerRef = function (vcRef) {\n        if (this._appRef) {\n            throw new Error('This view is already attached directly to the ApplicationRef!');\n        }\n        this._viewContainerRef = vcRef;\n    };\n    return ViewRef_;\n}());\nfunction createTemplateData(view, def) {\n    return new TemplateRef_(view, def);\n}\nvar TemplateRef_ = /** @class */ (function (_super) {\n    tslib_1.__extends(TemplateRef_, _super);\n    function TemplateRef_(_parentView, _def) {\n        var _this = _super.call(this) || this;\n        _this._parentView = _parentView;\n        _this._def = _def;\n        return _this;\n    }\n    TemplateRef_.prototype.createEmbeddedView = function (context) {\n        return new ViewRef_(Services.createEmbeddedView(this._parentView, this._def, (this._def.element.template), context));\n    };\n    Object.defineProperty(TemplateRef_.prototype, \"elementRef\", {\n        get: function () {\n            return new ElementRef(asElementData(this._parentView, this._def.nodeIndex).renderElement);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    return TemplateRef_;\n}(TemplateRef));\nfunction createInjector$1(view, elDef) {\n    return new Injector_(view, elDef);\n}\nvar Injector_ = /** @class */ (function () {\n    function Injector_(view, elDef) {\n        this.view = view;\n        this.elDef = elDef;\n    }\n    Injector_.prototype.get = function (token, notFoundValue) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        var allowPrivateServices = this.elDef ? (this.elDef.flags & 33554432 /* ComponentView */) !== 0 : false;\n        return Services.resolveDep(this.view, this.elDef, allowPrivateServices, { flags: 0 /* None */, token: token, tokenKey: tokenKey(token) }, notFoundValue);\n    };\n    return Injector_;\n}());\nfunction nodeValue(view, index) {\n    var def = view.def.nodes[index];\n    if (def.flags & 1 /* TypeElement */) {\n        var elData = asElementData(view, def.nodeIndex);\n        return def.element.template ? elData.template : elData.renderElement;\n    }\n    else if (def.flags & 2 /* TypeText */) {\n        return asTextData(view, def.nodeIndex).renderText;\n    }\n    else if (def.flags & (20224 /* CatProvider */ | 16 /* TypePipe */)) {\n        return asProviderData(view, def.nodeIndex).instance;\n    }\n    throw new Error(\"Illegal state: read nodeValue for node index \" + index);\n}\nfunction createRendererV1(view) {\n    return new RendererAdapter(view.renderer);\n}\nvar RendererAdapter = /** @class */ (function () {\n    function RendererAdapter(delegate) {\n        this.delegate = delegate;\n    }\n    RendererAdapter.prototype.selectRootElement = function (selectorOrNode) {\n        return this.delegate.selectRootElement(selectorOrNode);\n    };\n    RendererAdapter.prototype.createElement = function (parent, namespaceAndName) {\n        var _a = tslib_1.__read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        var el = this.delegate.createElement(name, ns);\n        if (parent) {\n            this.delegate.appendChild(parent, el);\n        }\n        return el;\n    };\n    RendererAdapter.prototype.createViewRoot = function (hostElement) { return hostElement; };\n    RendererAdapter.prototype.createTemplateAnchor = function (parentElement) {\n        var comment = this.delegate.createComment('');\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, comment);\n        }\n        return comment;\n    };\n    RendererAdapter.prototype.createText = function (parentElement, value) {\n        var node = this.delegate.createText(value);\n        if (parentElement) {\n            this.delegate.appendChild(parentElement, node);\n        }\n        return node;\n    };\n    RendererAdapter.prototype.projectNodes = function (parentElement, nodes) {\n        for (var i = 0; i < nodes.length; i++) {\n            this.delegate.appendChild(parentElement, nodes[i]);\n        }\n    };\n    RendererAdapter.prototype.attachViewAfter = function (node, viewRootNodes) {\n        var parentElement = this.delegate.parentNode(node);\n        var nextSibling = this.delegate.nextSibling(node);\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            this.delegate.insertBefore(parentElement, viewRootNodes[i], nextSibling);\n        }\n    };\n    RendererAdapter.prototype.detachView = function (viewRootNodes) {\n        for (var i = 0; i < viewRootNodes.length; i++) {\n            var node = viewRootNodes[i];\n            var parentElement = this.delegate.parentNode(node);\n            this.delegate.removeChild(parentElement, node);\n        }\n    };\n    RendererAdapter.prototype.destroyView = function (hostElement, viewAllNodes) {\n        for (var i = 0; i < viewAllNodes.length; i++) {\n            this.delegate.destroyNode(viewAllNodes[i]);\n        }\n    };\n    RendererAdapter.prototype.listen = function (renderElement, name, callback) {\n        return this.delegate.listen(renderElement, name, callback);\n    };\n    RendererAdapter.prototype.listenGlobal = function (target, name, callback) {\n        return this.delegate.listen(target, name, callback);\n    };\n    RendererAdapter.prototype.setElementProperty = function (renderElement, propertyName, propertyValue) {\n        this.delegate.setProperty(renderElement, propertyName, propertyValue);\n    };\n    RendererAdapter.prototype.setElementAttribute = function (renderElement, namespaceAndName, attributeValue) {\n        var _a = tslib_1.__read(splitNamespace(namespaceAndName), 2), ns = _a[0], name = _a[1];\n        if (attributeValue != null) {\n            this.delegate.setAttribute(renderElement, name, attributeValue, ns);\n        }\n        else {\n            this.delegate.removeAttribute(renderElement, name, ns);\n        }\n    };\n    RendererAdapter.prototype.setBindingDebugInfo = function (renderElement, propertyName, propertyValue) { };\n    RendererAdapter.prototype.setElementClass = function (renderElement, className, isAdd) {\n        if (isAdd) {\n            this.delegate.addClass(renderElement, className);\n        }\n        else {\n            this.delegate.removeClass(renderElement, className);\n        }\n    };\n    RendererAdapter.prototype.setElementStyle = function (renderElement, styleName, styleValue) {\n        if (styleValue != null) {\n            this.delegate.setStyle(renderElement, styleName, styleValue);\n        }\n        else {\n            this.delegate.removeStyle(renderElement, styleName);\n        }\n    };\n    RendererAdapter.prototype.invokeElementMethod = function (renderElement, methodName, args) {\n        renderElement[methodName].apply(renderElement, args);\n    };\n    RendererAdapter.prototype.setText = function (renderNode$$1, text) { this.delegate.setValue(renderNode$$1, text); };\n    RendererAdapter.prototype.animate = function () { throw new Error('Renderer.animate is no longer supported!'); };\n    return RendererAdapter;\n}());\nfunction createNgModuleRef(moduleType, parent, bootstrapComponents, def) {\n    return new NgModuleRef_(moduleType, parent, bootstrapComponents, def);\n}\nvar NgModuleRef_ = /** @class */ (function () {\n    function NgModuleRef_(_moduleType, _parent, _bootstrapComponents, _def) {\n        this._moduleType = _moduleType;\n        this._parent = _parent;\n        this._bootstrapComponents = _bootstrapComponents;\n        this._def = _def;\n        this._destroyListeners = [];\n        this._destroyed = false;\n        this.injector = this;\n        initNgModule(this);\n    }\n    NgModuleRef_.prototype.get = function (token, notFoundValue, injectFlags) {\n        if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n        if (injectFlags === void 0) { injectFlags = 0 /* Default */; }\n        var flags = 0;\n        if (injectFlags & 1 /* SkipSelf */) {\n            flags |= 1 /* SkipSelf */;\n        }\n        else if (injectFlags & 2 /* Self */) {\n            flags |= 4 /* Self */;\n        }\n        return resolveNgModuleDep(this, { token: token, tokenKey: tokenKey(token), flags: flags }, notFoundValue);\n    };\n    Object.defineProperty(NgModuleRef_.prototype, \"instance\", {\n        get: function () { return this.get(this._moduleType); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(NgModuleRef_.prototype, \"componentFactoryResolver\", {\n        get: function () { return this.get(ComponentFactoryResolver); },\n        enumerable: true,\n        configurable: true\n    });\n    NgModuleRef_.prototype.destroy = function () {\n        if (this._destroyed) {\n            throw new Error(\"The ng module \" + stringify(this.instance.constructor) + \" has already been destroyed.\");\n        }\n        this._destroyed = true;\n        callNgModuleLifecycle(this, 131072 /* OnDestroy */);\n        this._destroyListeners.forEach(function (listener) { return listener(); });\n    };\n    NgModuleRef_.prototype.onDestroy = function (callback) { this._destroyListeners.push(callback); };\n    return NgModuleRef_;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar RendererV1TokenKey = tokenKey(Renderer);\nvar Renderer2TokenKey = tokenKey(Renderer2);\nvar ElementRefTokenKey = tokenKey(ElementRef);\nvar ViewContainerRefTokenKey = tokenKey(ViewContainerRef);\nvar TemplateRefTokenKey = tokenKey(TemplateRef);\nvar ChangeDetectorRefTokenKey = tokenKey(ChangeDetectorRef);\nvar InjectorRefTokenKey = tokenKey(Injector);\nvar INJECTORRefTokenKey = tokenKey(INJECTOR);\nfunction directiveDef(checkIndex, flags, matchedQueries, childCount, ctor, deps, props, outputs) {\n    var bindings = [];\n    if (props) {\n        for (var prop in props) {\n            var _a = tslib_1.__read(props[prop], 2), bindingIndex = _a[0], nonMinifiedName = _a[1];\n            bindings[bindingIndex] = {\n                flags: 8 /* TypeProperty */,\n                name: prop, nonMinifiedName: nonMinifiedName,\n                ns: null,\n                securityContext: null,\n                suffix: null\n            };\n        }\n    }\n    var outputDefs = [];\n    if (outputs) {\n        for (var propName in outputs) {\n            outputDefs.push({ type: 1 /* DirectiveOutput */, propName: propName, target: null, eventName: outputs[propName] });\n        }\n    }\n    flags |= 16384 /* TypeDirective */;\n    return _def(checkIndex, flags, matchedQueries, childCount, ctor, ctor, deps, bindings, outputDefs);\n}\nfunction pipeDef(flags, ctor, deps) {\n    flags |= 16 /* TypePipe */;\n    return _def(-1, flags, null, 0, ctor, ctor, deps);\n}\nfunction providerDef(flags, matchedQueries, token, value, deps) {\n    return _def(-1, flags, matchedQueries, 0, token, value, deps);\n}\nfunction _def(checkIndex, flags, matchedQueriesDsl, childCount, token, value, deps, bindings, outputs) {\n    var _a = splitMatchedQueriesDsl(matchedQueriesDsl), matchedQueries = _a.matchedQueries, references = _a.references, matchedQueryIds = _a.matchedQueryIds;\n    if (!outputs) {\n        outputs = [];\n    }\n    if (!bindings) {\n        bindings = [];\n    }\n    // Need to resolve forwardRefs as e.g. for `useValue` we\n    // lowered the expression and then stopped evaluating it,\n    // i.e. also didn't unwrap it.\n    value = resolveForwardRef(value);\n    var depDefs = splitDepsDsl(deps, stringify(token));\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0, matchedQueries: matchedQueries, matchedQueryIds: matchedQueryIds, references: references,\n        ngContentIndex: -1, childCount: childCount, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings), outputs: outputs,\n        element: null,\n        provider: { token: token, value: value, deps: depDefs },\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createProviderInstance(view, def) {\n    return _createProviderInstance(view, def);\n}\nfunction createPipeInstance(view, def) {\n    // deps are looked up from component.\n    var compView = view;\n    while (compView.parent && !isComponentView(compView)) {\n        compView = compView.parent;\n    }\n    // pipes can see the private services of the component\n    var allowPrivateServices = true;\n    // pipes are always eager and classes!\n    return createClass((compView.parent), (viewParentEl(compView)), allowPrivateServices, def.provider.value, def.provider.deps);\n}\nfunction createDirectiveInstance(view, def) {\n    // components can see other private services, other directives can't.\n    var allowPrivateServices = (def.flags & 32768 /* Component */) > 0;\n    // directives are always eager and classes!\n    var instance = createClass(view, (def.parent), allowPrivateServices, def.provider.value, def.provider.deps);\n    if (def.outputs.length) {\n        for (var i = 0; i < def.outputs.length; i++) {\n            var output = def.outputs[i];\n            var subscription = instance[output.propName].subscribe(eventHandlerClosure(view, def.parent.nodeIndex, output.eventName));\n            view.disposables[def.outputIndex + i] = subscription.unsubscribe.bind(subscription);\n        }\n    }\n    return instance;\n}\nfunction eventHandlerClosure(view, index, eventName) {\n    return function (event) { return dispatchEvent(view, index, eventName, event); };\n}\nfunction checkAndUpdateDirectiveInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = (undefined);\n    var bindLen = def.bindings.length;\n    if (bindLen > 0 && checkBinding(view, def, 0, v0)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 0, v0, changes);\n    }\n    if (bindLen > 1 && checkBinding(view, def, 1, v1)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 1, v1, changes);\n    }\n    if (bindLen > 2 && checkBinding(view, def, 2, v2)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 2, v2, changes);\n    }\n    if (bindLen > 3 && checkBinding(view, def, 3, v3)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 3, v3, changes);\n    }\n    if (bindLen > 4 && checkBinding(view, def, 4, v4)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 4, v4, changes);\n    }\n    if (bindLen > 5 && checkBinding(view, def, 5, v5)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 5, v5, changes);\n    }\n    if (bindLen > 6 && checkBinding(view, def, 6, v6)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 6, v6, changes);\n    }\n    if (bindLen > 7 && checkBinding(view, def, 7, v7)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 7, v7, changes);\n    }\n    if (bindLen > 8 && checkBinding(view, def, 8, v8)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 8, v8, changes);\n    }\n    if (bindLen > 9 && checkBinding(view, def, 9, v9)) {\n        changed = true;\n        changes = updateProp(view, providerData, def, 9, v9, changes);\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction checkAndUpdateDirectiveDynamic(view, def, values) {\n    var providerData = asProviderData(view, def.nodeIndex);\n    var directive = providerData.instance;\n    var changed = false;\n    var changes = (undefined);\n    for (var i = 0; i < values.length; i++) {\n        if (checkBinding(view, def, i, values[i])) {\n            changed = true;\n            changes = updateProp(view, providerData, def, i, values[i], changes);\n        }\n    }\n    if (changes) {\n        directive.ngOnChanges(changes);\n    }\n    if ((def.flags & 65536 /* OnInit */) &&\n        shouldCallLifecycleInitHook(view, 256 /* InitState_CallingOnInit */, def.nodeIndex)) {\n        directive.ngOnInit();\n    }\n    if (def.flags & 262144 /* DoCheck */) {\n        directive.ngDoCheck();\n    }\n    return changed;\n}\nfunction _createProviderInstance(view, def) {\n    // private services can see other private services\n    var allowPrivateServices = (def.flags & 8192 /* PrivateProvider */) > 0;\n    var providerDef = def.provider;\n    switch (def.flags & 201347067 /* Types */) {\n        case 512 /* TypeClassProvider */:\n            return createClass(view, (def.parent), allowPrivateServices, providerDef.value, providerDef.deps);\n        case 1024 /* TypeFactoryProvider */:\n            return callFactory(view, (def.parent), allowPrivateServices, providerDef.value, providerDef.deps);\n        case 2048 /* TypeUseExistingProvider */:\n            return resolveDep(view, (def.parent), allowPrivateServices, providerDef.deps[0]);\n        case 256 /* TypeValueProvider */:\n            return providerDef.value;\n    }\n}\nfunction createClass(view, elDef, allowPrivateServices, ctor, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return new ctor();\n        case 1:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return new ctor(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = new Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return new (ctor.bind.apply(ctor, tslib_1.__spread([void 0], depValues)))();\n    }\n}\nfunction callFactory(view, elDef, allowPrivateServices, factory, deps) {\n    var len = deps.length;\n    switch (len) {\n        case 0:\n            return factory();\n        case 1:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]));\n        case 2:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]));\n        case 3:\n            return factory(resolveDep(view, elDef, allowPrivateServices, deps[0]), resolveDep(view, elDef, allowPrivateServices, deps[1]), resolveDep(view, elDef, allowPrivateServices, deps[2]));\n        default:\n            var depValues = Array(len);\n            for (var i = 0; i < len; i++) {\n                depValues[i] = resolveDep(view, elDef, allowPrivateServices, deps[i]);\n            }\n            return factory.apply(void 0, tslib_1.__spread(depValues));\n    }\n}\n// This default value is when checking the hierarchy for a token.\n//\n// It means both:\n// - the token is not provided by the current injector,\n// - only the element injectors should be checked (ie do not check module injectors\n//\n//          mod1\n//         /\n//       el1   mod2\n//         \\  /\n//         el2\n//\n// When requesting el2.injector.get(token), we should check in the following order and return the\n// first found value:\n// - el2.injector.get(token, default)\n// - el1.injector.get(token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) -> do not check the module\n// - mod2.injector.get(token, default)\nvar NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = {};\nfunction resolveDep(view, elDef, allowPrivateServices, depDef, notFoundValue) {\n    if (notFoundValue === void 0) { notFoundValue = Injector.THROW_IF_NOT_FOUND; }\n    if (depDef.flags & 8 /* Value */) {\n        return depDef.token;\n    }\n    var startView = view;\n    if (depDef.flags & 2 /* Optional */) {\n        notFoundValue = null;\n    }\n    var tokenKey$$1 = depDef.tokenKey;\n    if (tokenKey$$1 === ChangeDetectorRefTokenKey) {\n        // directives on the same element as a component should be able to control the change detector\n        // of that component as well.\n        allowPrivateServices = !!(elDef && elDef.element.componentView);\n    }\n    if (elDef && (depDef.flags & 1 /* SkipSelf */)) {\n        allowPrivateServices = false;\n        elDef = (elDef.parent);\n    }\n    var searchView = view;\n    while (searchView) {\n        if (elDef) {\n            switch (tokenKey$$1) {\n                case RendererV1TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createRendererV1(compView);\n                }\n                case Renderer2TokenKey: {\n                    var compView = findCompView(searchView, elDef, allowPrivateServices);\n                    return compView.renderer;\n                }\n                case ElementRefTokenKey:\n                    return new ElementRef(asElementData(searchView, elDef.nodeIndex).renderElement);\n                case ViewContainerRefTokenKey:\n                    return asElementData(searchView, elDef.nodeIndex).viewContainer;\n                case TemplateRefTokenKey: {\n                    if (elDef.element.template) {\n                        return asElementData(searchView, elDef.nodeIndex).template;\n                    }\n                    break;\n                }\n                case ChangeDetectorRefTokenKey: {\n                    var cdView = findCompView(searchView, elDef, allowPrivateServices);\n                    return createChangeDetectorRef(cdView);\n                }\n                case InjectorRefTokenKey:\n                case INJECTORRefTokenKey:\n                    return createInjector$1(searchView, elDef);\n                default:\n                    var providerDef_1 = (allowPrivateServices ? elDef.element.allProviders :\n                        elDef.element.publicProviders)[tokenKey$$1];\n                    if (providerDef_1) {\n                        var providerData = asProviderData(searchView, providerDef_1.nodeIndex);\n                        if (!providerData) {\n                            providerData = { instance: _createProviderInstance(searchView, providerDef_1) };\n                            searchView.nodes[providerDef_1.nodeIndex] = providerData;\n                        }\n                        return providerData.instance;\n                    }\n            }\n        }\n        allowPrivateServices = isComponentView(searchView);\n        elDef = (viewParentEl(searchView));\n        searchView = (searchView.parent);\n        if (depDef.flags & 4 /* Self */) {\n            searchView = null;\n        }\n    }\n    var value = startView.root.injector.get(depDef.token, NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR);\n    if (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR ||\n        notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR) {\n        // Return the value from the root element injector when\n        // - it provides it\n        //   (value !== NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        // - the module injector should not be checked\n        //   (notFoundValue === NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR)\n        return value;\n    }\n    return startView.root.ngModule.injector.get(depDef.token, notFoundValue);\n}\nfunction findCompView(view, elDef, allowPrivateServices) {\n    var compView;\n    if (allowPrivateServices) {\n        compView = asElementData(view, elDef.nodeIndex).componentView;\n    }\n    else {\n        compView = view;\n        while (compView.parent && !isComponentView(compView)) {\n            compView = compView.parent;\n        }\n    }\n    return compView;\n}\nfunction updateProp(view, providerData, def, bindingIdx, value, changes) {\n    if (def.flags & 32768 /* Component */) {\n        var compView = asElementData(view, def.parent.nodeIndex).componentView;\n        if (compView.def.flags & 2 /* OnPush */) {\n            compView.state |= 8 /* ChecksEnabled */;\n        }\n    }\n    var binding = def.bindings[bindingIdx];\n    var propName = (binding.name);\n    // Note: This is still safe with Closure Compiler as\n    // the user passed in the property name as an object has to `providerDef`,\n    // so Closure Compiler will have renamed the property correctly already.\n    providerData.instance[propName] = value;\n    if (def.flags & 524288 /* OnChanges */) {\n        changes = changes || {};\n        var oldValue = WrappedValue.unwrap(view.oldValues[def.bindingIndex + bindingIdx]);\n        var binding_1 = def.bindings[bindingIdx];\n        changes[binding_1.nonMinifiedName] =\n            new SimpleChange(oldValue, value, (view.state & 2 /* FirstCheck */) !== 0);\n    }\n    view.oldValues[def.bindingIndex + bindingIdx] = value;\n    return changes;\n}\n// This function calls the ngAfterContentCheck, ngAfterContentInit,\n// ngAfterViewCheck, and ngAfterViewInit lifecycle hooks (depending on the node\n// flags in lifecycle). Unlike ngDoCheck, ngOnChanges and ngOnInit, which are\n// called during a pre-order traversal of the view tree (that is calling the\n// parent hooks before the child hooks) these events are sent in using a\n// post-order traversal of the tree (children before parents). This changes the\n// meaning of initIndex in the view state. For ngOnInit, initIndex tracks the\n// expected nodeIndex which a ngOnInit should be called. When sending\n// ngAfterContentInit and ngAfterViewInit it is the expected count of\n// ngAfterContentInit or ngAfterViewInit methods that have been called. This\n// ensure that despite being called recursively or after picking up after an\n// exception, the ngAfterContentInit or ngAfterViewInit will be called on the\n// correct nodes. Consider for example, the following (where E is an element\n// and D is a directive)\n//  Tree:       pre-order index  post-order index\n//    E1        0                6\n//      E2      1                1\n//       D3     2                0\n//      E4      3                5\n//       E5     4                4\n//        E6    5                2\n//        E7    6                3\n// As can be seen, the post-order index has an unclear relationship to the\n// pre-order index (postOrderIndex === preOrderIndex - parentCount +\n// childCount). Since number of calls to ngAfterContentInit and ngAfterViewInit\n// are stable (will be the same for the same view regardless of exceptions or\n// recursion) we just need to count them which will roughly correspond to the\n// post-order index (it skips elements and directives that do not have\n// lifecycle hooks).\n//\n// For example, if an exception is raised in the E6.onAfterViewInit() the\n// initIndex is left at 3 (by shouldCallLifecycleInitHook() which set it to\n// initIndex + 1). When checkAndUpdateView() is called again D3, E2 and E6 will\n// not have their ngAfterViewInit() called but, starting with E7, the rest of\n// the view will begin getting ngAfterViewInit() called until a check and\n// pass is complete.\n//\n// This algorthim also handles recursion. Consider if E4's ngAfterViewInit()\n// indirectly calls E1's ChangeDetectorRef.detectChanges(). The expected\n// initIndex is set to 6, the recusive checkAndUpdateView() starts walk again.\n// D3, E2, E6, E7, E5 and E4 are skipped, ngAfterViewInit() is called on E1.\n// When the recursion returns the initIndex will be 7 so E1 is skipped as it\n// has already been called in the recursively called checkAnUpdateView().\nfunction callLifecycleHooksChildrenFirst(view, lifecycles) {\n    if (!(view.def.nodeFlags & lifecycles)) {\n        return;\n    }\n    var nodes = view.def.nodes;\n    var initIndex = 0;\n    for (var i = 0; i < nodes.length; i++) {\n        var nodeDef = nodes[i];\n        var parent_1 = nodeDef.parent;\n        if (!parent_1 && nodeDef.flags & lifecycles) {\n            // matching root node (e.g. a pipe)\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        if ((nodeDef.childFlags & lifecycles) === 0) {\n            // no child matches one of the lifecycles\n            i += nodeDef.childCount;\n        }\n        while (parent_1 && (parent_1.flags & 1 /* TypeElement */) &&\n            i === parent_1.nodeIndex + parent_1.childCount) {\n            // last child of an element\n            if (parent_1.directChildFlags & lifecycles) {\n                initIndex = callElementProvidersLifecycles(view, parent_1, lifecycles, initIndex);\n            }\n            parent_1 = parent_1.parent;\n        }\n    }\n}\nfunction callElementProvidersLifecycles(view, elDef, lifecycles, initIndex) {\n    for (var i = elDef.nodeIndex + 1; i <= elDef.nodeIndex + elDef.childCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & lifecycles) {\n            callProviderLifecycles(view, i, nodeDef.flags & lifecycles, initIndex++);\n        }\n        // only visit direct children\n        i += nodeDef.childCount;\n    }\n    return initIndex;\n}\nfunction callProviderLifecycles(view, index, lifecycles, initIndex) {\n    var providerData = asProviderData(view, index);\n    if (!providerData) {\n        return;\n    }\n    var provider = providerData.instance;\n    if (!provider) {\n        return;\n    }\n    Services.setCurrentNode(view, index);\n    if (lifecycles & 1048576 /* AfterContentInit */ &&\n        shouldCallLifecycleInitHook(view, 512 /* InitState_CallingAfterContentInit */, initIndex)) {\n        provider.ngAfterContentInit();\n    }\n    if (lifecycles & 2097152 /* AfterContentChecked */) {\n        provider.ngAfterContentChecked();\n    }\n    if (lifecycles & 4194304 /* AfterViewInit */ &&\n        shouldCallLifecycleInitHook(view, 768 /* InitState_CallingAfterViewInit */, initIndex)) {\n        provider.ngAfterViewInit();\n    }\n    if (lifecycles & 8388608 /* AfterViewChecked */) {\n        provider.ngAfterViewChecked();\n    }\n    if (lifecycles & 131072 /* OnDestroy */) {\n        provider.ngOnDestroy();\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction queryDef(flags, id, bindings) {\n    var bindingDefs = [];\n    for (var propName in bindings) {\n        var bindingType = bindings[propName];\n        bindingDefs.push({ propName: propName, bindingType: bindingType });\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        // TODO(vicb): check\n        checkIndex: -1, flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        ngContentIndex: -1,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: { id: id, filterId: filterQueryId(id), bindings: bindingDefs },\n        ngContent: null\n    };\n}\nfunction createQuery() {\n    return new QueryList();\n}\nfunction dirtyParentQueries(view) {\n    var queryIds = view.def.nodeMatchedQueries;\n    while (view.parent && isEmbeddedView(view)) {\n        var tplDef = (view.parentNodeDef);\n        view = view.parent;\n        // content queries\n        var end = tplDef.nodeIndex + tplDef.childCount;\n        for (var i = 0; i <= end; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 67108864 /* TypeContentQuery */) &&\n                (nodeDef.flags & 536870912 /* DynamicQuery */) &&\n                (nodeDef.query.filterId & queryIds) === nodeDef.query.filterId) {\n                asQueryList(view, i).setDirty();\n            }\n            if ((nodeDef.flags & 1 /* TypeElement */ && i + nodeDef.childCount < tplDef.nodeIndex) ||\n                !(nodeDef.childFlags & 67108864 /* TypeContentQuery */) ||\n                !(nodeDef.childFlags & 536870912 /* DynamicQuery */)) {\n                // skip elements that don't contain the template element or no query.\n                i += nodeDef.childCount;\n            }\n        }\n    }\n    // view queries\n    if (view.def.nodeFlags & 134217728 /* TypeViewQuery */) {\n        for (var i = 0; i < view.def.nodes.length; i++) {\n            var nodeDef = view.def.nodes[i];\n            if ((nodeDef.flags & 134217728 /* TypeViewQuery */) && (nodeDef.flags & 536870912 /* DynamicQuery */)) {\n                asQueryList(view, i).setDirty();\n            }\n            // only visit the root nodes\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (!queryList.dirty) {\n        return;\n    }\n    var directiveInstance;\n    var newValues = (undefined);\n    if (nodeDef.flags & 67108864 /* TypeContentQuery */) {\n        var elementDef = (nodeDef.parent.parent);\n        newValues = calcQueryValues(view, elementDef.nodeIndex, elementDef.nodeIndex + elementDef.childCount, (nodeDef.query), []);\n        directiveInstance = asProviderData(view, nodeDef.parent.nodeIndex).instance;\n    }\n    else if (nodeDef.flags & 134217728 /* TypeViewQuery */) {\n        newValues = calcQueryValues(view, 0, view.def.nodes.length - 1, (nodeDef.query), []);\n        directiveInstance = view.component;\n    }\n    queryList.reset(newValues);\n    var bindings = nodeDef.query.bindings;\n    var notify = false;\n    for (var i = 0; i < bindings.length; i++) {\n        var binding = bindings[i];\n        var boundValue = void 0;\n        switch (binding.bindingType) {\n            case 0 /* First */:\n                boundValue = queryList.first;\n                break;\n            case 1 /* All */:\n                boundValue = queryList;\n                notify = true;\n                break;\n        }\n        directiveInstance[binding.propName] = boundValue;\n    }\n    if (notify) {\n        queryList.notifyOnChanges();\n    }\n}\nfunction calcQueryValues(view, startIndex, endIndex, queryDef, values) {\n    for (var i = startIndex; i <= endIndex; i++) {\n        var nodeDef = view.def.nodes[i];\n        var valueType = nodeDef.matchedQueries[queryDef.id];\n        if (valueType != null) {\n            values.push(getQueryValue(view, nodeDef, valueType));\n        }\n        if (nodeDef.flags & 1 /* TypeElement */ && nodeDef.element.template &&\n            (nodeDef.element.template.nodeMatchedQueries & queryDef.filterId) ===\n                queryDef.filterId) {\n            var elementData = asElementData(view, i);\n            // check embedded views that were attached at the place of their template,\n            // but process child nodes first if some match the query (see issue #16568)\n            if ((nodeDef.childMatchedQueries & queryDef.filterId) === queryDef.filterId) {\n                calcQueryValues(view, i + 1, i + nodeDef.childCount, queryDef, values);\n                i += nodeDef.childCount;\n            }\n            if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                var embeddedViews = elementData.viewContainer._embeddedViews;\n                for (var k = 0; k < embeddedViews.length; k++) {\n                    var embeddedView = embeddedViews[k];\n                    var dvc = declaredViewContainer(embeddedView);\n                    if (dvc && dvc === elementData) {\n                        calcQueryValues(embeddedView, 0, embeddedView.def.nodes.length - 1, queryDef, values);\n                    }\n                }\n            }\n            var projectedViews = elementData.template._projectedViews;\n            if (projectedViews) {\n                for (var k = 0; k < projectedViews.length; k++) {\n                    var projectedView = projectedViews[k];\n                    calcQueryValues(projectedView, 0, projectedView.def.nodes.length - 1, queryDef, values);\n                }\n            }\n        }\n        if ((nodeDef.childMatchedQueries & queryDef.filterId) !== queryDef.filterId) {\n            // if no child matches the query, skip the children.\n            i += nodeDef.childCount;\n        }\n    }\n    return values;\n}\nfunction getQueryValue(view, nodeDef, queryValueType) {\n    if (queryValueType != null) {\n        // a match\n        switch (queryValueType) {\n            case 1 /* RenderElement */:\n                return asElementData(view, nodeDef.nodeIndex).renderElement;\n            case 0 /* ElementRef */:\n                return new ElementRef(asElementData(view, nodeDef.nodeIndex).renderElement);\n            case 2 /* TemplateRef */:\n                return asElementData(view, nodeDef.nodeIndex).template;\n            case 3 /* ViewContainerRef */:\n                return asElementData(view, nodeDef.nodeIndex).viewContainer;\n            case 4 /* Provider */:\n                return asProviderData(view, nodeDef.nodeIndex).instance;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction ngContentDef(ngContentIndex, index) {\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: -1,\n        flags: 8 /* TypeNgContent */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0,\n        bindings: [],\n        bindingFlags: 0,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: { index: index }\n    };\n}\nfunction appendNgContent(view, renderHost, def) {\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (!parentEl) {\n        // Nothing to do if there is no parent element.\n        return;\n    }\n    var ngContentIndex = def.ngContent.index;\n    visitProjectedRenderNodes(view, ngContentIndex, 1 /* AppendChild */, parentEl, null, undefined);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction purePipeDef(checkIndex, argCount) {\n    // argCount + 1 to include the pipe as first arg\n    return _pureExpressionDef(128 /* TypePurePipe */, checkIndex, new Array(argCount + 1));\n}\nfunction pureArrayDef(checkIndex, argCount) {\n    return _pureExpressionDef(32 /* TypePureArray */, checkIndex, new Array(argCount));\n}\nfunction pureObjectDef(checkIndex, propToIndex) {\n    var keys = Object.keys(propToIndex);\n    var nbKeys = keys.length;\n    var propertyNames = new Array(nbKeys);\n    for (var i = 0; i < nbKeys; i++) {\n        var key = keys[i];\n        var index = propToIndex[key];\n        propertyNames[index] = key;\n    }\n    return _pureExpressionDef(64 /* TypePureObject */, checkIndex, propertyNames);\n}\nfunction _pureExpressionDef(flags, checkIndex, propertyNames) {\n    var bindings = new Array(propertyNames.length);\n    for (var i = 0; i < propertyNames.length; i++) {\n        var prop = propertyNames[i];\n        bindings[i] = {\n            flags: 8 /* TypeProperty */,\n            name: prop,\n            ns: null,\n            nonMinifiedName: prop,\n            securityContext: null,\n            suffix: null\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: flags,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {},\n        ngContentIndex: -1,\n        childCount: 0, bindings: bindings,\n        bindingFlags: calcBindingFlags(bindings),\n        outputs: [],\n        element: null,\n        provider: null,\n        text: null,\n        query: null,\n        ngContent: null\n    };\n}\nfunction createPureExpression(view, def) {\n    return { value: undefined };\n}\nfunction checkAndUpdatePureExpressionInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindings = def.bindings;\n    var changed = false;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = new Array(bindings.length);\n                if (bindLen > 0)\n                    value[0] = v0;\n                if (bindLen > 1)\n                    value[1] = v1;\n                if (bindLen > 2)\n                    value[2] = v2;\n                if (bindLen > 3)\n                    value[3] = v3;\n                if (bindLen > 4)\n                    value[4] = v4;\n                if (bindLen > 5)\n                    value[5] = v5;\n                if (bindLen > 6)\n                    value[6] = v6;\n                if (bindLen > 7)\n                    value[7] = v7;\n                if (bindLen > 8)\n                    value[8] = v8;\n                if (bindLen > 9)\n                    value[9] = v9;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                if (bindLen > 0)\n                    value[bindings[0].name] = v0;\n                if (bindLen > 1)\n                    value[bindings[1].name] = v1;\n                if (bindLen > 2)\n                    value[bindings[2].name] = v2;\n                if (bindLen > 3)\n                    value[bindings[3].name] = v3;\n                if (bindLen > 4)\n                    value[bindings[4].name] = v4;\n                if (bindLen > 5)\n                    value[bindings[5].name] = v5;\n                if (bindLen > 6)\n                    value[bindings[6].name] = v6;\n                if (bindLen > 7)\n                    value[bindings[7].name] = v7;\n                if (bindLen > 8)\n                    value[bindings[8].name] = v8;\n                if (bindLen > 9)\n                    value[bindings[9].name] = v9;\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = v0;\n                switch (bindLen) {\n                    case 1:\n                        value = pipe.transform(v0);\n                        break;\n                    case 2:\n                        value = pipe.transform(v1);\n                        break;\n                    case 3:\n                        value = pipe.transform(v1, v2);\n                        break;\n                    case 4:\n                        value = pipe.transform(v1, v2, v3);\n                        break;\n                    case 5:\n                        value = pipe.transform(v1, v2, v3, v4);\n                        break;\n                    case 6:\n                        value = pipe.transform(v1, v2, v3, v4, v5);\n                        break;\n                    case 7:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6);\n                        break;\n                    case 8:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7);\n                        break;\n                    case 9:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8);\n                        break;\n                    case 10:\n                        value = pipe.transform(v1, v2, v3, v4, v5, v6, v7, v8, v9);\n                        break;\n                }\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\nfunction checkAndUpdatePureExpressionDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var data = asPureExpressionData(view, def.nodeIndex);\n        var value = void 0;\n        switch (def.flags & 201347067 /* Types */) {\n            case 32 /* TypePureArray */:\n                value = values;\n                break;\n            case 64 /* TypePureObject */:\n                value = {};\n                for (var i = 0; i < values.length; i++) {\n                    value[bindings[i].name] = values[i];\n                }\n                break;\n            case 128 /* TypePurePipe */:\n                var pipe = values[0];\n                var params = values.slice(1);\n                value = pipe.transform.apply(pipe, tslib_1.__spread(params));\n                break;\n        }\n        data.value = value;\n    }\n    return changed;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction textDef(checkIndex, ngContentIndex, staticText) {\n    var bindings = new Array(staticText.length - 1);\n    for (var i = 1; i < staticText.length; i++) {\n        bindings[i - 1] = {\n            flags: 8 /* TypeProperty */,\n            name: null,\n            ns: null,\n            nonMinifiedName: null,\n            securityContext: null,\n            suffix: staticText[i],\n        };\n    }\n    return {\n        // will bet set by the view definition\n        nodeIndex: -1,\n        parent: null,\n        renderParent: null,\n        bindingIndex: -1,\n        outputIndex: -1,\n        // regular values\n        checkIndex: checkIndex,\n        flags: 2 /* TypeText */,\n        childFlags: 0,\n        directChildFlags: 0,\n        childMatchedQueries: 0,\n        matchedQueries: {},\n        matchedQueryIds: 0,\n        references: {}, ngContentIndex: ngContentIndex,\n        childCount: 0, bindings: bindings,\n        bindingFlags: 8 /* TypeProperty */,\n        outputs: [],\n        element: null,\n        provider: null,\n        text: { prefix: staticText[0] },\n        query: null,\n        ngContent: null,\n    };\n}\nfunction createText(view, renderHost, def) {\n    var renderNode$$1;\n    var renderer = view.renderer;\n    renderNode$$1 = renderer.createText(def.text.prefix);\n    var parentEl = getParentRenderElement(view, renderHost, def);\n    if (parentEl) {\n        renderer.appendChild(parentEl, renderNode$$1);\n    }\n    return { renderText: renderNode$$1 };\n}\nfunction checkAndUpdateTextInline(view, def, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var changed = false;\n    var bindings = def.bindings;\n    var bindLen = bindings.length;\n    if (bindLen > 0 && checkAndUpdateBinding(view, def, 0, v0))\n        changed = true;\n    if (bindLen > 1 && checkAndUpdateBinding(view, def, 1, v1))\n        changed = true;\n    if (bindLen > 2 && checkAndUpdateBinding(view, def, 2, v2))\n        changed = true;\n    if (bindLen > 3 && checkAndUpdateBinding(view, def, 3, v3))\n        changed = true;\n    if (bindLen > 4 && checkAndUpdateBinding(view, def, 4, v4))\n        changed = true;\n    if (bindLen > 5 && checkAndUpdateBinding(view, def, 5, v5))\n        changed = true;\n    if (bindLen > 6 && checkAndUpdateBinding(view, def, 6, v6))\n        changed = true;\n    if (bindLen > 7 && checkAndUpdateBinding(view, def, 7, v7))\n        changed = true;\n    if (bindLen > 8 && checkAndUpdateBinding(view, def, 8, v8))\n        changed = true;\n    if (bindLen > 9 && checkAndUpdateBinding(view, def, 9, v9))\n        changed = true;\n    if (changed) {\n        var value = def.text.prefix;\n        if (bindLen > 0)\n            value += _addInterpolationPart(v0, bindings[0]);\n        if (bindLen > 1)\n            value += _addInterpolationPart(v1, bindings[1]);\n        if (bindLen > 2)\n            value += _addInterpolationPart(v2, bindings[2]);\n        if (bindLen > 3)\n            value += _addInterpolationPart(v3, bindings[3]);\n        if (bindLen > 4)\n            value += _addInterpolationPart(v4, bindings[4]);\n        if (bindLen > 5)\n            value += _addInterpolationPart(v5, bindings[5]);\n        if (bindLen > 6)\n            value += _addInterpolationPart(v6, bindings[6]);\n        if (bindLen > 7)\n            value += _addInterpolationPart(v7, bindings[7]);\n        if (bindLen > 8)\n            value += _addInterpolationPart(v8, bindings[8]);\n        if (bindLen > 9)\n            value += _addInterpolationPart(v9, bindings[9]);\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction checkAndUpdateTextDynamic(view, def, values) {\n    var bindings = def.bindings;\n    var changed = false;\n    for (var i = 0; i < values.length; i++) {\n        // Note: We need to loop over all values, so that\n        // the old values are updates as well!\n        if (checkAndUpdateBinding(view, def, i, values[i])) {\n            changed = true;\n        }\n    }\n    if (changed) {\n        var value = '';\n        for (var i = 0; i < values.length; i++) {\n            value = value + _addInterpolationPart(values[i], bindings[i]);\n        }\n        value = def.text.prefix + value;\n        var renderNode$$1 = asTextData(view, def.nodeIndex).renderText;\n        view.renderer.setValue(renderNode$$1, value);\n    }\n    return changed;\n}\nfunction _addInterpolationPart(value, binding) {\n    var valueStr = value != null ? value.toString() : '';\n    return valueStr + binding.suffix;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction viewDef(flags, nodes, updateDirectives, updateRenderer) {\n    // clone nodes and set auto calculated values\n    var viewBindingCount = 0;\n    var viewDisposableCount = 0;\n    var viewNodeFlags = 0;\n    var viewRootNodeFlags = 0;\n    var viewMatchedQueries = 0;\n    var currentParent = null;\n    var currentRenderParent = null;\n    var currentElementHasPublicProviders = false;\n    var currentElementHasPrivateProviders = false;\n    var lastRenderRootNode = null;\n    for (var i = 0; i < nodes.length; i++) {\n        var node = nodes[i];\n        node.nodeIndex = i;\n        node.parent = currentParent;\n        node.bindingIndex = viewBindingCount;\n        node.outputIndex = viewDisposableCount;\n        node.renderParent = currentRenderParent;\n        viewNodeFlags |= node.flags;\n        viewMatchedQueries |= node.matchedQueryIds;\n        if (node.element) {\n            var elDef = node.element;\n            elDef.publicProviders =\n                currentParent ? currentParent.element.publicProviders : Object.create(null);\n            elDef.allProviders = elDef.publicProviders;\n            // Note: We assume that all providers of an element are before any child element!\n            currentElementHasPublicProviders = false;\n            currentElementHasPrivateProviders = false;\n            if (node.element.template) {\n                viewMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        validateNode(currentParent, node, nodes.length);\n        viewBindingCount += node.bindings.length;\n        viewDisposableCount += node.outputs.length;\n        if (!currentRenderParent && (node.flags & 3 /* CatRenderNode */)) {\n            lastRenderRootNode = node;\n        }\n        if (node.flags & 20224 /* CatProvider */) {\n            if (!currentElementHasPublicProviders) {\n                currentElementHasPublicProviders = true;\n                // Use prototypical inheritance to not get O(n^2) complexity...\n                // Use prototypical inheritance to not get O(n^2) complexity...\n                currentParent.element.publicProviders =\n                    Object.create(currentParent.element.publicProviders);\n                currentParent.element.allProviders = currentParent.element.publicProviders;\n            }\n            var isPrivateService = (node.flags & 8192 /* PrivateProvider */) !== 0;\n            var isComponent = (node.flags & 32768 /* Component */) !== 0;\n            if (!isPrivateService || isComponent) {\n                currentParent.element.publicProviders[tokenKey(node.provider.token)] = node;\n            }\n            else {\n                if (!currentElementHasPrivateProviders) {\n                    currentElementHasPrivateProviders = true;\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    // Use prototypical inheritance to not get O(n^2) complexity...\n                    currentParent.element.allProviders =\n                        Object.create(currentParent.element.publicProviders);\n                }\n                currentParent.element.allProviders[tokenKey(node.provider.token)] = node;\n            }\n            if (isComponent) {\n                currentParent.element.componentProvider = node;\n            }\n        }\n        if (currentParent) {\n            currentParent.childFlags |= node.flags;\n            currentParent.directChildFlags |= node.flags;\n            currentParent.childMatchedQueries |= node.matchedQueryIds;\n            if (node.element && node.element.template) {\n                currentParent.childMatchedQueries |= node.element.template.nodeMatchedQueries;\n            }\n        }\n        else {\n            viewRootNodeFlags |= node.flags;\n        }\n        if (node.childCount > 0) {\n            currentParent = node;\n            if (!isNgContainer(node)) {\n                currentRenderParent = node;\n            }\n        }\n        else {\n            // When the current node has no children, check if it is the last children of its parent.\n            // When it is, propagate the flags up.\n            // The loop is required because an element could be the last transitive children of several\n            // elements. We loop to either the root or the highest opened element (= with remaining\n            // children)\n            while (currentParent && i === currentParent.nodeIndex + currentParent.childCount) {\n                var newParent = currentParent.parent;\n                if (newParent) {\n                    newParent.childFlags |= currentParent.childFlags;\n                    newParent.childMatchedQueries |= currentParent.childMatchedQueries;\n                }\n                currentParent = newParent;\n                // We also need to update the render parent & account for ng-container\n                if (currentParent && isNgContainer(currentParent)) {\n                    currentRenderParent = currentParent.renderParent;\n                }\n                else {\n                    currentRenderParent = currentParent;\n                }\n            }\n        }\n    }\n    var handleEvent = function (view, nodeIndex, eventName, event) {\n        return nodes[nodeIndex].element.handleEvent(view, eventName, event);\n    };\n    return {\n        // Will be filled later...\n        factory: null,\n        nodeFlags: viewNodeFlags,\n        rootNodeFlags: viewRootNodeFlags,\n        nodeMatchedQueries: viewMatchedQueries, flags: flags,\n        nodes: nodes,\n        updateDirectives: updateDirectives || NOOP,\n        updateRenderer: updateRenderer || NOOP, handleEvent: handleEvent,\n        bindingCount: viewBindingCount,\n        outputCount: viewDisposableCount, lastRenderRootNode: lastRenderRootNode\n    };\n}\nfunction isNgContainer(node) {\n    return (node.flags & 1 /* TypeElement */) !== 0 && node.element.name === null;\n}\nfunction validateNode(parent, node, nodeCount) {\n    var template = node.element && node.element.template;\n    if (template) {\n        if (!template.lastRenderRootNode) {\n            throw new Error(\"Illegal State: Embedded templates without nodes are not allowed!\");\n        }\n        if (template.lastRenderRootNode &&\n            template.lastRenderRootNode.flags & 16777216 /* EmbeddedViews */) {\n            throw new Error(\"Illegal State: Last root node of a template can't have embedded views, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.flags & 20224 /* CatProvider */) {\n        var parentFlags = parent ? parent.flags : 0;\n        if ((parentFlags & 1 /* TypeElement */) === 0) {\n            throw new Error(\"Illegal State: StaticProvider/Directive nodes need to be children of elements or anchors, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.query) {\n        if (node.flags & 67108864 /* TypeContentQuery */ &&\n            (!parent || (parent.flags & 16384 /* TypeDirective */) === 0)) {\n            throw new Error(\"Illegal State: Content Query nodes need to be children of directives, at index \" + node.nodeIndex + \"!\");\n        }\n        if (node.flags & 134217728 /* TypeViewQuery */ && parent) {\n            throw new Error(\"Illegal State: View Query nodes have to be top level nodes, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n    if (node.childCount) {\n        var parentEnd = parent ? parent.nodeIndex + parent.childCount : nodeCount - 1;\n        if (node.nodeIndex <= parentEnd && node.nodeIndex + node.childCount > parentEnd) {\n            throw new Error(\"Illegal State: childCount of node leads outside of parent, at index \" + node.nodeIndex + \"!\");\n        }\n    }\n}\nfunction createEmbeddedView(parent, anchorDef$$1, viewDef, context) {\n    // embedded views are seen as siblings to the anchor, so we need\n    // to get the parent of the anchor and use it as parentIndex.\n    var view = createView(parent.root, parent.renderer, parent, anchorDef$$1, viewDef);\n    initView(view, parent.component, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createRootView(root, def, context) {\n    var view = createView(root, root.renderer, null, null, def);\n    initView(view, context, context);\n    createViewNodes(view);\n    return view;\n}\nfunction createComponentView(parentView, nodeDef, viewDef, hostElement) {\n    var rendererType = nodeDef.element.componentRendererType;\n    var compRenderer;\n    if (!rendererType) {\n        compRenderer = parentView.root.renderer;\n    }\n    else {\n        compRenderer = parentView.root.rendererFactory.createRenderer(hostElement, rendererType);\n    }\n    return createView(parentView.root, compRenderer, parentView, nodeDef.element.componentProvider, viewDef);\n}\nfunction createView(root, renderer, parent, parentNodeDef, def) {\n    var nodes = new Array(def.nodes.length);\n    var disposables = def.outputCount ? new Array(def.outputCount) : null;\n    var view = {\n        def: def,\n        parent: parent,\n        viewContainerParent: null, parentNodeDef: parentNodeDef,\n        context: null,\n        component: null, nodes: nodes,\n        state: 13 /* CatInit */, root: root, renderer: renderer,\n        oldValues: new Array(def.bindingCount), disposables: disposables,\n        initIndex: -1\n    };\n    return view;\n}\nfunction initView(view, component, context) {\n    view.component = component;\n    view.context = context;\n}\nfunction createViewNodes(view) {\n    var renderHost;\n    if (isComponentView(view)) {\n        var hostDef = view.parentNodeDef;\n        renderHost = asElementData((view.parent), hostDef.parent.nodeIndex).renderElement;\n    }\n    var def = view.def;\n    var nodes = view.nodes;\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        Services.setCurrentNode(view, i);\n        var nodeData = void 0;\n        switch (nodeDef.flags & 201347067 /* Types */) {\n            case 1 /* TypeElement */:\n                var el = createElement(view, renderHost, nodeDef);\n                var componentView = (undefined);\n                if (nodeDef.flags & 33554432 /* ComponentView */) {\n                    var compViewDef = resolveDefinition((nodeDef.element.componentView));\n                    componentView = Services.createComponentView(view, nodeDef, compViewDef, el);\n                }\n                listenToElementOutputs(view, componentView, nodeDef, el);\n                nodeData = {\n                    renderElement: el,\n                    componentView: componentView,\n                    viewContainer: null,\n                    template: nodeDef.element.template ? createTemplateData(view, nodeDef) : undefined\n                };\n                if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n                    nodeData.viewContainer = createViewContainerData(view, nodeDef, nodeData);\n                }\n                break;\n            case 2 /* TypeText */:\n                nodeData = createText(view, renderHost, nodeDef);\n                break;\n            case 512 /* TypeClassProvider */:\n            case 1024 /* TypeFactoryProvider */:\n            case 2048 /* TypeUseExistingProvider */:\n            case 256 /* TypeValueProvider */: {\n                nodeData = nodes[i];\n                if (!nodeData && !(nodeDef.flags & 4096 /* LazyProvider */)) {\n                    var instance = createProviderInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                break;\n            }\n            case 16 /* TypePipe */: {\n                var instance = createPipeInstance(view, nodeDef);\n                nodeData = { instance: instance };\n                break;\n            }\n            case 16384 /* TypeDirective */: {\n                nodeData = nodes[i];\n                if (!nodeData) {\n                    var instance = createDirectiveInstance(view, nodeDef);\n                    nodeData = { instance: instance };\n                }\n                if (nodeDef.flags & 32768 /* Component */) {\n                    var compView = asElementData(view, nodeDef.parent.nodeIndex).componentView;\n                    initView(compView, nodeData.instance, nodeData.instance);\n                }\n                break;\n            }\n            case 32 /* TypePureArray */:\n            case 64 /* TypePureObject */:\n            case 128 /* TypePurePipe */:\n                nodeData = createPureExpression(view, nodeDef);\n                break;\n            case 67108864 /* TypeContentQuery */:\n            case 134217728 /* TypeViewQuery */:\n                nodeData = createQuery();\n                break;\n            case 8 /* TypeNgContent */:\n                appendNgContent(view, renderHost, nodeDef);\n                // no runtime data needed for NgContent...\n                nodeData = undefined;\n                break;\n        }\n        nodes[i] = nodeData;\n    }\n    // Create the ViewData.nodes of component views after we created everything else,\n    // so that e.g. ng-content works\n    execComponentViewsAction(view, ViewAction.CreateViewNodes);\n    // fill static content and view queries\n    execQueriesAction(view, 67108864 /* TypeContentQuery */ | 134217728 /* TypeViewQuery */, 268435456 /* StaticQuery */, 0 /* CheckAndUpdate */);\n}\nfunction checkNoChangesView(view) {\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 1 /* CheckNoChanges */);\n    execEmbeddedViewsAction(view, ViewAction.CheckNoChanges);\n    Services.updateRenderer(view, 1 /* CheckNoChanges */);\n    execComponentViewsAction(view, ViewAction.CheckNoChanges);\n    // Note: We don't check queries for changes as we didn't do this in v2.x.\n    // TODO(tbosch): investigate if we can enable the check again in v5.x with a nicer error message.\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n}\nfunction checkAndUpdateView(view) {\n    if (view.state & 1 /* BeforeFirstCheck */) {\n        view.state &= ~1 /* BeforeFirstCheck */;\n        view.state |= 2 /* FirstCheck */;\n    }\n    else {\n        view.state &= ~2 /* FirstCheck */;\n    }\n    shiftInitState(view, 0 /* InitState_BeforeInit */, 256 /* InitState_CallingOnInit */);\n    markProjectedViewsForCheck(view);\n    Services.updateDirectives(view, 0 /* CheckAndUpdate */);\n    execEmbeddedViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 67108864 /* TypeContentQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    var callInit = shiftInitState(view, 256 /* InitState_CallingOnInit */, 512 /* InitState_CallingAfterContentInit */);\n    callLifecycleHooksChildrenFirst(view, 2097152 /* AfterContentChecked */ | (callInit ? 1048576 /* AfterContentInit */ : 0));\n    Services.updateRenderer(view, 0 /* CheckAndUpdate */);\n    execComponentViewsAction(view, ViewAction.CheckAndUpdate);\n    execQueriesAction(view, 134217728 /* TypeViewQuery */, 536870912 /* DynamicQuery */, 0 /* CheckAndUpdate */);\n    callInit = shiftInitState(view, 512 /* InitState_CallingAfterContentInit */, 768 /* InitState_CallingAfterViewInit */);\n    callLifecycleHooksChildrenFirst(view, 8388608 /* AfterViewChecked */ | (callInit ? 4194304 /* AfterViewInit */ : 0));\n    if (view.def.flags & 2 /* OnPush */) {\n        view.state &= ~8 /* ChecksEnabled */;\n    }\n    view.state &= ~(64 /* CheckProjectedViews */ | 32 /* CheckProjectedView */);\n    shiftInitState(view, 768 /* InitState_CallingAfterViewInit */, 1024 /* InitState_AfterInit */);\n}\nfunction checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        return checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        return checkAndUpdateNodeDynamic(view, nodeDef, v0);\n    }\n}\nfunction markProjectedViewsForCheck(view) {\n    var def = view.def;\n    if (!(def.nodeFlags & 4 /* ProjectedTemplate */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 4 /* ProjectedTemplate */) {\n            var projectedViews = asElementData(view, i).template._projectedViews;\n            if (projectedViews) {\n                for (var i_1 = 0; i_1 < projectedViews.length; i_1++) {\n                    var projectedView = projectedViews[i_1];\n                    projectedView.state |= 32 /* CheckProjectedView */;\n                    markParentViewsForCheckProjectedViews(projectedView, view);\n                }\n            }\n        }\n        else if ((nodeDef.childFlags & 4 /* ProjectedTemplate */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction checkAndUpdateNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkAndUpdateNodeDynamic(view, nodeDef, values) {\n    switch (nodeDef.flags & 201347067 /* Types */) {\n        case 1 /* TypeElement */:\n            return checkAndUpdateElementDynamic(view, nodeDef, values);\n        case 2 /* TypeText */:\n            return checkAndUpdateTextDynamic(view, nodeDef, values);\n        case 16384 /* TypeDirective */:\n            return checkAndUpdateDirectiveDynamic(view, nodeDef, values);\n        case 32 /* TypePureArray */:\n        case 64 /* TypePureObject */:\n        case 128 /* TypePurePipe */:\n            return checkAndUpdatePureExpressionDynamic(view, nodeDef, values);\n        default:\n            throw 'unreachable';\n    }\n}\nfunction checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    if (argStyle === 0 /* Inline */) {\n        checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    }\n    else {\n        checkNoChangesNodeDynamic(view, nodeDef, v0);\n    }\n    // Returning false is ok here as we would have thrown in case of a change.\n    return false;\n}\nfunction checkNoChangesNodeInline(view, nodeDef, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var bindLen = nodeDef.bindings.length;\n    if (bindLen > 0)\n        checkBindingNoChanges(view, nodeDef, 0, v0);\n    if (bindLen > 1)\n        checkBindingNoChanges(view, nodeDef, 1, v1);\n    if (bindLen > 2)\n        checkBindingNoChanges(view, nodeDef, 2, v2);\n    if (bindLen > 3)\n        checkBindingNoChanges(view, nodeDef, 3, v3);\n    if (bindLen > 4)\n        checkBindingNoChanges(view, nodeDef, 4, v4);\n    if (bindLen > 5)\n        checkBindingNoChanges(view, nodeDef, 5, v5);\n    if (bindLen > 6)\n        checkBindingNoChanges(view, nodeDef, 6, v6);\n    if (bindLen > 7)\n        checkBindingNoChanges(view, nodeDef, 7, v7);\n    if (bindLen > 8)\n        checkBindingNoChanges(view, nodeDef, 8, v8);\n    if (bindLen > 9)\n        checkBindingNoChanges(view, nodeDef, 9, v9);\n}\nfunction checkNoChangesNodeDynamic(view, nodeDef, values) {\n    for (var i = 0; i < values.length; i++) {\n        checkBindingNoChanges(view, nodeDef, i, values[i]);\n    }\n}\n/**\n * Workaround https://github.com/angular/tsickle/issues/497\n * @suppress {misplacedTypeAnnotation}\n */\nfunction checkNoChangesQuery(view, nodeDef) {\n    var queryList = asQueryList(view, nodeDef.nodeIndex);\n    if (queryList.dirty) {\n        throw expressionChangedAfterItHasBeenCheckedError(Services.createDebugContext(view, nodeDef.nodeIndex), \"Query \" + nodeDef.query.id + \" not dirty\", \"Query \" + nodeDef.query.id + \" dirty\", (view.state & 1 /* BeforeFirstCheck */) !== 0);\n    }\n}\nfunction destroyView(view) {\n    if (view.state & 128 /* Destroyed */) {\n        return;\n    }\n    execEmbeddedViewsAction(view, ViewAction.Destroy);\n    execComponentViewsAction(view, ViewAction.Destroy);\n    callLifecycleHooksChildrenFirst(view, 131072 /* OnDestroy */);\n    if (view.disposables) {\n        for (var i = 0; i < view.disposables.length; i++) {\n            view.disposables[i]();\n        }\n    }\n    detachProjectedView(view);\n    if (view.renderer.destroyNode) {\n        destroyViewNodes(view);\n    }\n    if (isComponentView(view)) {\n        view.renderer.destroy();\n    }\n    view.state |= 128 /* Destroyed */;\n}\nfunction destroyViewNodes(view) {\n    var len = view.def.nodes.length;\n    for (var i = 0; i < len; i++) {\n        var def = view.def.nodes[i];\n        if (def.flags & 1 /* TypeElement */) {\n            view.renderer.destroyNode(asElementData(view, i).renderElement);\n        }\n        else if (def.flags & 2 /* TypeText */) {\n            view.renderer.destroyNode(asTextData(view, i).renderText);\n        }\n        else if (def.flags & 67108864 /* TypeContentQuery */ || def.flags & 134217728 /* TypeViewQuery */) {\n            asQueryList(view, i).destroy();\n        }\n    }\n}\nvar ViewAction;\n(function (ViewAction) {\n    ViewAction[ViewAction[\"CreateViewNodes\"] = 0] = \"CreateViewNodes\";\n    ViewAction[ViewAction[\"CheckNoChanges\"] = 1] = \"CheckNoChanges\";\n    ViewAction[ViewAction[\"CheckNoChangesProjectedViews\"] = 2] = \"CheckNoChangesProjectedViews\";\n    ViewAction[ViewAction[\"CheckAndUpdate\"] = 3] = \"CheckAndUpdate\";\n    ViewAction[ViewAction[\"CheckAndUpdateProjectedViews\"] = 4] = \"CheckAndUpdateProjectedViews\";\n    ViewAction[ViewAction[\"Destroy\"] = 5] = \"Destroy\";\n})(ViewAction || (ViewAction = {}));\nfunction execComponentViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 33554432 /* ComponentView */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 33554432 /* ComponentView */) {\n            // a leaf\n            callViewAction(asElementData(view, i).componentView, action);\n        }\n        else if ((nodeDef.childFlags & 33554432 /* ComponentView */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction execEmbeddedViewsAction(view, action) {\n    var def = view.def;\n    if (!(def.nodeFlags & 16777216 /* EmbeddedViews */)) {\n        return;\n    }\n    for (var i = 0; i < def.nodes.length; i++) {\n        var nodeDef = def.nodes[i];\n        if (nodeDef.flags & 16777216 /* EmbeddedViews */) {\n            // a leaf\n            var embeddedViews = asElementData(view, i).viewContainer._embeddedViews;\n            for (var k = 0; k < embeddedViews.length; k++) {\n                callViewAction(embeddedViews[k], action);\n            }\n        }\n        else if ((nodeDef.childFlags & 16777216 /* EmbeddedViews */) === 0) {\n            // a parent with leafs\n            // no child is a component,\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\nfunction callViewAction(view, action) {\n    var viewState = view.state;\n    switch (action) {\n        case ViewAction.CheckNoChanges:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckNoChangesProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckNoChangesProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkNoChangesView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdate:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if ((viewState & 12 /* CatDetectChanges */) === 12 /* CatDetectChanges */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, ViewAction.CheckAndUpdateProjectedViews);\n                }\n            }\n            break;\n        case ViewAction.CheckAndUpdateProjectedViews:\n            if ((viewState & 128 /* Destroyed */) === 0) {\n                if (viewState & 32 /* CheckProjectedView */) {\n                    checkAndUpdateView(view);\n                }\n                else if (viewState & 64 /* CheckProjectedViews */) {\n                    execProjectedViewsAction(view, action);\n                }\n            }\n            break;\n        case ViewAction.Destroy:\n            // Note: destroyView recurses over all views,\n            // so we don't need to special case projected views here.\n            destroyView(view);\n            break;\n        case ViewAction.CreateViewNodes:\n            createViewNodes(view);\n            break;\n    }\n}\nfunction execProjectedViewsAction(view, action) {\n    execEmbeddedViewsAction(view, action);\n    execComponentViewsAction(view, action);\n}\nfunction execQueriesAction(view, queryFlags, staticDynamicQueryFlag, checkType) {\n    if (!(view.def.nodeFlags & queryFlags) || !(view.def.nodeFlags & staticDynamicQueryFlag)) {\n        return;\n    }\n    var nodeCount = view.def.nodes.length;\n    for (var i = 0; i < nodeCount; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & queryFlags) && (nodeDef.flags & staticDynamicQueryFlag)) {\n            Services.setCurrentNode(view, nodeDef.nodeIndex);\n            switch (checkType) {\n                case 0 /* CheckAndUpdate */:\n                    checkAndUpdateQuery(view, nodeDef);\n                    break;\n                case 1 /* CheckNoChanges */:\n                    checkNoChangesQuery(view, nodeDef);\n                    break;\n            }\n        }\n        if (!(nodeDef.childFlags & queryFlags) || !(nodeDef.childFlags & staticDynamicQueryFlag)) {\n            // no child has a matching query\n            // then skip the children\n            i += nodeDef.childCount;\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar initialized = false;\nfunction initServicesIfNeeded() {\n    if (initialized) {\n        return;\n    }\n    initialized = true;\n    var services = isDevMode() ? createDebugServices() : createProdServices();\n    Services.setCurrentNode = services.setCurrentNode;\n    Services.createRootView = services.createRootView;\n    Services.createEmbeddedView = services.createEmbeddedView;\n    Services.createComponentView = services.createComponentView;\n    Services.createNgModuleRef = services.createNgModuleRef;\n    Services.overrideProvider = services.overrideProvider;\n    Services.overrideComponentView = services.overrideComponentView;\n    Services.clearOverrides = services.clearOverrides;\n    Services.checkAndUpdateView = services.checkAndUpdateView;\n    Services.checkNoChangesView = services.checkNoChangesView;\n    Services.destroyView = services.destroyView;\n    Services.resolveDep = resolveDep;\n    Services.createDebugContext = services.createDebugContext;\n    Services.handleEvent = services.handleEvent;\n    Services.updateDirectives = services.updateDirectives;\n    Services.updateRenderer = services.updateRenderer;\n    Services.dirtyParentQueries = dirtyParentQueries;\n}\nfunction createProdServices() {\n    return {\n        setCurrentNode: function () { },\n        createRootView: createProdRootView,\n        createEmbeddedView: createEmbeddedView,\n        createComponentView: createComponentView,\n        createNgModuleRef: createNgModuleRef,\n        overrideProvider: NOOP,\n        overrideComponentView: NOOP,\n        clearOverrides: NOOP,\n        checkAndUpdateView: checkAndUpdateView,\n        checkNoChangesView: checkNoChangesView,\n        destroyView: destroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: function (view, nodeIndex, eventName, event) {\n            return view.def.handleEvent(view, nodeIndex, eventName, event);\n        },\n        updateDirectives: function (view, checkType) {\n            return view.def.updateDirectives(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n        updateRenderer: function (view, checkType) {\n            return view.def.updateRenderer(checkType === 0 /* CheckAndUpdate */ ? prodCheckAndUpdateNode :\n                prodCheckNoChangesNode, view);\n        },\n    };\n}\nfunction createDebugServices() {\n    return {\n        setCurrentNode: debugSetCurrentNode,\n        createRootView: debugCreateRootView,\n        createEmbeddedView: debugCreateEmbeddedView,\n        createComponentView: debugCreateComponentView,\n        createNgModuleRef: debugCreateNgModuleRef,\n        overrideProvider: debugOverrideProvider,\n        overrideComponentView: debugOverrideComponentView,\n        clearOverrides: debugClearOverrides,\n        checkAndUpdateView: debugCheckAndUpdateView,\n        checkNoChangesView: debugCheckNoChangesView,\n        destroyView: debugDestroyView,\n        createDebugContext: function (view, nodeIndex) { return new DebugContext_(view, nodeIndex); },\n        handleEvent: debugHandleEvent,\n        updateDirectives: debugUpdateDirectives,\n        updateRenderer: debugUpdateRenderer,\n    };\n}\nfunction createProdRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    return createRootView(createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode), def, context);\n}\nfunction debugCreateRootView(elInjector, projectableNodes, rootSelectorOrNode, def, ngModule, context) {\n    var rendererFactory = ngModule.injector.get(RendererFactory2);\n    var root = createRootData(elInjector, ngModule, new DebugRendererFactory2(rendererFactory), projectableNodes, rootSelectorOrNode);\n    var defWithOverride = applyProviderOverridesToView(def);\n    return callWithDebugContext(DebugAction.create, createRootView, null, [root, defWithOverride, context]);\n}\nfunction createRootData(elInjector, ngModule, rendererFactory, projectableNodes, rootSelectorOrNode) {\n    var sanitizer = ngModule.injector.get(Sanitizer);\n    var errorHandler = ngModule.injector.get(ErrorHandler);\n    var renderer = rendererFactory.createRenderer(null, null);\n    return {\n        ngModule: ngModule,\n        injector: elInjector, projectableNodes: projectableNodes,\n        selectorOrNode: rootSelectorOrNode, sanitizer: sanitizer, rendererFactory: rendererFactory, renderer: renderer, errorHandler: errorHandler\n    };\n}\nfunction debugCreateEmbeddedView(parentView, anchorDef, viewDef$$1, context) {\n    var defWithOverride = applyProviderOverridesToView(viewDef$$1);\n    return callWithDebugContext(DebugAction.create, createEmbeddedView, null, [parentView, anchorDef, defWithOverride, context]);\n}\nfunction debugCreateComponentView(parentView, nodeDef, viewDef$$1, hostElement) {\n    var overrideComponentView = viewDefOverrides.get(nodeDef.element.componentProvider.provider.token);\n    if (overrideComponentView) {\n        viewDef$$1 = overrideComponentView;\n    }\n    else {\n        viewDef$$1 = applyProviderOverridesToView(viewDef$$1);\n    }\n    return callWithDebugContext(DebugAction.create, createComponentView, null, [parentView, nodeDef, viewDef$$1, hostElement]);\n}\nfunction debugCreateNgModuleRef(moduleType, parentInjector, bootstrapComponents, def) {\n    var defWithOverride = applyProviderOverridesToNgModule(def);\n    return createNgModuleRef(moduleType, parentInjector, bootstrapComponents, defWithOverride);\n}\nvar providerOverrides = new Map();\nvar providerOverridesWithScope = new Map();\nvar viewDefOverrides = new Map();\nfunction debugOverrideProvider(override) {\n    providerOverrides.set(override.token, override);\n    if (typeof override.token === 'function' && override.token.ngInjectableDef &&\n        typeof override.token.ngInjectableDef.providedIn === 'function') {\n        providerOverridesWithScope.set(override.token, override);\n    }\n}\nfunction debugOverrideComponentView(comp, compFactory) {\n    var hostViewDef = resolveDefinition(getComponentViewDefinitionFactory(compFactory));\n    var compViewDef = resolveDefinition((hostViewDef.nodes[0].element.componentView));\n    viewDefOverrides.set(comp, compViewDef);\n}\nfunction debugClearOverrides() {\n    providerOverrides.clear();\n    providerOverridesWithScope.clear();\n    viewDefOverrides.clear();\n}\n// Notes about the algorithm:\n// 1) Locate the providers of an element and check if one of them was overwritten\n// 2) Change the providers of that element\n//\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToView(def) {\n    if (providerOverrides.size === 0) {\n        return def;\n    }\n    var elementIndicesWithOverwrittenProviders = findElementIndicesWithOverwrittenProviders(def);\n    if (elementIndicesWithOverwrittenProviders.length === 0) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    for (var i = 0; i < elementIndicesWithOverwrittenProviders.length; i++) {\n        applyProviderOverridesToElement(def, elementIndicesWithOverwrittenProviders[i]);\n    }\n    return def;\n    function findElementIndicesWithOverwrittenProviders(def) {\n        var elIndicesWithOverwrittenProviders = [];\n        var lastElementDef = null;\n        for (var i = 0; i < def.nodes.length; i++) {\n            var nodeDef = def.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                lastElementDef = nodeDef;\n            }\n            if (lastElementDef && nodeDef.flags & 3840 /* CatProviderNoDirective */ &&\n                providerOverrides.has(nodeDef.provider.token)) {\n                elIndicesWithOverwrittenProviders.push(lastElementDef.nodeIndex);\n                lastElementDef = null;\n            }\n        }\n        return elIndicesWithOverwrittenProviders;\n    }\n    function applyProviderOverridesToElement(viewDef$$1, elIndex) {\n        for (var i = elIndex + 1; i < viewDef$$1.nodes.length; i++) {\n            var nodeDef = viewDef$$1.nodes[i];\n            if (nodeDef.flags & 1 /* TypeElement */) {\n                // stop at the next element\n                return;\n            }\n            if (nodeDef.flags & 3840 /* CatProviderNoDirective */) {\n                var provider = (nodeDef.provider);\n                var override = providerOverrides.get(provider.token);\n                if (override) {\n                    nodeDef.flags = (nodeDef.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                    provider.deps = splitDepsDsl(override.deps);\n                    provider.value = override.value;\n                }\n            }\n        }\n    }\n}\n// Notes about the algorithm:\n// We only create new datastructures if we need to, to keep perf impact\n// reasonable.\nfunction applyProviderOverridesToNgModule(def) {\n    var _a = calcHasOverrides(def), hasOverrides = _a.hasOverrides, hasDeprecatedOverrides = _a.hasDeprecatedOverrides;\n    if (!hasOverrides) {\n        return def;\n    }\n    // clone the whole view definition,\n    // as it maintains references between the nodes that are hard to update.\n    def = def.factory(function () { return NOOP; });\n    applyProviderOverrides(def);\n    return def;\n    function calcHasOverrides(def) {\n        var hasOverrides = false;\n        var hasDeprecatedOverrides = false;\n        if (providerOverrides.size === 0) {\n            return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n        }\n        def.providers.forEach(function (node) {\n            var override = providerOverrides.get(node.token);\n            if ((node.flags & 3840 /* CatProviderNoDirective */) && override) {\n                hasOverrides = true;\n                hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n            }\n        });\n        def.modules.forEach(function (module) {\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (token.ngInjectableDef.providedIn === module) {\n                    hasOverrides = true;\n                    hasDeprecatedOverrides = hasDeprecatedOverrides || override.deprecatedBehavior;\n                }\n            });\n        });\n        return { hasOverrides: hasOverrides, hasDeprecatedOverrides: hasDeprecatedOverrides };\n    }\n    function applyProviderOverrides(def) {\n        for (var i = 0; i < def.providers.length; i++) {\n            var provider = def.providers[i];\n            if (hasDeprecatedOverrides) {\n                // We had a bug where me made\n                // all providers lazy. Keep this logic behind a flag\n                // for migrating existing users.\n                provider.flags |= 4096 /* LazyProvider */;\n            }\n            var override = providerOverrides.get(provider.token);\n            if (override) {\n                provider.flags = (provider.flags & ~3840 /* CatProviderNoDirective */) | override.flags;\n                provider.deps = splitDepsDsl(override.deps);\n                provider.value = override.value;\n            }\n        }\n        if (providerOverridesWithScope.size > 0) {\n            var moduleSet_1 = new Set(def.modules);\n            providerOverridesWithScope.forEach(function (override, token) {\n                if (moduleSet_1.has(token.ngInjectableDef.providedIn)) {\n                    var provider = {\n                        token: token,\n                        flags: override.flags | (hasDeprecatedOverrides ? 4096 /* LazyProvider */ : 0 /* None */),\n                        deps: splitDepsDsl(override.deps),\n                        value: override.value,\n                        index: def.providers.length,\n                    };\n                    def.providers.push(provider);\n                    def.providersByKey[tokenKey(token)] = provider;\n                }\n            });\n        }\n    }\n}\nfunction prodCheckAndUpdateNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkAndUpdateNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction prodCheckNoChangesNode(view, checkIndex, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9) {\n    var nodeDef = view.def.nodes[checkIndex];\n    checkNoChangesNode(view, nodeDef, argStyle, v0, v1, v2, v3, v4, v5, v6, v7, v8, v9);\n    return (nodeDef.flags & 224 /* CatPureExpression */) ?\n        asPureExpressionData(view, checkIndex).value :\n        undefined;\n}\nfunction debugCheckAndUpdateView(view) {\n    return callWithDebugContext(DebugAction.detectChanges, checkAndUpdateView, null, [view]);\n}\nfunction debugCheckNoChangesView(view) {\n    return callWithDebugContext(DebugAction.checkNoChanges, checkNoChangesView, null, [view]);\n}\nfunction debugDestroyView(view) {\n    return callWithDebugContext(DebugAction.destroy, destroyView, null, [view]);\n}\nvar DebugAction;\n(function (DebugAction) {\n    DebugAction[DebugAction[\"create\"] = 0] = \"create\";\n    DebugAction[DebugAction[\"detectChanges\"] = 1] = \"detectChanges\";\n    DebugAction[DebugAction[\"checkNoChanges\"] = 2] = \"checkNoChanges\";\n    DebugAction[DebugAction[\"destroy\"] = 3] = \"destroy\";\n    DebugAction[DebugAction[\"handleEvent\"] = 4] = \"handleEvent\";\n})(DebugAction || (DebugAction = {}));\nvar _currentAction;\nvar _currentView;\nvar _currentNodeIndex;\nfunction debugSetCurrentNode(view, nodeIndex) {\n    _currentView = view;\n    _currentNodeIndex = nodeIndex;\n}\nfunction debugHandleEvent(view, nodeIndex, eventName, event) {\n    debugSetCurrentNode(view, nodeIndex);\n    return callWithDebugContext(DebugAction.handleEvent, view.def.handleEvent, null, [view, nodeIndex, eventName, event]);\n}\nfunction debugUpdateDirectives(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextDirectiveWithBinding(view, 0));\n    return view.def.updateDirectives(debugCheckDirectivesFn, view);\n    function debugCheckDirectivesFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            debugSetCurrentNode(view, nextDirectiveWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugUpdateRenderer(view, checkType) {\n    if (view.state & 128 /* Destroyed */) {\n        throw viewDestroyedError(DebugAction[_currentAction]);\n    }\n    debugSetCurrentNode(view, nextRenderNodeWithBinding(view, 0));\n    return view.def.updateRenderer(debugCheckRenderNodeFn, view);\n    function debugCheckRenderNodeFn(view, nodeIndex, argStyle) {\n        var values = [];\n        for (var _i = 3; _i < arguments.length; _i++) {\n            values[_i - 3] = arguments[_i];\n        }\n        var nodeDef = view.def.nodes[nodeIndex];\n        if (checkType === 0 /* CheckAndUpdate */) {\n            debugCheckAndUpdateNode(view, nodeDef, argStyle, values);\n        }\n        else {\n            debugCheckNoChangesNode(view, nodeDef, argStyle, values);\n        }\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            debugSetCurrentNode(view, nextRenderNodeWithBinding(view, nodeIndex));\n        }\n        return (nodeDef.flags & 224 /* CatPureExpression */) ?\n            asPureExpressionData(view, nodeDef.nodeIndex).value :\n            undefined;\n    }\n}\nfunction debugCheckAndUpdateNode(view, nodeDef, argStyle, givenValues) {\n    var changed = checkAndUpdateNode.apply(void 0, tslib_1.__spread([view, nodeDef, argStyle], givenValues));\n    if (changed) {\n        var values = argStyle === 1 /* Dynamic */ ? givenValues[0] : givenValues;\n        if (nodeDef.flags & 16384 /* TypeDirective */) {\n            var bindingValues = {};\n            for (var i = 0; i < nodeDef.bindings.length; i++) {\n                var binding = nodeDef.bindings[i];\n                var value = values[i];\n                if (binding.flags & 8 /* TypeProperty */) {\n                    bindingValues[normalizeDebugBindingName((binding.nonMinifiedName))] =\n                        normalizeDebugBindingValue(value);\n                }\n            }\n            var elDef = (nodeDef.parent);\n            var el = asElementData(view, elDef.nodeIndex).renderElement;\n            if (!elDef.element.name) {\n                // a comment.\n                view.renderer.setValue(el, \"bindings=\" + JSON.stringify(bindingValues, null, 2));\n            }\n            else {\n                // a regular element.\n                for (var attr in bindingValues) {\n                    var value = bindingValues[attr];\n                    if (value != null) {\n                        view.renderer.setAttribute(el, attr, value);\n                    }\n                    else {\n                        view.renderer.removeAttribute(el, attr);\n                    }\n                }\n            }\n        }\n    }\n}\nfunction debugCheckNoChangesNode(view, nodeDef, argStyle, values) {\n    checkNoChangesNode.apply(void 0, tslib_1.__spread([view, nodeDef, argStyle], values));\n}\nfunction normalizeDebugBindingName(name) {\n    // Attribute names with `$` (eg `x-y$`) are valid per spec, but unsupported by some browsers\n    name = camelCaseToDashCase(name.replace(/[$@]/g, '_'));\n    return \"ng-reflect-\" + name;\n}\nvar CAMEL_CASE_REGEXP = /([A-Z])/g;\nfunction camelCaseToDashCase(input) {\n    return input.replace(CAMEL_CASE_REGEXP, function () {\n        var m = [];\n        for (var _i = 0; _i < arguments.length; _i++) {\n            m[_i] = arguments[_i];\n        }\n        return '-' + m[1].toLowerCase();\n    });\n}\nfunction normalizeDebugBindingValue(value) {\n    try {\n        // Limit the size of the value as otherwise the DOM just gets polluted.\n        return value != null ? value.toString().slice(0, 30) : value;\n    }\n    catch (e) {\n        return '[ERROR] Exception while trying to serialize the value';\n    }\n}\nfunction nextDirectiveWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if (nodeDef.flags & 16384 /* TypeDirective */ && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction nextRenderNodeWithBinding(view, nodeIndex) {\n    for (var i = nodeIndex; i < view.def.nodes.length; i++) {\n        var nodeDef = view.def.nodes[i];\n        if ((nodeDef.flags & 3 /* CatRenderNode */) && nodeDef.bindings && nodeDef.bindings.length) {\n            return i;\n        }\n    }\n    return null;\n}\nvar DebugContext_ = /** @class */ (function () {\n    function DebugContext_(view, nodeIndex) {\n        this.view = view;\n        this.nodeIndex = nodeIndex;\n        if (nodeIndex == null) {\n            this.nodeIndex = nodeIndex = 0;\n        }\n        this.nodeDef = view.def.nodes[nodeIndex];\n        var elDef = this.nodeDef;\n        var elView = view;\n        while (elDef && (elDef.flags & 1 /* TypeElement */) === 0) {\n            elDef = (elDef.parent);\n        }\n        if (!elDef) {\n            while (!elDef && elView) {\n                elDef = (viewParentEl(elView));\n                elView = (elView.parent);\n            }\n        }\n        this.elDef = elDef;\n        this.elView = elView;\n    }\n    Object.defineProperty(DebugContext_.prototype, \"elOrCompView\", {\n        get: function () {\n            // Has to be done lazily as we use the DebugContext also during creation of elements...\n            return asElementData(this.elView, this.elDef.nodeIndex).componentView || this.view;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"injector\", {\n        get: function () { return createInjector$1(this.elView, this.elDef); },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"component\", {\n        get: function () { return this.elOrCompView.component; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"context\", {\n        get: function () { return this.elOrCompView.context; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"providerTokens\", {\n        get: function () {\n            var tokens = [];\n            if (this.elDef) {\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        tokens.push(childDef.provider.token);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return tokens;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"references\", {\n        get: function () {\n            var references = {};\n            if (this.elDef) {\n                collectReferences(this.elView, this.elDef, references);\n                for (var i = this.elDef.nodeIndex + 1; i <= this.elDef.nodeIndex + this.elDef.childCount; i++) {\n                    var childDef = this.elView.def.nodes[i];\n                    if (childDef.flags & 20224 /* CatProvider */) {\n                        collectReferences(this.elView, childDef, references);\n                    }\n                    i += childDef.childCount;\n                }\n            }\n            return references;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"componentRenderElement\", {\n        get: function () {\n            var elData = findHostElement(this.elOrCompView);\n            return elData ? elData.renderElement : undefined;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(DebugContext_.prototype, \"renderNode\", {\n        get: function () {\n            return this.nodeDef.flags & 2 /* TypeText */ ? renderNode(this.view, this.nodeDef) :\n                renderNode(this.elView, this.elDef);\n        },\n        enumerable: true,\n        configurable: true\n    });\n    DebugContext_.prototype.logError = function (console) {\n        var values = [];\n        for (var _i = 1; _i < arguments.length; _i++) {\n            values[_i - 1] = arguments[_i];\n        }\n        var logViewDef;\n        var logNodeIndex;\n        if (this.nodeDef.flags & 2 /* TypeText */) {\n            logViewDef = this.view.def;\n            logNodeIndex = this.nodeDef.nodeIndex;\n        }\n        else {\n            logViewDef = this.elView.def;\n            logNodeIndex = this.elDef.nodeIndex;\n        }\n        // Note: we only generate a log function for text and element nodes\n        // to make the generated code as small as possible.\n        var renderNodeIndex = getRenderNodeIndex(logViewDef, logNodeIndex);\n        var currRenderNodeIndex = -1;\n        var nodeLogger = function () {\n            currRenderNodeIndex++;\n            if (currRenderNodeIndex === renderNodeIndex) {\n                return (_a = console.error).bind.apply(_a, tslib_1.__spread([console], values));\n            }\n            else {\n                return NOOP;\n            }\n            var _a;\n        };\n        logViewDef.factory(nodeLogger);\n        if (currRenderNodeIndex < renderNodeIndex) {\n            console.error('Illegal state: the ViewDefinitionFactory did not call the logger!');\n            console.error.apply(console, tslib_1.__spread(values));\n        }\n    };\n    return DebugContext_;\n}());\nfunction getRenderNodeIndex(viewDef$$1, nodeIndex) {\n    var renderNodeIndex = -1;\n    for (var i = 0; i <= nodeIndex; i++) {\n        var nodeDef = viewDef$$1.nodes[i];\n        if (nodeDef.flags & 3 /* CatRenderNode */) {\n            renderNodeIndex++;\n        }\n    }\n    return renderNodeIndex;\n}\nfunction findHostElement(view) {\n    while (view && !isComponentView(view)) {\n        view = (view.parent);\n    }\n    if (view.parent) {\n        return asElementData(view.parent, viewParentEl(view).nodeIndex);\n    }\n    return null;\n}\nfunction collectReferences(view, nodeDef, references) {\n    for (var refName in nodeDef.references) {\n        references[refName] = getQueryValue(view, nodeDef, nodeDef.references[refName]);\n    }\n}\nfunction callWithDebugContext(action, fn, self, args) {\n    var oldAction = _currentAction;\n    var oldView = _currentView;\n    var oldNodeIndex = _currentNodeIndex;\n    try {\n        _currentAction = action;\n        var result = fn.apply(self, args);\n        _currentView = oldView;\n        _currentNodeIndex = oldNodeIndex;\n        _currentAction = oldAction;\n        return result;\n    }\n    catch (e) {\n        if (isViewDebugError(e) || !_currentView) {\n            throw e;\n        }\n        throw viewWrappedDebugError(e, (getCurrentDebugContext()));\n    }\n}\nfunction getCurrentDebugContext() {\n    return _currentView ? new DebugContext_(_currentView, _currentNodeIndex) : null;\n}\nvar DebugRendererFactory2 = /** @class */ (function () {\n    function DebugRendererFactory2(delegate) {\n        this.delegate = delegate;\n    }\n    DebugRendererFactory2.prototype.createRenderer = function (element, renderData) {\n        return new DebugRenderer2(this.delegate.createRenderer(element, renderData));\n    };\n    DebugRendererFactory2.prototype.begin = function () {\n        if (this.delegate.begin) {\n            this.delegate.begin();\n        }\n    };\n    DebugRendererFactory2.prototype.end = function () {\n        if (this.delegate.end) {\n            this.delegate.end();\n        }\n    };\n    DebugRendererFactory2.prototype.whenRenderingDone = function () {\n        if (this.delegate.whenRenderingDone) {\n            return this.delegate.whenRenderingDone();\n        }\n        return Promise.resolve(null);\n    };\n    return DebugRendererFactory2;\n}());\nvar DebugRenderer2 = /** @class */ (function () {\n    function DebugRenderer2(delegate) {\n        this.delegate = delegate;\n        this.data = this.delegate.data;\n    }\n    DebugRenderer2.prototype.destroyNode = function (node) {\n        removeDebugNodeFromIndex((getDebugNode(node)));\n        if (this.delegate.destroyNode) {\n            this.delegate.destroyNode(node);\n        }\n    };\n    DebugRenderer2.prototype.destroy = function () { this.delegate.destroy(); };\n    DebugRenderer2.prototype.createElement = function (name, namespace) {\n        var el = this.delegate.createElement(name, namespace);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            var debugEl = new DebugElement(el, null, debugCtx);\n            debugEl.name = name;\n            indexDebugNode(debugEl);\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.createComment = function (value) {\n        var comment = this.delegate.createComment(value);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(comment, null, debugCtx));\n        }\n        return comment;\n    };\n    DebugRenderer2.prototype.createText = function (value) {\n        var text = this.delegate.createText(value);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugNode(text, null, debugCtx));\n        }\n        return text;\n    };\n    DebugRenderer2.prototype.appendChild = function (parent, newChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.addChild(debugChildEl);\n        }\n        this.delegate.appendChild(parent, newChild);\n    };\n    DebugRenderer2.prototype.insertBefore = function (parent, newChild, refChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(newChild);\n        var debugRefEl = (getDebugNode(refChild));\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.insertBefore(debugRefEl, debugChildEl);\n        }\n        this.delegate.insertBefore(parent, newChild, refChild);\n    };\n    DebugRenderer2.prototype.removeChild = function (parent, oldChild) {\n        var debugEl = getDebugNode(parent);\n        var debugChildEl = getDebugNode(oldChild);\n        if (debugEl && debugChildEl && debugEl instanceof DebugElement) {\n            debugEl.removeChild(debugChildEl);\n        }\n        this.delegate.removeChild(parent, oldChild);\n    };\n    DebugRenderer2.prototype.selectRootElement = function (selectorOrNode) {\n        var el = this.delegate.selectRootElement(selectorOrNode);\n        var debugCtx = getCurrentDebugContext();\n        if (debugCtx) {\n            indexDebugNode(new DebugElement(el, null, debugCtx));\n        }\n        return el;\n    };\n    DebugRenderer2.prototype.setAttribute = function (el, name, value, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = value;\n        }\n        this.delegate.setAttribute(el, name, value, namespace);\n    };\n    DebugRenderer2.prototype.removeAttribute = function (el, name, namespace) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            var fullName = namespace ? namespace + ':' + name : name;\n            debugEl.attributes[fullName] = null;\n        }\n        this.delegate.removeAttribute(el, name, namespace);\n    };\n    DebugRenderer2.prototype.addClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = true;\n        }\n        this.delegate.addClass(el, name);\n    };\n    DebugRenderer2.prototype.removeClass = function (el, name) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.classes[name] = false;\n        }\n        this.delegate.removeClass(el, name);\n    };\n    DebugRenderer2.prototype.setStyle = function (el, style, value, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = value;\n        }\n        this.delegate.setStyle(el, style, value, flags);\n    };\n    DebugRenderer2.prototype.removeStyle = function (el, style, flags) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.styles[style] = null;\n        }\n        this.delegate.removeStyle(el, style, flags);\n    };\n    DebugRenderer2.prototype.setProperty = function (el, name, value) {\n        var debugEl = getDebugNode(el);\n        if (debugEl && debugEl instanceof DebugElement) {\n            debugEl.properties[name] = value;\n        }\n        this.delegate.setProperty(el, name, value);\n    };\n    DebugRenderer2.prototype.listen = function (target, eventName, callback) {\n        if (typeof target !== 'string') {\n            var debugEl = getDebugNode(target);\n            if (debugEl) {\n                debugEl.listeners.push(new EventListener(eventName, callback));\n            }\n        }\n        return this.delegate.listen(target, eventName, callback);\n    };\n    DebugRenderer2.prototype.parentNode = function (node) { return this.delegate.parentNode(node); };\n    DebugRenderer2.prototype.nextSibling = function (node) { return this.delegate.nextSibling(node); };\n    DebugRenderer2.prototype.setValue = function (node, value) { return this.delegate.setValue(node, value); };\n    return DebugRenderer2;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction overrideProvider(override) {\n    initServicesIfNeeded();\n    return Services.overrideProvider(override);\n}\nfunction overrideComponentView(comp, componentFactory) {\n    initServicesIfNeeded();\n    return Services.overrideComponentView(comp, componentFactory);\n}\nfunction clearOverrides() {\n    initServicesIfNeeded();\n    return Services.clearOverrides();\n}\n// Attention: this function is called as top level function.\n// Putting any logic in here will destroy closure tree shaking!\nfunction createNgModuleFactory(ngModuleType, bootstrapComponents, defFactory) {\n    return new NgModuleFactory_(ngModuleType, bootstrapComponents, defFactory);\n}\nvar NgModuleFactory_ = /** @class */ (function (_super) {\n    tslib_1.__extends(NgModuleFactory_, _super);\n    function NgModuleFactory_(moduleType, _bootstrapComponents, _ngModuleDefFactory) {\n        var _this = \n        // Attention: this ctor is called as top level function.\n        // Putting any logic in here will destroy closure tree shaking!\n        _super.call(this) || this;\n        _this.moduleType = moduleType;\n        _this._bootstrapComponents = _bootstrapComponents;\n        _this._ngModuleDefFactory = _ngModuleDefFactory;\n        return _this;\n    }\n    NgModuleFactory_.prototype.create = function (parentInjector) {\n        initServicesIfNeeded();\n        var def = resolveDefinition(this._ngModuleDefFactory);\n        return Services.createNgModuleRef(this.moduleType, parentInjector || Injector.NULL, this._bootstrapComponents, def);\n    };\n    return NgModuleFactory_;\n}(NgModuleFactory));\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// The functions in this file verify that the assumptions we are making\n// about state in an instruction are correct before implementing any logic.\n// They are meant only to be called in dev mode as sanity checks.\n\nfunction assertEqual(actual, expected, msg) {\n    if (actual != expected) {\n        throwError(msg);\n    }\n}\nfunction assertNotEqual(actual, expected, msg) {\n    if (actual == expected) {\n        throwError(msg);\n    }\n}\nfunction assertSame(actual, expected, msg) {\n    if (actual !== expected) {\n        throwError(msg);\n    }\n}\nfunction assertLessThan(actual, expected, msg) {\n    if (actual >= expected) {\n        throwError(msg);\n    }\n}\nfunction assertNull(actual, msg) {\n    if (actual != null) {\n        throwError(msg);\n    }\n}\nfunction assertNotNull(actual, msg) {\n    if (actual == null) {\n        throwError(msg);\n    }\n}\nfunction assertComponentType(actual, msg) {\n    if (msg === void 0) { msg = 'Type passed in is not ComponentType, it does not have \\'ngComponentDef\\' property.'; }\n    if (!actual.ngComponentDef) {\n        throwError(msg);\n    }\n}\nfunction throwError(msg) {\n    throw new Error(\"ASSERTION ERROR: \" + msg);\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If this is the first template pass, any ngOnInit or ngDoCheck hooks will be queued into\n * TView.initHooks during directiveCreate.\n *\n * The directive index and hook type are encoded into one number (1st bit: type, remaining bits:\n * directive index), then saved in the even indices of the initHooks array. The odd indices\n * hold the hook functions themselves.\n *\n * @param index The index of the directive in LView.data\n * @param hooks The static hooks map on the directive def\n * @param tView The current TView\n */\nfunction queueInitHooks(index, onInit, doCheck, tView) {\n    ngDevMode &&\n        assertEqual(tView.firstTemplatePass, true, 'Should only be called on first template pass');\n    if (onInit) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, onInit);\n    }\n    if (doCheck) {\n        (tView.initHooks || (tView.initHooks = [])).push(index, doCheck);\n        (tView.checkHooks || (tView.checkHooks = [])).push(index, doCheck);\n    }\n}\n/**\n * Loops through the directives on a node and queues all their hooks except ngOnInit\n * and ngDoCheck, which are queued separately in directiveCreate.\n */\nfunction queueLifecycleHooks(flags, currentView) {\n    var tView = currentView.tView;\n    if (tView.firstTemplatePass === true) {\n        var start = flags >> 13;\n        var size = (flags & 8190 /* SIZE_MASK */) >> 1;\n        var end = start + size;\n        // It's necessary to loop through the directives at elementEnd() (rather than processing in\n        // directiveCreate) so we can preserve the current hook order. Content, view, and destroy\n        // hooks for projected components and directives must be called *before* their hosts.\n        for (var i = start; i < end; i++) {\n            var def = tView.directives[i];\n            queueContentHooks(def, tView, i);\n            queueViewHooks(def, tView, i);\n            queueDestroyHooks(def, tView, i);\n        }\n    }\n}\n/** Queues afterContentInit and afterContentChecked hooks on TView */\nfunction queueContentHooks(def, tView, i) {\n    if (def.afterContentInit) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentInit);\n    }\n    if (def.afterContentChecked) {\n        (tView.contentHooks || (tView.contentHooks = [])).push(i, def.afterContentChecked);\n        (tView.contentCheckHooks || (tView.contentCheckHooks = [])).push(i, def.afterContentChecked);\n    }\n}\n/** Queues afterViewInit and afterViewChecked hooks on TView */\nfunction queueViewHooks(def, tView, i) {\n    if (def.afterViewInit) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewInit);\n    }\n    if (def.afterViewChecked) {\n        (tView.viewHooks || (tView.viewHooks = [])).push(i, def.afterViewChecked);\n        (tView.viewCheckHooks || (tView.viewCheckHooks = [])).push(i, def.afterViewChecked);\n    }\n}\n/** Queues onDestroy hooks on TView */\nfunction queueDestroyHooks(def, tView, i) {\n    if (def.onDestroy != null) {\n        (tView.destroyHooks || (tView.destroyHooks = [])).push(i, def.onDestroy);\n    }\n}\n/**\n * Calls onInit and doCheck calls if they haven't already been called.\n *\n * @param currentView The current view\n */\nfunction executeInitHooks(currentView, tView, creationMode) {\n    if (currentView.lifecycleStage === 1 /* INIT */) {\n        executeHooks((currentView.directives), tView.initHooks, tView.checkHooks, creationMode);\n        currentView.lifecycleStage = 2 /* AFTER_INIT */;\n    }\n}\n/**\n * Iterates over afterViewInit and afterViewChecked functions and calls them.\n *\n * @param currentView The current view\n */\nfunction executeHooks(data, allHooks, checkHooks, creationMode) {\n    var hooksToCall = creationMode ? allHooks : checkHooks;\n    if (hooksToCall) {\n        callHooks(data, hooksToCall);\n    }\n}\n/**\n * Calls lifecycle hooks with their contexts, skipping init hooks if it's not\n * creation mode.\n *\n * @param currentView The current view\n * @param arr The array in which the hooks are found\n */\nfunction callHooks(data, arr) {\n    for (var i = 0; i < arr.length; i += 2) {\n        arr[i | 1].call(data[arr[i]]);\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nif (typeof ngDevMode == 'undefined') {\n    if (typeof window != 'undefined')\n        window.ngDevMode = true;\n    if (typeof self != 'undefined')\n        self.ngDevMode = true;\n    if (typeof global != 'undefined')\n        global.ngDevMode = true;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar NG_PROJECT_AS_ATTR_NAME = 'ngProjectAs';\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction assertNodeType(node, type) {\n    assertNotNull(node, 'should be called with a node');\n    assertEqual(node.type, type, \"should be a \" + typeName(type));\n}\nfunction assertNodeOfPossibleTypes(node) {\n    var types = [];\n    for (var _i = 1; _i < arguments.length; _i++) {\n        types[_i - 1] = arguments[_i];\n    }\n    assertNotNull(node, 'should be called with a node');\n    var found = types.some(function (type) { return node.type === type; });\n    assertEqual(found, true, \"Should be one of \" + types.map(typeName).join(', '));\n}\nfunction typeName(type) {\n    if (type == 1 /* Projection */)\n        return 'Projection';\n    if (type == 0 /* Container */)\n        return 'Container';\n    if (type == 2 /* View */)\n        return 'View';\n    if (type == 3 /* Element */)\n        return 'Element';\n    return '<unknown>';\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// TODO: cleanup once the code is merged in angular/angular\n// TODO: cleanup once the code is merged in angular/angular\nvar RendererStyleFlags3;\n// TODO: cleanup once the code is merged in angular/angular\n(function (RendererStyleFlags3) {\n    RendererStyleFlags3[RendererStyleFlags3[\"Important\"] = 1] = \"Important\";\n    RendererStyleFlags3[RendererStyleFlags3[\"DashCase\"] = 2] = \"DashCase\";\n})(RendererStyleFlags3 || (RendererStyleFlags3 = {}));\n/** Returns whether the `renderer` is a `ProceduralRenderer3` */\nfunction isProceduralRenderer(renderer) {\n    return !!(renderer.listen);\n}\nvar domRendererFactory3 = {\n    createRenderer: function (hostElement, rendererType) { return document; }\n};\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Returns the first RNode following the given LNode in the same parent DOM element.\n *\n * This is needed in order to insert the given node with insertBefore.\n *\n * @param node The node whose following DOM node must be found.\n * @param stopNode A parent node at which the lookup in the tree should be stopped, or null if the\n * lookup should not be stopped until the result is found.\n * @returns RNode before which the provided node should be inserted or null if the lookup was\n * stopped\n * or if there is no native node after the given logical node in the same native parent.\n */\nfunction findNextRNodeSibling(node, stopNode) {\n    var currentNode = node;\n    while (currentNode && currentNode !== stopNode) {\n        var pNextOrParent = currentNode.pNextOrParent;\n        if (pNextOrParent) {\n            while (pNextOrParent.type !== 1 /* Projection */) {\n                var nativeNode = findFirstRNode(pNextOrParent);\n                if (nativeNode) {\n                    return nativeNode;\n                }\n                pNextOrParent = (pNextOrParent.pNextOrParent);\n            }\n            currentNode = pNextOrParent;\n        }\n        else {\n            var currentSibling = currentNode.next;\n            while (currentSibling) {\n                var nativeNode = findFirstRNode(currentSibling);\n                if (nativeNode) {\n                    return nativeNode;\n                }\n                currentSibling = currentSibling.next;\n            }\n            var parentNode = currentNode.parent;\n            currentNode = null;\n            if (parentNode) {\n                var parentType = parentNode.type;\n                if (parentType === 0 /* Container */ || parentType === 2 /* View */) {\n                    currentNode = parentNode;\n                }\n            }\n        }\n    }\n    return null;\n}\n/**\n * Get the next node in the LNode tree, taking into account the place where a node is\n * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n *\n * @param node The node whose next node in the LNode tree must be found.\n * @return LNode|null The next sibling in the LNode tree.\n */\nfunction getNextLNodeWithProjection(node) {\n    var pNextOrParent = node.pNextOrParent;\n    if (pNextOrParent) {\n        // The node is projected\n        var isLastProjectedNode = pNextOrParent.type === 1;\n        // returns pNextOrParent if we are not at the end of the list, null otherwise\n        return isLastProjectedNode ? null : pNextOrParent;\n    }\n    // returns node.next because the the node is not projected\n    return node.next;\n}\n/**\n * Find the next node in the LNode tree, taking into account the place where a node is\n * projected (in the shadow DOM) rather than where it comes from (in the light DOM).\n *\n * If there is no sibling node, this function goes to the next sibling of the parent node...\n * until it reaches rootNode (at which point null is returned).\n *\n * @param initialNode The node whose following node in the LNode tree must be found.\n * @param rootNode The root node at which the lookup should stop.\n * @return LNode|null The following node in the LNode tree.\n */\nfunction getNextOrParentSiblingNode(initialNode, rootNode) {\n    var node = initialNode;\n    var nextNode = getNextLNodeWithProjection(node);\n    while (node && !nextNode) {\n        // if node.pNextOrParent is not null here, it is not the next node\n        // (because, at this point, nextNode is null, so it is the parent)\n        node = node.pNextOrParent || node.parent;\n        if (node === rootNode) {\n            return null;\n        }\n        nextNode = node && getNextLNodeWithProjection(node);\n    }\n    return nextNode;\n}\n/**\n * Returns the first RNode inside the given LNode.\n *\n * @param node The node whose first DOM node must be found\n * @returns RNode The first RNode of the given LNode or null if there is none.\n */\nfunction findFirstRNode(rootNode) {\n    var node = rootNode;\n    while (node) {\n        var nextNode = null;\n        if (node.type === 3 /* Element */) {\n            // A LElementNode has a matching RNode in LElementNode.native\n            return node.native;\n        }\n        else if (node.type === 0 /* Container */) {\n            // For container look at the first node of the view next\n            var childContainerData = node.data;\n            nextNode = childContainerData.views.length ? childContainerData.views[0].child : null;\n        }\n        else if (node.type === 1 /* Projection */) {\n            // For Projection look at the first projected node\n            nextNode = node.data.head;\n        }\n        else {\n            // Otherwise look at the first child\n            nextNode = node.child;\n        }\n        node = nextNode === null ? getNextOrParentSiblingNode(node, rootNode) : nextNode;\n    }\n    return null;\n}\nfunction addRemoveViewFromContainer(container, rootNode, insertMode, beforeNode) {\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    ngDevMode && assertNodeType(rootNode, 2 /* View */);\n    var parentNode = container.data.renderParent;\n    var parent = parentNode ? parentNode.native : null;\n    var node = rootNode.child;\n    if (parent) {\n        while (node) {\n            var nextNode = null;\n            var renderer = container.view.renderer;\n            if (node.type === 3 /* Element */) {\n                if (insertMode) {\n                    isProceduralRenderer(renderer) ?\n                        renderer.insertBefore(parent, (node.native), beforeNode) :\n                        parent.insertBefore((node.native), beforeNode, true);\n                }\n                else {\n                    isProceduralRenderer(renderer) ? renderer.removeChild(parent, (node.native)) :\n                        parent.removeChild((node.native));\n                }\n                nextNode = node.next;\n            }\n            else if (node.type === 0 /* Container */) {\n                // if we get to a container, it must be a root node of a view because we are only\n                // propagating down into child views / containers and not child elements\n                var childContainerData = node.data;\n                childContainerData.renderParent = parentNode;\n                nextNode = childContainerData.views.length ? childContainerData.views[0].child : null;\n            }\n            else if (node.type === 1 /* Projection */) {\n                nextNode = node.data.head;\n            }\n            else {\n                nextNode = node.child;\n            }\n            if (nextNode === null) {\n                node = getNextOrParentSiblingNode(node, rootNode);\n            }\n            else {\n                node = nextNode;\n            }\n        }\n    }\n}\n/**\n * Traverses the tree of component views and containers to remove listeners and\n * call onDestroy callbacks.\n *\n * Notes:\n *  - Because it's used for onDestroy calls, it needs to be bottom-up.\n *  - Must process containers instead of their views to avoid splicing\n *  when views are destroyed and re-added.\n *  - Using a while loop because it's faster than recursion\n *  - Destroy only called on movement to sibling or movement to parent (laterally or up)\n *\n *  @param rootView The view to destroy\n */\nfunction destroyViewTree(rootView) {\n    var viewOrContainer = rootView;\n    while (viewOrContainer) {\n        var next = null;\n        if (viewOrContainer.views && viewOrContainer.views.length) {\n            next = viewOrContainer.views[0].data;\n        }\n        else if (viewOrContainer.child) {\n            next = viewOrContainer.child;\n        }\n        else if (viewOrContainer.next) {\n            cleanUpView(viewOrContainer);\n            next = viewOrContainer.next;\n        }\n        if (next == null) {\n            // If the viewOrContainer is the rootView, then the cleanup is done twice.\n            // Without this check, ngOnDestroy would be called twice for a directive on an element.\n            while (viewOrContainer && !viewOrContainer.next && viewOrContainer !== rootView) {\n                cleanUpView(viewOrContainer);\n                viewOrContainer = getParentState(viewOrContainer, rootView);\n            }\n            cleanUpView(viewOrContainer || rootView);\n            next = viewOrContainer && viewOrContainer.next;\n        }\n        viewOrContainer = next;\n    }\n}\n/**\n * Inserts a view into a container.\n *\n * This adds the view to the container's array of active views in the correct\n * position. It also adds the view's elements to the DOM if the container isn't a\n * root node of another view (in that case, the view's elements will be added when\n * the container's parent view is added later).\n *\n * @param container The container into which the view should be inserted\n * @param newView The view to insert\n * @param index The index at which to insert the view\n * @returns The inserted view\n */\nfunction insertView(container, newView, index) {\n    var state = container.data;\n    var views = state.views;\n    if (index > 0) {\n        // This is a new view, we need to add it to the children.\n        setViewNext(views[index - 1], newView);\n    }\n    if (index < views.length) {\n        setViewNext(newView, views[index]);\n        views.splice(index, 0, newView);\n    }\n    else {\n        views.push(newView);\n    }\n    // If the container's renderParent is null, we know that it is a root node of its own parent view\n    // and we should wait until that parent processes its nodes (otherwise, we will insert this view's\n    // nodes twice - once now and once when its parent inserts its views).\n    if (container.data.renderParent !== null) {\n        var beforeNode = findNextRNodeSibling(newView, container);\n        if (!beforeNode) {\n            var containerNextNativeNode = container.native;\n            if (containerNextNativeNode === undefined) {\n                containerNextNativeNode = container.native = findNextRNodeSibling(container, null);\n            }\n            beforeNode = containerNextNativeNode;\n        }\n        addRemoveViewFromContainer(container, newView, true, beforeNode);\n    }\n    return newView;\n}\n/**\n * Removes a view from a container.\n *\n * This method splices the view from the container's array of active views. It also\n * removes the view's elements from the DOM and conducts cleanup (e.g. removing\n * listeners, calling onDestroys).\n *\n * @param container The container from which to remove a view\n * @param removeIndex The index of the view to remove\n * @returns The removed view\n */\nfunction removeView(container, removeIndex) {\n    var views = container.data.views;\n    var viewNode = views[removeIndex];\n    if (removeIndex > 0) {\n        setViewNext(views[removeIndex - 1], viewNode.next);\n    }\n    views.splice(removeIndex, 1);\n    destroyViewTree(viewNode.data);\n    addRemoveViewFromContainer(container, viewNode, false);\n    // Notify query that view has been removed\n    container.data.queries && container.data.queries.removeView(removeIndex);\n    return viewNode;\n}\n/**\n * Sets a next on the view node, so views in for loops can easily jump from\n * one view to the next to add/remove elements. Also adds the LView (view.data)\n * to the view tree for easy traversal when cleaning up the view.\n *\n * @param view The view to set up\n * @param next The view's new next\n */\nfunction setViewNext(view, next) {\n    view.next = next;\n    view.data.next = next ? next.data : null;\n}\n/**\n * Determines which LViewOrLContainer to jump to when traversing back up the\n * tree in destroyViewTree.\n *\n * Normally, the view's parent LView should be checked, but in the case of\n * embedded views, the container (which is the view node's parent, but not the\n * LView's parent) needs to be checked for a possible next property.\n *\n * @param state The LViewOrLContainer for which we need a parent state\n * @param rootView The rootView, so we don't propagate too far up the view tree\n * @returns The correct parent LViewOrLContainer\n */\nfunction getParentState(state, rootView) {\n    var node;\n    if ((node = state.node) && node.type === 2 /* View */) {\n        // if it's an embedded view, the state needs to go up to the container, in case the\n        // container has a next\n        return node.parent.data;\n    }\n    else {\n        // otherwise, use parent view for containers or component views\n        return state.parent === rootView ? null : state.parent;\n    }\n}\n/**\n * Removes all listeners and call all onDestroys in a given view.\n *\n * @param view The LView to clean up\n */\nfunction cleanUpView(view) {\n    removeListeners(view);\n    executeOnDestroys(view);\n    executePipeOnDestroys(view);\n}\n/** Removes listeners and unsubscribes from output subscriptions */\nfunction removeListeners(view) {\n    var cleanup = (view.cleanup);\n    if (cleanup != null) {\n        for (var i = 0; i < cleanup.length - 1; i += 2) {\n            if (typeof cleanup[i] === 'string') {\n                cleanup[i + 1].removeEventListener(cleanup[i], cleanup[i + 2], cleanup[i + 3]);\n                i += 2;\n            }\n            else {\n                cleanup[i].call(cleanup[i + 1]);\n            }\n        }\n        view.cleanup = null;\n    }\n}\n/** Calls onDestroy hooks for this view */\nfunction executeOnDestroys(view) {\n    var tView = view.tView;\n    var destroyHooks;\n    if (tView != null && (destroyHooks = tView.destroyHooks) != null) {\n        callHooks((view.directives), destroyHooks);\n    }\n}\n/** Calls pipe destroy hooks for this view */\nfunction executePipeOnDestroys(view) {\n    var pipeDestroyHooks = view.tView && view.tView.pipeDestroyHooks;\n    if (pipeDestroyHooks) {\n        callHooks((view.data), pipeDestroyHooks);\n    }\n}\n/**\n * Returns whether a native element should be inserted in the given parent.\n *\n * The native node can be inserted when its parent is:\n * - A regular element => Yes\n * - A component host element =>\n *    - if the `currentView` === the parent `view`: The element is in the content (vs the\n *      template)\n *      => don't add as the parent component will project if needed.\n *    - `currentView` !== the parent `view` => The element is in the template (vs the content),\n *      add it\n * - View element => delay insertion, will be done on `viewEnd()`\n *\n * @param parent The parent in which to insert the child\n * @param currentView The LView being processed\n * @return boolean Whether the child element should be inserted.\n */\nfunction canInsertNativeNode(parent, currentView) {\n    var parentIsElement = parent.type === 3;\n    return parentIsElement &&\n        (parent.view !== currentView || parent.data === null /* Regular Element. */);\n}\n/**\n * Appends the `child` element to the `parent`.\n *\n * The element insertion might be delayed {@link canInsertNativeNode}\n *\n * @param parent The parent to which to append the child\n * @param child The child that should be appended\n * @param currentView The current LView\n * @returns Whether or not the child was appended\n */\nfunction appendChild(parent, child, currentView) {\n    if (child !== null && canInsertNativeNode(parent, currentView)) {\n        // We only add element if not in View or not projected.\n        var renderer = currentView.renderer;\n        isProceduralRenderer(renderer) ? renderer.appendChild(parent.native, child) :\n            parent.native.appendChild(child);\n        return true;\n    }\n    return false;\n}\n/**\n * Inserts the provided node before the correct element in the DOM.\n *\n * The element insertion might be delayed {@link canInsertNativeNode}\n *\n * @param node Node to insert\n * @param currentView Current LView\n */\nfunction insertChild(node, currentView) {\n    var parent = (node.parent);\n    if (canInsertNativeNode(parent, currentView)) {\n        var nativeSibling = findNextRNodeSibling(node, null);\n        var renderer = currentView.renderer;\n        isProceduralRenderer(renderer) ?\n            renderer.insertBefore((parent.native), (node.native), nativeSibling) :\n            parent.native.insertBefore((node.native), nativeSibling, false);\n    }\n}\n/**\n * Appends a projected node to the DOM, or in the case of a projected container,\n * appends the nodes from all of the container's active views to the DOM.\n *\n * @param node The node to process\n * @param currentParent The last parent element to be processed\n * @param currentView Current LView\n */\nfunction appendProjectedNode(node, currentParent, currentView) {\n    if (node.type !== 0 /* Container */) {\n        appendChild(currentParent, node.native, currentView);\n    }\n    else if (canInsertNativeNode(currentParent, currentView)) {\n        // The node we are adding is a Container and we are adding it to Element which\n        // is not a component (no more re-projection).\n        // Alternatively a container is projected at the root of a component's template\n        // and can't be re-projected (as not content of any component).\n        // Assignee the final projection location in those cases.\n        var lContainer = node.data;\n        lContainer.renderParent = currentParent;\n        var views = lContainer.views;\n        for (var i = 0; i < views.length; i++) {\n            addRemoveViewFromContainer(node, views[i], true, null);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nfunction isCssClassMatching(nodeClassAttrVal, cssClassToMatch) {\n    var nodeClassesLen = nodeClassAttrVal.length;\n    var matchIndex = nodeClassAttrVal.indexOf(cssClassToMatch);\n    var matchEndIdx = matchIndex + cssClassToMatch.length;\n    if (matchIndex === -1 // no match\n        || (matchIndex > 0 && nodeClassAttrVal[matchIndex - 1] !== ' ') // no space before\n        ||\n            (matchEndIdx < nodeClassesLen && nodeClassAttrVal[matchEndIdx] !== ' ')) {\n        return false;\n    }\n    return true;\n}\n/**\n * A utility function to match an Ivy node static data against a simple CSS selector\n *\n * @param node static data to match\n * @param selector\n * @returns true if node matches the selector.\n */\nfunction isNodeMatchingSimpleSelector(tNode, selector) {\n    var noOfSelectorParts = selector.length;\n    ngDevMode && assertNotNull(selector[0], 'the selector should have a tag name');\n    var tagNameInSelector = selector[0];\n    // check tag tame\n    if (tagNameInSelector !== '' && tagNameInSelector !== tNode.tagName) {\n        return false;\n    }\n    // short-circuit case where we are only matching on element's tag name\n    if (noOfSelectorParts === 1) {\n        return true;\n    }\n    // short-circuit case where an element has no attrs but a selector tries to match some\n    if (noOfSelectorParts > 1 && !tNode.attrs) {\n        return false;\n    }\n    var attrsInNode = (tNode.attrs);\n    for (var i = 1; i < noOfSelectorParts; i += 2) {\n        var attrNameInSelector = selector[i];\n        var attrIdxInNode = attrsInNode.indexOf(attrNameInSelector);\n        if (attrIdxInNode % 2 !== 0) {\n            // attribute names are stored at even indexes\n            return false;\n        }\n        else {\n            var attrValInSelector = selector[i + 1];\n            if (attrValInSelector !== '') {\n                // selector should also match on an attribute value\n                var attrValInNode = attrsInNode[attrIdxInNode + 1];\n                if (attrNameInSelector === 'class') {\n                    // iterate over all the remaining items in the selector selector array = class names\n                    for (i++; i < noOfSelectorParts; i++) {\n                        if (!isCssClassMatching(attrValInNode, selector[i])) {\n                            return false;\n                        }\n                    }\n                }\n                else if (attrValInSelector !== attrValInNode) {\n                    return false;\n                }\n            }\n        }\n    }\n    return true;\n}\nfunction isNodeMatchingSelectorWithNegations(tNode, selector) {\n    var positiveSelector = selector[0];\n    if (positiveSelector != null && !isNodeMatchingSimpleSelector(tNode, positiveSelector)) {\n        return false;\n    }\n    // do we have any negation parts in this selector?\n    var negativeSelectors = selector[1];\n    if (negativeSelectors) {\n        for (var i = 0; i < negativeSelectors.length; i++) {\n            // if one of negative selectors matched than the whole selector doesn't match\n            if (isNodeMatchingSimpleSelector(tNode, negativeSelectors[i])) {\n                return false;\n            }\n        }\n    }\n    return true;\n}\nfunction isNodeMatchingSelector(tNode, selector) {\n    for (var i = 0; i < selector.length; i++) {\n        if (isNodeMatchingSelectorWithNegations(tNode, selector[i])) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction getProjectAsAttrValue(tNode) {\n    var nodeAttrs = tNode.attrs;\n    if (nodeAttrs != null) {\n        var ngProjectAsAttrIdx = nodeAttrs.indexOf(NG_PROJECT_AS_ATTR_NAME);\n        // only check for ngProjectAs in attribute names, don't accidentally match attribute's value\n        // (attribute names are stored at even indexes)\n        if ((ngProjectAsAttrIdx & 1) === 0) {\n            return nodeAttrs[ngProjectAsAttrIdx + 1];\n        }\n    }\n    return null;\n}\n/**\n * Checks a given node against matching selectors and returns\n * selector index (or 0 if none matched).\n *\n * This function takes into account the ngProjectAs attribute: if present its value will be compared\n * to the raw (un-parsed) CSS selector instead of using standard selector matching logic.\n */\nfunction matchingSelectorIndex(tNode, selectors, textSelectors) {\n    var ngProjectAsAttrVal = getProjectAsAttrValue(tNode);\n    for (var i = 0; i < selectors.length; i++) {\n        // if a node has the ngProjectAs attribute match it against unparsed selector\n        // match a node against a parsed selector only if ngProjectAs attribute is not present\n        if (ngProjectAsAttrVal === textSelectors[i] ||\n            ngProjectAsAttrVal === null && isNodeMatchingSelector(tNode, selectors[i])) {\n            return i + 1; // first matching selector \"captures\" a given node\n        }\n    }\n    return 0;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n* Must use this method for CD (instead of === ) since NaN !== NaN\n*/\nfunction isDifferent(a, b) {\n    // NaN is the only value that is not equal to itself so the first\n    // test checks if both a and b are not NaN\n    return !(a !== a && b !== b) && a !== b;\n}\nfunction stringify$1(value) {\n    if (typeof value == 'function')\n        return value.name || value;\n    if (typeof value == 'string')\n        return value;\n    if (value == null)\n        return '';\n    return '' + value;\n}\n/**\n *  Function that throws a \"not implemented\" error so it's clear certain\n *  behaviors/methods aren't yet ready.\n *\n * @returns Not implemented error\n */\nfunction notImplemented() {\n    return new Error('NotImplemented');\n}\n/**\n * Flattens an array in non-recursive way. Input arrays are not modified.\n */\nfunction flatten$1(list) {\n    var result = [];\n    var i = 0;\n    while (i < list.length) {\n        var item = list[i];\n        if (Array.isArray(item)) {\n            if (item.length > 0) {\n                list = item.concat(list.slice(i + 1));\n                i = 0;\n            }\n            else {\n                i++;\n            }\n        }\n        else {\n            result.push(item);\n            i++;\n        }\n    }\n    return result;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Directive (D) sets a property on all component instances using this constant as a key and the\n * component's host node (LElement) as the value. This is used in methods like detectChanges to\n * facilitate jumping from an instance to the host node.\n */\nvar NG_HOST_SYMBOL = '__ngHostLNode__';\n/**\n * A permanent marker promise which signifies that the current CD tree is\n * clean.\n */\nvar _CLEAN_PROMISE = Promise.resolve(null);\n/**\n * Directive and element indices for top-level directive.\n *\n * Saved here to avoid re-instantiating an array on every change detection run.\n */\nvar _ROOT_DIRECTIVE_INDICES = [0, 0];\n/**\n * This property gets set before entering a template.\n *\n * This renderer can be one of two varieties of Renderer3:\n *\n * - ObjectedOrientedRenderer3\n *\n * This is the native browser API style, e.g. operations are methods on individual objects\n * like HTMLElement. With this style, no additional code is needed as a facade (reducing payload\n * size).\n *\n * - ProceduralRenderer3\n *\n * In non-native browser environments (e.g. platforms such as web-workers), this is the facade\n * that enables element manipulation. This also facilitates backwards compatibility with\n * Renderer2.\n */\nvar renderer;\nvar rendererFactory;\nfunction getRenderer() {\n    // top level variables should not be exported for performance reason (PERF_NOTES.md)\n    return renderer;\n}\n/** Used to set the parent property when nodes are created. */\nvar previousOrParentNode;\nfunction getPreviousOrParentNode() {\n    // top level variables should not be exported for performance reason (PERF_NOTES.md)\n    return previousOrParentNode;\n}\n/**\n * If `isParent` is:\n *  - `true`: then `previousOrParentNode` points to a parent node.\n *  - `false`: then `previousOrParentNode` points to previous node (sibling).\n */\nvar isParent;\n/**\n * Static data that corresponds to the instance-specific data array on an LView.\n *\n * Each node's static data is stored in tData at the same index that it's stored\n * in the data array. Any nodes that do not have static data store a null value in\n * tData to avoid a sparse array.\n */\nvar tData;\n/**\n * State of the current view being processed.\n *\n * NOTE: we cheat here and initialize it to `null` even thought the type does not\n * contain `null`. This is because we expect this value to be not `null` as soon\n * as we enter the view. Declaring the type as `null` would require us to place `!`\n * in most instructions since they all assume that `currentView` is defined.\n */\nvar currentView = (null);\nvar currentQueries;\nfunction getCurrentQueries(QueryType) {\n    // top level variables should not be exported for performance reason (PERF_NOTES.md)\n    return currentQueries || (currentQueries = new QueryType());\n}\n/**\n * This property gets set before entering a template.\n */\nvar creationMode;\nfunction getCreationMode() {\n    // top level variables should not be exported for performance reason (PERF_NOTES.md)\n    return creationMode;\n}\n/**\n * An array of nodes (text, element, container, etc), pipes, their bindings, and\n * any local variables that need to be stored between invocations.\n */\nvar data;\n/**\n * An array of directive instances in the current view.\n *\n * These must be stored separately from LNodes because their presence is\n * unknown at compile-time and thus space cannot be reserved in data[].\n */\nvar directives;\n/**\n * Points to the next binding index to read or write to.\n */\nvar bindingIndex;\n/**\n * When a view is destroyed, listeners need to be released and outputs need to be\n * unsubscribed. This cleanup array stores both listener data (in chunks of 4)\n * and output data (in chunks of 2) for a particular view. Combining the arrays\n * saves on memory (70 bytes per array) and on a few bytes of code size (for two\n * separate for loops).\n *\n * If it's a listener being stored:\n * 1st index is: event name to remove\n * 2nd index is: native element\n * 3rd index is: listener function\n * 4th index is: useCapture boolean\n *\n * If it's an output subscription:\n * 1st index is: unsubscribe function\n * 2nd index is: context for function\n */\nvar cleanup;\n/**\n * In this mode, any changes in bindings will throw an ExpressionChangedAfterChecked error.\n *\n * Necessary to support ChangeDetectorRef.checkNoChanges().\n */\nvar checkNoChangesMode = false;\n/** Whether or not this is the first time the current view has been processed. */\nvar firstTemplatePass = true;\n/**\n * Swap the current state with a new state.\n *\n * For performance reasons we store the state in the top level of the module.\n * This way we minimize the number of properties to read. Whenever a new view\n * is entered we have to store the state for later, and when the view is\n * exited the state has to be restored\n *\n * @param newView New state to become active\n * @param host Element to which the View is a child of\n * @returns the previous state;\n */\nfunction enterView(newView, host) {\n    var oldView = currentView;\n    data = newView && newView.data;\n    directives = newView && newView.directives;\n    bindingIndex = newView && newView.bindingStartIndex || 0;\n    tData = newView && newView.tView.data;\n    creationMode = newView && (newView.flags & 1 /* CreationMode */) === 1 /* CreationMode */;\n    firstTemplatePass = newView && newView.tView.firstTemplatePass;\n    cleanup = newView && newView.cleanup;\n    renderer = newView && newView.renderer;\n    if (host != null) {\n        previousOrParentNode = host;\n        isParent = true;\n    }\n    currentView = newView;\n    currentQueries = newView && newView.queries;\n    return oldView;\n}\n/**\n * Used in lieu of enterView to make it clear when we are exiting a child view. This makes\n * the direction of traversal (up or down the view tree) a bit clearer.\n */\nfunction leaveView(newView) {\n    if (!checkNoChangesMode) {\n        executeHooks((directives), currentView.tView.viewHooks, currentView.tView.viewCheckHooks, creationMode);\n    }\n    // Views should be clean and in update mode after being checked, so these bits are cleared\n    currentView.flags &= ~(1 /* CreationMode */ | 4 /* Dirty */);\n    currentView.lifecycleStage = 1 /* INIT */;\n    enterView(newView, null);\n}\n/**  Refreshes directives in this view and triggers any init/content hooks.  */\nfunction refreshDirectives() {\n    executeInitAndContentHooks();\n    var tView = currentView.tView;\n    // This needs to be set before children are processed to support recursive components\n    tView.firstTemplatePass = firstTemplatePass = false;\n    setHostBindings(tView.hostBindings);\n    refreshChildComponents(tView.components);\n}\n/** Sets the host bindings for the current view. */\nfunction setHostBindings(bindings) {\n    if (bindings != null) {\n        var defs = (currentView.tView.directives);\n        for (var i = 0; i < bindings.length; i += 2) {\n            var dirIndex = bindings[i];\n            var def = defs[dirIndex];\n            def.hostBindings && def.hostBindings(dirIndex, bindings[i | 1]);\n        }\n    }\n}\n/** Refreshes child components in the current view. */\nfunction refreshChildComponents(components) {\n    if (components != null) {\n        for (var i = 0; i < components.length; i += 2) {\n            componentRefresh(components[i], components[i | 1]);\n        }\n    }\n}\nfunction executeInitAndContentHooks() {\n    if (!checkNoChangesMode) {\n        var tView = currentView.tView;\n        executeInitHooks(currentView, tView, creationMode);\n        executeHooks((directives), tView.contentHooks, tView.contentCheckHooks, creationMode);\n    }\n}\nfunction createLView(viewId, renderer, tView, template, context, flags) {\n    var newView = {\n        parent: currentView,\n        id: viewId,\n        // -1 for component views\n        flags: flags | 1 /* CreationMode */ | 8 /* Attached */,\n        node: (null),\n        // until we initialize it in createNode.\n        data: [],\n        directives: null,\n        tView: tView,\n        cleanup: null,\n        renderer: renderer,\n        child: null,\n        tail: null,\n        next: null,\n        bindingStartIndex: null,\n        template: template,\n        context: context,\n        dynamicViewCount: 0,\n        lifecycleStage: 1 /* INIT */,\n        queries: null,\n    };\n    return newView;\n}\nfunction createLNode(index, type, native, state) {\n    var parent = isParent ? previousOrParentNode :\n        previousOrParentNode && previousOrParentNode.parent;\n    var queries = (isParent ? currentQueries : previousOrParentNode && previousOrParentNode.queries) ||\n        parent && parent.queries && parent.queries.child();\n    var isState = state != null;\n    var node = {\n        type: type,\n        native: native,\n        view: currentView,\n        parent: parent,\n        child: null,\n        next: null,\n        nodeInjector: parent ? parent.nodeInjector : null,\n        data: isState ? state : null,\n        queries: queries,\n        tNode: null,\n        pNextOrParent: null\n    };\n    if ((type & 2 /* ViewOrElement */) === 2 /* ViewOrElement */ && isState) {\n        // Bit of a hack to bust through the readonly because there is a circular dep between\n        // LView and LNode.\n        ngDevMode && assertNull(state.node, 'LView.node should not have been initialized');\n        state.node = node;\n    }\n    if (index != null) {\n        // We are Element or Container\n        ngDevMode && assertDataNext(index);\n        data[index] = node;\n        // Every node adds a value to the static data array to avoid a sparse array\n        if (index >= tData.length) {\n            tData[index] = null;\n        }\n        else {\n            node.tNode = tData[index];\n        }\n        // Now link ourselves into the tree.\n        if (isParent) {\n            currentQueries = null;\n            if (previousOrParentNode.view === currentView ||\n                previousOrParentNode.type === 2 /* View */) {\n                // We are in the same view, which means we are adding content node to the parent View.\n                ngDevMode && assertNull(previousOrParentNode.child, \"previousOrParentNode's child should not have been set.\");\n                previousOrParentNode.child = node;\n            }\n            else {\n                // We are adding component view, so we don't link parent node child to this node.\n            }\n        }\n        else if (previousOrParentNode) {\n            ngDevMode && assertNull(previousOrParentNode.next, \"previousOrParentNode's next property should not have been set.\");\n            previousOrParentNode.next = node;\n        }\n    }\n    previousOrParentNode = node;\n    isParent = true;\n    return node;\n}\n/**\n * Resets the application state.\n */\nfunction resetApplicationState() {\n    isParent = false;\n    previousOrParentNode = (null);\n}\n/**\n *\n * @param hostNode Existing node to render into.\n * @param template Template function with the instructions.\n * @param context to pass into the template.\n * @param providedRendererFactory renderer factory to use\n * @param host The host element node to use\n * @param defs Any directive or pipe defs that should be used for matching\n */\n\nfunction renderEmbeddedTemplate(viewNode, template, context, renderer) {\n    var _isParent = isParent;\n    var _previousOrParentNode = previousOrParentNode;\n    try {\n        isParent = true;\n        previousOrParentNode = (null);\n        var cm = false;\n        if (viewNode == null) {\n            // TODO: revisit setting currentView when re-writing view containers\n            var directives_1 = currentView && currentView.tView.directiveRegistry;\n            var pipes = currentView && currentView.tView.pipeRegistry;\n            var view = createLView(-1, renderer, createTView(directives_1, pipes), template, context, 2 /* CheckAlways */);\n            viewNode = createLNode(null, 2 /* View */, null, view);\n            cm = true;\n        }\n        enterView(viewNode.data, viewNode);\n        template(context, cm);\n        refreshDynamicChildren();\n        refreshDirectives();\n    }\n    finally {\n        leaveView(currentView && (currentView.parent));\n        isParent = _isParent;\n        previousOrParentNode = _previousOrParentNode;\n    }\n    return viewNode;\n}\nfunction renderComponentOrTemplate(node, hostView, componentOrContext, template) {\n    var oldView = enterView(hostView, node);\n    try {\n        if (rendererFactory.begin) {\n            rendererFactory.begin();\n        }\n        if (template) {\n            template((componentOrContext), creationMode);\n            refreshDirectives();\n        }\n        else {\n            executeInitAndContentHooks();\n            // Element was stored at 0 in data and directive was stored at 0 in directives\n            // in renderComponent()\n            setHostBindings(_ROOT_DIRECTIVE_INDICES);\n            componentRefresh(0, 0);\n        }\n    }\n    finally {\n        if (rendererFactory.end) {\n            rendererFactory.end();\n        }\n        leaveView(oldView);\n    }\n}\n/**\n * Create DOM element. The instruction must later be followed by `elementEnd()` call.\n *\n * @param index Index of the element in the data array\n * @param name Name of the DOM Node\n * @param attrs Statically bound set of attributes to be written into the DOM element on creation.\n * @param localRefs A set of local reference bindings on the element.\n *\n * Attributes and localRefs are passed as an array of strings where elements with an even index\n * hold an attribute name and elements with an odd index hold an attribute value, ex.:\n * ['id', 'warning5', 'class', 'alert']\n */\nfunction elementStart(index, name, attrs, localRefs) {\n    var node;\n    var native;\n    ngDevMode &&\n        assertNull(currentView.bindingStartIndex, 'elements should be created before any bindings');\n    native = renderer.createElement(name);\n    node = createLNode(index, 3 /* Element */, (native), null);\n    if (attrs)\n        setUpAttributes(native, attrs);\n    appendChild((node.parent), native, currentView);\n    if (firstTemplatePass) {\n        var tNode = createTNode(name, attrs || null, null);\n        cacheMatchingDirectivesForNode(tNode);\n        ngDevMode && assertDataInRange(index - 1);\n        node.tNode = tData[index] = tNode;\n    }\n    hack_declareDirectives(index, localRefs || null);\n    return native;\n}\nfunction cacheMatchingDirectivesForNode(tNode) {\n    var registry = currentView.tView.directiveRegistry;\n    var startIndex = directives ? directives.length : 0;\n    if (registry) {\n        var componentFlag = 0;\n        var size = 0;\n        for (var i = 0; i < registry.length; i++) {\n            var def = registry[i];\n            if (isNodeMatchingSelector(tNode, (def.selector))) {\n                if (def.template) {\n                    if (componentFlag)\n                        throwMultipleComponentError(tNode);\n                    componentFlag |= 1 /* Component */;\n                }\n                (currentView.tView.directives || (currentView.tView.directives = [])).push(def);\n                size++;\n            }\n        }\n        if (size > 0)\n            buildTNodeFlags(tNode, startIndex, size, componentFlag);\n    }\n}\nfunction buildTNodeFlags(tNode, index, size, component) {\n    tNode.flags = (index << 13 /* INDX_SHIFT */) | (size << 1 /* SIZE_SHIFT */) | component;\n}\nfunction throwMultipleComponentError(tNode) {\n    throw new Error(\"Multiple components match node with tagname \" + tNode.tagName);\n}\n/** Stores index of component's host element so it will be queued for view refresh during CD. */\nfunction queueComponentIndexForCheck(dirIndex, elIndex) {\n    if (firstTemplatePass) {\n        (currentView.tView.components || (currentView.tView.components = [])).push(dirIndex, elIndex);\n    }\n}\n/** Stores index of directive and host element so it will be queued for binding refresh during CD.\n */\nfunction queueHostBindingForCheck(dirIndex, elIndex) {\n    ngDevMode &&\n        assertEqual(firstTemplatePass, true, 'Should only be called in first template pass.');\n    (currentView.tView.hostBindings || (currentView.tView.hostBindings = [])).push(dirIndex, elIndex);\n}\n/** Sets the context for a ChangeDetectorRef to the given instance. */\nfunction initChangeDetectorIfExisting(injector, instance, view) {\n    if (injector && injector.changeDetectorRef != null) {\n        injector.changeDetectorRef._setComponentContext(view, instance);\n    }\n}\nfunction isComponent(tNode) {\n    return (tNode.flags & 1 /* Component */) === 1 /* Component */;\n}\n/**\n * This function instantiates the given directives. It is a hack since it assumes the directives\n * come in the correct order for DI.\n */\nfunction hack_declareDirectives(elementIndex, localRefs) {\n    var tNode = (previousOrParentNode.tNode);\n    var size = (tNode.flags & 8190 /* SIZE_MASK */) >> 1;\n    var exportsMap = firstTemplatePass && localRefs ? { '': -1 } : null;\n    if (size > 0) {\n        var startIndex = tNode.flags >> 13;\n        var endIndex = startIndex + size;\n        var tDirectives = (currentView.tView.directives);\n        // TODO(mhevery): This assumes that the directives come in correct order, which\n        // is not guaranteed. Must be refactored to take it into account.\n        for (var i = startIndex; i < endIndex; i++) {\n            var def = tDirectives[i];\n            directiveCreate(elementIndex, def.factory(), def);\n            saveNameToExportMap(startIndex, def, exportsMap);\n            startIndex++;\n        }\n    }\n    if (firstTemplatePass)\n        cacheMatchingLocalNames(tNode, localRefs, (exportsMap));\n    saveResolvedLocalsInData();\n}\n/** Caches local names and their matching directive indices for query and template lookups. */\nfunction cacheMatchingLocalNames(tNode, localRefs, exportsMap) {\n    if (localRefs) {\n        var localNames = tNode.localNames = [];\n        // Local names must be stored in tNode in the same order that localRefs are defined\n        // in the template to ensure the data is loaded in the same slots as their refs\n        // in the template (for template queries).\n        for (var i = 0; i < localRefs.length; i += 2) {\n            var index = exportsMap[localRefs[i | 1]];\n            if (index == null)\n                throw new Error(\"Export of name '\" + localRefs[i | 1] + \"' not found!\");\n            localNames.push(localRefs[i], index);\n        }\n    }\n}\n/**\n * Builds up an export map as directives are created, so local refs can be quickly mapped\n * to their directive instances.\n */\nfunction saveNameToExportMap(index, def, exportsMap) {\n    if (exportsMap) {\n        if (def.exportAs)\n            exportsMap[def.exportAs] = index;\n        if (def.template)\n            exportsMap[''] = index;\n    }\n}\n/**\n * Takes a list of local names and indices and pushes the resolved local variable values\n * to data[] in the same order as they are loaded in the template with load().\n */\nfunction saveResolvedLocalsInData() {\n    var localNames = previousOrParentNode.tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            var index = localNames[i | 1];\n            var value = index === -1 ? previousOrParentNode.native : directives[index];\n            data.push(value);\n        }\n    }\n}\n/**\n * Gets TView from a template function or creates a new TView\n * if it doesn't already exist.\n *\n * @param template The template from which to get static data\n * @param directives Directive defs that should be saved on TView\n * @param pipes Pipe defs that should be saved on TView\n * @returns TView\n */\nfunction getOrCreateTView(template, directives, pipes) {\n    return template.ngPrivateData ||\n        (template.ngPrivateData = createTView(directives, pipes));\n}\n/** Creates a TView instance */\nfunction createTView(defs, pipes) {\n    return {\n        data: [],\n        directives: null,\n        firstTemplatePass: true,\n        initHooks: null,\n        checkHooks: null,\n        contentHooks: null,\n        contentCheckHooks: null,\n        viewHooks: null,\n        viewCheckHooks: null,\n        destroyHooks: null,\n        pipeDestroyHooks: null,\n        hostBindings: null,\n        components: null,\n        directiveRegistry: typeof defs === 'function' ? defs() : defs,\n        pipeRegistry: typeof pipes === 'function' ? pipes() : pipes\n    };\n}\nfunction setUpAttributes(native, attrs) {\n    ngDevMode && assertEqual(attrs.length % 2, 0, 'each attribute should have a key and a value');\n    var isProc = isProceduralRenderer(renderer);\n    for (var i = 0; i < attrs.length; i += 2) {\n        var attrName = attrs[i];\n        if (attrName !== NG_PROJECT_AS_ATTR_NAME) {\n            var attrVal = attrs[i + 1];\n            isProc ? renderer.setAttribute(native, attrName, attrVal) :\n                native.setAttribute(attrName, attrVal);\n        }\n    }\n}\nfunction createError(text, token) {\n    return new Error(\"Renderer: \" + text + \" [\" + stringify$1(token) + \"]\");\n}\n/**\n * Locates the host native element, used for bootstrapping existing nodes into rendering pipeline.\n *\n * @param elementOrSelector Render element or CSS selector to locate the element.\n */\nfunction locateHostElement(factory, elementOrSelector) {\n    ngDevMode && assertDataInRange(-1);\n    rendererFactory = factory;\n    var defaultRenderer = factory.createRenderer(null, null);\n    var rNode = typeof elementOrSelector === 'string' ?\n        (isProceduralRenderer(defaultRenderer) ?\n            defaultRenderer.selectRootElement(elementOrSelector) :\n            defaultRenderer.querySelector(elementOrSelector)) :\n        elementOrSelector;\n    if (ngDevMode && !rNode) {\n        if (typeof elementOrSelector === 'string') {\n            throw createError('Host node with selector not found:', elementOrSelector);\n        }\n        else {\n            throw createError('Host node is required:', elementOrSelector);\n        }\n    }\n    return rNode;\n}\n/**\n * Creates the host LNode.\n *\n * @param rNode Render host element.\n * @param def ComponentDef\n *\n * @returns LElementNode created\n */\nfunction hostElement(tag, rNode, def) {\n    resetApplicationState();\n    var node = createLNode(0, 3 /* Element */, rNode, createLView(-1, renderer, getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs), null, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */));\n    if (firstTemplatePass) {\n        node.tNode = createTNode(tag, null, null);\n        // Root directive is stored at index 0, size 1\n        buildTNodeFlags(node.tNode, 0, 1, 1 /* Component */);\n        currentView.tView.directives = [def];\n    }\n    return node;\n}\n/**\n * Adds an event listener to the current node.\n *\n * If an output exists on one of the node's directives, it also subscribes to the output\n * and saves the subscription for later cleanup.\n *\n * @param eventName Name of the event\n * @param listenerFn The function to be called when event emits\n * @param useCapture Whether or not to use capture in event listener.\n */\nfunction listener(eventName, listenerFn, useCapture) {\n    if (useCapture === void 0) { useCapture = false; }\n    ngDevMode && assertPreviousIsParent();\n    var node = previousOrParentNode;\n    var native = node.native;\n    // In order to match current behavior, native DOM event listeners must be added for all\n    // events (including outputs).\n    var cleanupFns = cleanup || (cleanup = currentView.cleanup = []);\n    if (isProceduralRenderer(renderer)) {\n        var wrappedListener = wrapListenerWithDirtyLogic(currentView, listenerFn);\n        var cleanupFn = renderer.listen(native, eventName, wrappedListener);\n        cleanupFns.push(cleanupFn, null);\n    }\n    else {\n        var wrappedListener = wrapListenerWithDirtyAndDefault(currentView, listenerFn);\n        native.addEventListener(eventName, wrappedListener, useCapture);\n        cleanupFns.push(eventName, native, wrappedListener, useCapture);\n    }\n    var tNode = (node.tNode);\n    if (tNode.outputs === undefined) {\n        // if we create TNode here, inputs must be undefined so we know they still need to be\n        // checked\n        tNode.outputs = generatePropertyAliases(node.tNode.flags, 1 /* Output */);\n    }\n    var outputs = tNode.outputs;\n    var outputData;\n    if (outputs && (outputData = outputs[eventName])) {\n        createOutput(outputData, listenerFn);\n    }\n}\n/**\n * Iterates through the outputs associated with a particular event name and subscribes to\n * each output.\n */\nfunction createOutput(outputs, listener) {\n    for (var i = 0; i < outputs.length; i += 2) {\n        ngDevMode && assertDataInRange(outputs[i], (directives));\n        var subscription = directives[outputs[i]][outputs[i | 1]].subscribe(listener);\n        cleanup.push(subscription.unsubscribe, subscription);\n    }\n}\n/** Mark the end of the element. */\nfunction elementEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertHasParent();\n        previousOrParentNode = (previousOrParentNode.parent);\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 3 /* Element */);\n    var queries = previousOrParentNode.queries;\n    queries && queries.addNode(previousOrParentNode);\n    queueLifecycleHooks(previousOrParentNode.tNode.flags, currentView);\n}\n/**\n * Updates the value of removes an attribute on an Element.\n *\n * @param number index The index of the element in the data array\n * @param name name The name of the attribute.\n * @param value value The attribute is removed when value is `null` or `undefined`.\n *                  Otherwise the attribute value is set to the stringified value.\n * @param sanitizer An optional function used to sanitize the value.\n */\nfunction elementAttribute(index, name, value, sanitizer) {\n    if (value !== NO_CHANGE) {\n        var element = data[index];\n        if (value == null) {\n            isProceduralRenderer(renderer) ? renderer.removeAttribute(element.native, name) :\n                element.native.removeAttribute(name);\n        }\n        else {\n            var strValue = sanitizer == null ? stringify$1(value) : sanitizer(value);\n            isProceduralRenderer(renderer) ? renderer.setAttribute(element.native, name, strValue) :\n                element.native.setAttribute(name, strValue);\n        }\n    }\n}\n/**\n * Update a property on an Element.\n *\n * If the property name also exists as an input property on one of the element's directives,\n * the component property will be set instead of the element property. This check must\n * be conducted at runtime so child components that add new @Inputs don't have to be re-compiled.\n *\n * @param index The index of the element to update in the data array\n * @param propName Name of property. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value New value to write.\n * @param sanitizer An optional function used to sanitize the value.\n */\nfunction elementProperty(index, propName, value, sanitizer) {\n    if (value === NO_CHANGE)\n        return;\n    var node = data[index];\n    var tNode = (node.tNode);\n    // if tNode.inputs is undefined, a listener has created outputs, but inputs haven't\n    // yet been checked\n    if (tNode && tNode.inputs === undefined) {\n        // mark inputs as checked\n        tNode.inputs = generatePropertyAliases(node.tNode.flags, 0 /* Input */);\n    }\n    var inputData = tNode && tNode.inputs;\n    var dataValue;\n    if (inputData && (dataValue = inputData[propName])) {\n        setInputsForProperty(dataValue, value);\n        markDirtyIfOnPush(node);\n    }\n    else {\n        // It is assumed that the sanitizer is only added when the compiler determines that the property\n        // is risky, so sanitization can be done without further checks.\n        value = sanitizer != null ? sanitizer(value) : value;\n        var native = node.native;\n        isProceduralRenderer(renderer) ? renderer.setProperty(native, propName, value) :\n            (native.setProperty ? native.setProperty(propName, value) :\n                native[propName] = value);\n    }\n}\n/**\n * Constructs a TNode object from the arguments.\n *\n * @param tagName\n * @param attrs\n * @param data\n * @param localNames A list of local names and their matching indices\n * @returns the TNode object\n */\nfunction createTNode(tagName, attrs, data) {\n    return {\n        flags: 0,\n        tagName: tagName,\n        attrs: attrs,\n        localNames: null,\n        initialInputs: undefined,\n        inputs: undefined,\n        outputs: undefined,\n        data: data\n    };\n}\n/**\n * Given a list of directive indices and minified input names, sets the\n * input properties on the corresponding directives.\n */\nfunction setInputsForProperty(inputs, value) {\n    for (var i = 0; i < inputs.length; i += 2) {\n        ngDevMode && assertDataInRange(inputs[i], (directives));\n        directives[inputs[i]][inputs[i | 1]] = value;\n    }\n}\n/**\n * Consolidates all inputs or outputs of all directives on this logical node.\n *\n * @param number lNodeFlags logical node flags\n * @param Direction direction whether to consider inputs or outputs\n * @returns PropertyAliases|null aggregate of all properties if any, `null` otherwise\n */\nfunction generatePropertyAliases(tNodeFlags, direction) {\n    var size = (tNodeFlags & 8190 /* SIZE_MASK */) >> 1;\n    var propStore = null;\n    if (size > 0) {\n        var start = tNodeFlags >> 13;\n        var isInput = direction === 0;\n        var defs = (currentView.tView.directives);\n        for (var i = start, ii = start + size; i < ii; i++) {\n            var directiveDef = defs[i];\n            var propertyAliasMap = isInput ? directiveDef.inputs : directiveDef.outputs;\n            for (var publicName in propertyAliasMap) {\n                if (propertyAliasMap.hasOwnProperty(publicName)) {\n                    propStore = propStore || {};\n                    var internalName = propertyAliasMap[publicName];\n                    var hasProperty = propStore.hasOwnProperty(publicName);\n                    hasProperty ? propStore[publicName].push(i, internalName) :\n                        (propStore[publicName] = [i, internalName]);\n                }\n            }\n        }\n    }\n    return propStore;\n}\n/**\n * Add or remove a class in a `classList` on a DOM element.\n *\n * This instruction is meant to handle the [class.foo]=\"exp\" case\n *\n * @param index The index of the element to update in the data array\n * @param className Name of class to toggle. Because it is going to DOM, this is not subject to\n *        renaming as part of minification.\n * @param value A value indicating if a given class should be added or removed.\n */\nfunction elementClassNamed(index, className, value) {\n    if (value !== NO_CHANGE) {\n        var lElement = data[index];\n        if (value) {\n            isProceduralRenderer(renderer) ? renderer.addClass(lElement.native, className) :\n                lElement.native.classList.add(className);\n        }\n        else {\n            isProceduralRenderer(renderer) ? renderer.removeClass(lElement.native, className) :\n                lElement.native.classList.remove(className);\n        }\n    }\n}\n/**\n * Set the `className` property on a DOM element.\n *\n * This instruction is meant to handle the `[class]=\"exp\"` usage.\n *\n * `elementClass` instruction writes the value to the \"element's\" `className` property.\n *\n * @param index The index of the element to update in the data array\n * @param value A value indicating a set of classes which should be applied. The method overrides\n *   any existing classes. The value is stringified (`toString`) before it is applied to the\n *   element.\n */\nfunction elementClass(index, value) {\n    if (value !== NO_CHANGE) {\n        // TODO: This is a naive implementation which simply writes value to the `className`. In the\n        // future\n        // we will add logic here which would work with the animation code.\n        var lElement = data[index];\n        isProceduralRenderer(renderer) ? renderer.setProperty(lElement.native, 'className', value) :\n            lElement.native['className'] = stringify$1(value);\n    }\n}\nfunction elementStyleNamed(index, styleName, value, suffixOrSanitizer) {\n    if (value !== NO_CHANGE) {\n        var lElement = data[index];\n        if (value == null) {\n            isProceduralRenderer(renderer) ?\n                renderer.removeStyle(lElement.native, styleName, RendererStyleFlags3.DashCase) :\n                lElement.native['style'].removeProperty(styleName);\n        }\n        else {\n            var strValue = typeof suffixOrSanitizer == 'function' ? suffixOrSanitizer(value) : stringify$1(value);\n            if (typeof suffixOrSanitizer == 'string')\n                strValue = strValue + suffixOrSanitizer;\n            isProceduralRenderer(renderer) ?\n                renderer.setStyle(lElement.native, styleName, strValue, RendererStyleFlags3.DashCase) :\n                lElement.native['style'].setProperty(styleName, strValue);\n        }\n    }\n}\n/**\n * Set the `style` property on a DOM element.\n *\n * This instruction is meant to handle the `[style]=\"exp\"` usage.\n *\n *\n * @param index The index of the element to update in the data array\n * @param value A value indicating if a given style should be added or removed.\n *   The expected shape of `value` is an object where keys are style names and the values\n *   are their corresponding values to set. If value is falsy than the style is remove. An absence\n *   of style does not cause that style to be removed. `NO_CHANGE` implies that no update should be\n *   performed.\n */\nfunction elementStyle(index, value) {\n    if (value !== NO_CHANGE) {\n        // TODO: This is a naive implementation which simply writes value to the `style`. In the future\n        // we will add logic here which would work with the animation code.\n        var lElement = data[index];\n        if (isProceduralRenderer(renderer)) {\n            renderer.setProperty(lElement.native, 'style', value);\n        }\n        else {\n            var style = lElement.native['style'];\n            for (var i = 0, keys = Object.keys(value); i < keys.length; i++) {\n                var styleName = keys[i];\n                var styleValue = value[styleName];\n                styleValue == null ? style.removeProperty(styleName) :\n                    style.setProperty(styleName, styleValue);\n            }\n        }\n    }\n}\n/**\n * Create static text node\n *\n * @param index Index of the node in the data array.\n * @param value Value to write. This value will be stringified.\n *   If value is not provided than the actual creation of the text node is delayed.\n */\nfunction text(index, value) {\n    ngDevMode &&\n        assertNull(currentView.bindingStartIndex, 'text nodes should be created before bindings');\n    var textNode = value != null ?\n        (isProceduralRenderer(renderer) ? renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value))) :\n        null;\n    var node = createLNode(index, 3 /* Element */, textNode);\n    // Text nodes are self closing.\n    isParent = false;\n    appendChild((node.parent), textNode, currentView);\n}\n/**\n * Create text node with binding\n * Bindings should be handled externally with the proper bind(1-8) method\n *\n * @param index Index of the node in the data array.\n * @param value Stringified value to write.\n */\nfunction textBinding(index, value) {\n    ngDevMode && assertDataInRange(index);\n    var existingNode = data[index];\n    ngDevMode && assertNotNull(existingNode, 'existing node');\n    if (existingNode.native) {\n        // If DOM node exists and value changed, update textContent\n        value !== NO_CHANGE &&\n            (isProceduralRenderer(renderer) ? renderer.setValue(existingNode.native, stringify$1(value)) :\n                existingNode.native.textContent = stringify$1(value));\n    }\n    else {\n        // Node was created but DOM node creation was delayed. Create and append now.\n        existingNode.native = isProceduralRenderer(renderer) ?\n            renderer.createText(stringify$1(value)) :\n            renderer.createTextNode(stringify$1(value));\n        insertChild(existingNode, currentView);\n    }\n}\n/**\n * Create a directive.\n *\n * NOTE: directives can be created in order other than the index order. They can also\n *       be retrieved before they are created in which case the value will be null.\n *\n * @param elementIndex Index of the host element in the data array\n * @param directive The directive instance.\n * @param directiveDef DirectiveDef object which contains information about the template.\n * @param localRefs Names under which a query can retrieve the directive instance\n */\nfunction directiveCreate(elementIndex, directive, directiveDef) {\n    var index = directives ? directives.length : 0;\n    var instance = baseDirectiveCreate(index, directive, directiveDef);\n    ngDevMode && assertNotNull(previousOrParentNode.tNode, 'previousOrParentNode.tNode');\n    var tNode = (previousOrParentNode.tNode);\n    var isComponent = directiveDef.template;\n    if (isComponent) {\n        addComponentLogic(index, elementIndex, directive, directiveDef);\n    }\n    if (firstTemplatePass) {\n        // Init hooks are queued now so ngOnInit is called in host components before\n        // any projected components.\n        queueInitHooks(index, directiveDef.onInit, directiveDef.doCheck, currentView.tView);\n        if (directiveDef.hostBindings)\n            queueHostBindingForCheck(index, elementIndex);\n    }\n    if (tNode && tNode.attrs) {\n        setInputsFromAttrs(index, instance, directiveDef.inputs, tNode);\n    }\n    return instance;\n}\nfunction addComponentLogic(index, elementIndex, instance, def) {\n    var tView = getOrCreateTView(def.template, def.directiveDefs, def.pipeDefs);\n    // Only component views should be added to the view tree directly. Embedded views are\n    // accessed through their containers because they may be removed / re-added later.\n    var hostView = addToViewTree(createLView(-1, rendererFactory.createRenderer(previousOrParentNode.native, def.rendererType), tView, null, null, def.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */));\n    previousOrParentNode.data = hostView;\n    hostView.node = previousOrParentNode;\n    initChangeDetectorIfExisting(previousOrParentNode.nodeInjector, instance, hostView);\n    if (firstTemplatePass)\n        queueComponentIndexForCheck(index, elementIndex);\n}\n/**\n * A lighter version of directiveCreate() that is used for the root component\n *\n * This version does not contain features that we don't already support at root in\n * current Angular. Example: local refs and inputs on root component.\n */\nfunction baseDirectiveCreate(index, directive, directiveDef) {\n    ngDevMode &&\n        assertNull(currentView.bindingStartIndex, 'directives should be created before any bindings');\n    ngDevMode && assertPreviousIsParent();\n    Object.defineProperty(directive, NG_HOST_SYMBOL, { enumerable: false, value: previousOrParentNode });\n    if (directives == null)\n        currentView.directives = directives = [];\n    ngDevMode && assertDataNext(index, directives);\n    directives[index] = directive;\n    var diPublic = directiveDef.diPublic;\n    if (diPublic) {\n        diPublic((directiveDef));\n    }\n    if (directiveDef.attributes != null && previousOrParentNode.type == 3 /* Element */) {\n        setUpAttributes(previousOrParentNode.native, directiveDef.attributes);\n    }\n    return directive;\n}\n/**\n * Sets initial input properties on directive instances from attribute data\n *\n * @param directiveIndex Index of the directive in directives array\n * @param instance Instance of the directive on which to set the initial inputs\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data for this node\n */\nfunction setInputsFromAttrs(directiveIndex, instance, inputs, tNode) {\n    var initialInputData = tNode.initialInputs;\n    if (initialInputData === undefined || directiveIndex >= initialInputData.length) {\n        initialInputData = generateInitialInputs(directiveIndex, inputs, tNode);\n    }\n    var initialInputs = initialInputData[directiveIndex];\n    if (initialInputs) {\n        for (var i = 0; i < initialInputs.length; i += 2) {\n            instance[initialInputs[i]] = initialInputs[i | 1];\n        }\n    }\n}\n/**\n * Generates initialInputData for a node and stores it in the template's static storage\n * so subsequent template invocations don't have to recalculate it.\n *\n * initialInputData is an array containing values that need to be set as input properties\n * for directives on this node, but only once on creation. We need this array to support\n * the case where you set an @Input property of a directive using attribute-like syntax.\n * e.g. if you have a `name` @Input, you can set it once like this:\n *\n * <my-component name=\"Bess\"></my-component>\n *\n * @param directiveIndex Index to store the initial input data\n * @param inputs The list of inputs from the directive def\n * @param tNode The static data on this node\n */\nfunction generateInitialInputs(directiveIndex, inputs, tNode) {\n    var initialInputData = tNode.initialInputs || (tNode.initialInputs = []);\n    initialInputData[directiveIndex] = null;\n    var attrs = (tNode.attrs);\n    for (var i = 0; i < attrs.length; i += 2) {\n        var attrName = attrs[i];\n        var minifiedInputName = inputs[attrName];\n        if (minifiedInputName !== undefined) {\n            var inputsToStore = initialInputData[directiveIndex] || (initialInputData[directiveIndex] = []);\n            inputsToStore.push(minifiedInputName, attrs[i | 1]);\n        }\n    }\n    return initialInputData;\n}\n/**\n * Creates an LContainerNode.\n *\n * Only `LViewNodes` can go into `LContainerNodes`.\n *\n * @param index The index of the container in the data array\n * @param template Optional inline template\n * @param tagName The name of the container element, if applicable\n * @param attrs The attrs attached to the container, if applicable\n * @param localRefs A set of local reference bindings on the element.\n */\nfunction container(index, template, tagName, attrs, localRefs) {\n    ngDevMode &&\n        assertNull(currentView.bindingStartIndex, 'container nodes should be created before any bindings');\n    var currentParent = isParent ? previousOrParentNode : previousOrParentNode.parent;\n    ngDevMode && assertNotNull(currentParent, 'containers should have a parent');\n    var lContainer = {\n        views: [],\n        nextIndex: 0,\n        // If the direct parent of the container is a view, its views will need to be added\n        // through insertView() when its parent view is being inserted:\n        renderParent: canInsertNativeNode(currentParent, currentView) ? currentParent : null,\n        template: template == null ? null : template,\n        next: null,\n        parent: currentView,\n        dynamicViewCount: 0,\n        queries: null\n    };\n    var node = createLNode(index, 0 /* Container */, undefined, lContainer);\n    if (node.tNode == null) {\n        node.tNode = tData[index] = createTNode(tagName || null, attrs || null, []);\n    }\n    // Containers are added to the current view tree instead of their embedded views\n    // because views can be removed and re-inserted.\n    addToViewTree(node.data);\n    if (firstTemplatePass)\n        cacheMatchingDirectivesForNode(node.tNode);\n    // TODO: handle TemplateRef!\n    hack_declareDirectives(index, localRefs || null);\n    isParent = false;\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    var queries = node.queries;\n    if (queries) {\n        // check if a given container node matches\n        queries.addNode(node);\n        // prepare place for matching nodes from views inserted into a given container\n        lContainer.queries = queries.container();\n    }\n}\n/**\n * Sets a container up to receive views.\n *\n * @param index The index of the container in the data array\n */\nfunction containerRefreshStart(index) {\n    ngDevMode && assertDataInRange(index);\n    previousOrParentNode = data[index];\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    isParent = true;\n    previousOrParentNode.data.nextIndex = 0;\n    ngDevMode && assertSame(previousOrParentNode.native, undefined, \"the container's native element should not have been set yet.\");\n    if (!checkNoChangesMode) {\n        // We need to execute init hooks here so ngOnInit hooks are called in top level views\n        // before they are called in embedded views (for backwards compatibility).\n        executeInitHooks(currentView, currentView.tView, creationMode);\n    }\n}\n/**\n * Marks the end of the LContainerNode.\n *\n * Marking the end of LContainerNode is the time when to child Views get inserted or removed.\n */\nfunction containerRefreshEnd() {\n    if (isParent) {\n        isParent = false;\n    }\n    else {\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        ngDevMode && assertHasParent();\n        previousOrParentNode = (previousOrParentNode.parent);\n    }\n    ngDevMode && assertNodeType(previousOrParentNode, 0 /* Container */);\n    var container = previousOrParentNode;\n    container.native = undefined;\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var nextIndex = container.data.nextIndex;\n    // remove extra views at the end of the container\n    while (nextIndex < container.data.views.length) {\n        removeView(container, nextIndex);\n    }\n}\nfunction refreshDynamicChildren() {\n    for (var current = currentView.child; current !== null; current = current.next) {\n        if (current.dynamicViewCount !== 0 && current.views) {\n            var container_1 = current;\n            for (var i = 0; i < container_1.views.length; i++) {\n                var view = container_1.views[i];\n                renderEmbeddedTemplate(view, (view.data.template), (view.data.context), renderer);\n            }\n        }\n    }\n}\n/**\n * Looks for a view with a given view block id inside a provided LContainer.\n * Removes views that need to be deleted in the process.\n *\n * @param containerNode where to search for views\n * @param startIdx starting index in the views array to search from\n * @param viewBlockId exact view block id to look for\n * @returns index of a found view or -1 if not found\n */\nfunction scanForView(containerNode, startIdx, viewBlockId) {\n    var views = containerNode.data.views;\n    for (var i = startIdx; i < views.length; i++) {\n        var viewAtPositionId = views[i].data.id;\n        if (viewAtPositionId === viewBlockId) {\n            return views[i];\n        }\n        else if (viewAtPositionId < viewBlockId) {\n            // found a view that should not be at this position - remove\n            removeView(containerNode, i);\n        }\n        else {\n            // found a view with id grater than the one we are searching for\n            // which means that required view doesn't exist and can't be found at\n            // later positions in the views array - stop the search here\n            break;\n        }\n    }\n    return null;\n}\n/**\n * Marks the start of an embedded view.\n *\n * @param viewBlockId The ID of this view\n * @return boolean Whether or not this view is in creation mode\n */\nfunction embeddedViewStart(viewBlockId) {\n    var container = (isParent ? previousOrParentNode : previousOrParentNode.parent);\n    ngDevMode && assertNodeType(container, 0 /* Container */);\n    var lContainer = container.data;\n    var existingViewNode = scanForView(container, lContainer.nextIndex, viewBlockId);\n    if (existingViewNode) {\n        previousOrParentNode = existingViewNode;\n        ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n        isParent = true;\n        enterView(existingViewNode.data, existingViewNode);\n    }\n    else {\n        // When we create a new LView, we always reset the state of the instructions.\n        var newView = createLView(viewBlockId, renderer, getOrCreateEmbeddedTView(viewBlockId, container), null, null, 2 /* CheckAlways */);\n        if (lContainer.queries) {\n            newView.queries = lContainer.queries.enterView(lContainer.nextIndex);\n        }\n        enterView(newView, createLNode(null, 2 /* View */, null, newView));\n    }\n    return !existingViewNode;\n}\n/**\n * Initialize the TView (e.g. static data) for the active embedded view.\n *\n * Each embedded view needs to set the global tData variable to the static data for\n * that view. Otherwise, the view's static data for a particular node would overwrite\n * the static data for a node in the view above it with the same index (since it's in the\n * same template).\n *\n * @param viewIndex The index of the TView in TContainer\n * @param parent The parent container in which to look for the view's static data\n * @returns TView\n */\nfunction getOrCreateEmbeddedTView(viewIndex, parent) {\n    ngDevMode && assertNodeType(parent, 0 /* Container */);\n    var tContainer = parent.tNode.data;\n    if (viewIndex >= tContainer.length || tContainer[viewIndex] == null) {\n        var tView = currentView.tView;\n        tContainer[viewIndex] = createTView(tView.directiveRegistry, tView.pipeRegistry);\n    }\n    return tContainer[viewIndex];\n}\n/** Marks the end of an embedded view. */\nfunction embeddedViewEnd() {\n    refreshDirectives();\n    isParent = false;\n    var viewNode = previousOrParentNode = currentView.node;\n    var containerNode = previousOrParentNode.parent;\n    if (containerNode) {\n        ngDevMode && assertNodeType(viewNode, 2 /* View */);\n        ngDevMode && assertNodeType(containerNode, 0 /* Container */);\n        var lContainer = containerNode.data;\n        if (creationMode) {\n            // it is a new view, insert it into collection of views for a given container\n            insertView(containerNode, viewNode, lContainer.nextIndex);\n        }\n        lContainer.nextIndex++;\n    }\n    leaveView((currentView.parent));\n    ngDevMode && assertEqual(isParent, false, 'isParent');\n    ngDevMode && assertNodeType(previousOrParentNode, 2 /* View */);\n}\n/**\n * Refreshes components by entering the component view and processing its bindings, queries, etc.\n *\n * @param directiveIndex\n * @param elementIndex\n */\nfunction componentRefresh(directiveIndex, elementIndex) {\n    ngDevMode && assertDataInRange(elementIndex);\n    var element = data[elementIndex];\n    ngDevMode && assertNodeType(element, 3 /* Element */);\n    ngDevMode && assertNotNull(element.data, \"Component's host node should have an LView attached.\");\n    var hostView = (element.data);\n    // Only attached CheckAlways components or attached, dirty OnPush components should be checked\n    if (viewAttached(hostView) && hostView.flags & (2 /* CheckAlways */ | 4 /* Dirty */)) {\n        ngDevMode && assertDataInRange(directiveIndex, (directives));\n        var def = currentView.tView.directives[directiveIndex];\n        detectChangesInternal(hostView, element, def, getDirectiveInstance(directives[directiveIndex]));\n    }\n}\n/** Returns a boolean for whether the view is attached */\nfunction viewAttached(view) {\n    return (view.flags & 8 /* Attached */) === 8 /* Attached */;\n}\n/**\n * Instruction to distribute projectable nodes among <ng-content> occurrences in a given template.\n * It takes all the selectors from the entire component's template and decides where\n * each projected node belongs (it re-distributes nodes among \"buckets\" where each \"bucket\" is\n * backed by a selector).\n *\n * This function requires CSS selectors to be provided in 2 forms: parsed (by a compiler) and text,\n * un-parsed form.\n *\n * The parsed form is needed for efficient matching of a node against a given CSS selector.\n * The un-parsed, textual form is needed for support of the ngProjectAs attribute.\n *\n * Having a CSS selector in 2 different formats is not ideal, but alternatives have even more\n * drawbacks:\n * - having only a textual form would require runtime parsing of CSS selectors;\n * - we can't have only a parsed as we can't re-construct textual form from it (as entered by a\n * template author).\n *\n * @param selectors A collection of parsed CSS selectors\n * @param rawSelectors A collection of CSS selectors in the raw, un-parsed form\n */\nfunction projectionDef(index, selectors, textSelectors) {\n    var noOfNodeBuckets = selectors ? selectors.length + 1 : 1;\n    var distributedNodes = new Array(noOfNodeBuckets);\n    for (var i = 0; i < noOfNodeBuckets; i++) {\n        distributedNodes[i] = [];\n    }\n    var componentNode = findComponentHost(currentView);\n    var componentChild = componentNode.child;\n    while (componentChild !== null) {\n        // execute selector matching logic if and only if:\n        // - there are selectors defined\n        // - a node has a tag name / attributes that can be matched\n        if (selectors && componentChild.tNode) {\n            var matchedIdx = matchingSelectorIndex(componentChild.tNode, selectors, (textSelectors));\n            distributedNodes[matchedIdx].push(componentChild);\n        }\n        else {\n            distributedNodes[0].push(componentChild);\n        }\n        componentChild = componentChild.next;\n    }\n    ngDevMode && assertDataNext(index);\n    data[index] = distributedNodes;\n}\n/**\n * Updates the linked list of a projection node, by appending another linked list.\n *\n * @param projectionNode Projection node whose projected nodes linked list has to be updated\n * @param appendedFirst First node of the linked list to append.\n * @param appendedLast Last node of the linked list to append.\n */\nfunction appendToProjectionNode(projectionNode, appendedFirst, appendedLast) {\n    ngDevMode && assertEqual(!!appendedFirst, !!appendedLast, 'appendedFirst can be null if and only if appendedLast is also null');\n    if (!appendedLast) {\n        // nothing to append\n        return;\n    }\n    var projectionNodeData = projectionNode.data;\n    if (projectionNodeData.tail) {\n        projectionNodeData.tail.pNextOrParent = appendedFirst;\n    }\n    else {\n        projectionNodeData.head = appendedFirst;\n    }\n    projectionNodeData.tail = appendedLast;\n    appendedLast.pNextOrParent = projectionNode;\n}\n/**\n * Inserts previously re-distributed projected nodes. This instruction must be preceded by a call\n * to the projectionDef instruction.\n *\n * @param nodeIndex\n * @param localIndex - index under which distribution of projected nodes was memorized\n * @param selectorIndex - 0 means <ng-content> without any selector\n * @param attrs - attributes attached to the ng-content node, if present\n */\nfunction projection(nodeIndex, localIndex, selectorIndex, attrs) {\n    if (selectorIndex === void 0) { selectorIndex = 0; }\n    var node = createLNode(nodeIndex, 1 /* Projection */, null, { head: null, tail: null });\n    if (node.tNode == null) {\n        node.tNode = createTNode(null, attrs || null, null);\n    }\n    isParent = false; // self closing\n    var currentParent = node.parent;\n    // re-distribution of projectable nodes is memorized on a component's view level\n    var componentNode = findComponentHost(currentView);\n    // make sure that nodes to project were memorized\n    var nodesForSelector = componentNode.data.data[localIndex][selectorIndex];\n    // build the linked list of projected nodes:\n    for (var i = 0; i < nodesForSelector.length; i++) {\n        var nodeToProject = nodesForSelector[i];\n        if (nodeToProject.type === 1 /* Projection */) {\n            var previouslyProjected = nodeToProject.data;\n            appendToProjectionNode(node, previouslyProjected.head, previouslyProjected.tail);\n        }\n        else {\n            appendToProjectionNode(node, nodeToProject, nodeToProject);\n        }\n    }\n    if (canInsertNativeNode(currentParent, currentView)) {\n        // process each node in the list of projected nodes:\n        var nodeToProject = node.data.head;\n        var lastNodeToProject = node.data.tail;\n        while (nodeToProject) {\n            appendProjectedNode(nodeToProject, currentParent, currentView);\n            nodeToProject = nodeToProject === lastNodeToProject ? null : nodeToProject.pNextOrParent;\n        }\n    }\n}\n/**\n * Given a current view, finds the nearest component's host (LElement).\n *\n * @param lView LView for which we want a host element node\n * @returns The host node\n */\nfunction findComponentHost(lView) {\n    var viewRootLNode = lView.node;\n    while (viewRootLNode.type === 2 /* View */) {\n        ngDevMode && assertNotNull(lView.parent, 'lView.parent');\n        lView = (lView.parent);\n        viewRootLNode = lView.node;\n    }\n    ngDevMode && assertNodeType(viewRootLNode, 3 /* Element */);\n    ngDevMode && assertNotNull(viewRootLNode.data, 'node.data');\n    return viewRootLNode;\n}\n/**\n * Adds a LView or a LContainer to the end of the current view tree.\n *\n * This structure will be used to traverse through nested views to remove listeners\n * and call onDestroy callbacks.\n *\n * @param state The LView or LContainer to add to the view tree\n * @returns The state passed in\n */\nfunction addToViewTree(state) {\n    currentView.tail ? (currentView.tail.next = state) : (currentView.child = state);\n    currentView.tail = state;\n    return state;\n}\n/** If node is an OnPush component, marks its LView dirty. */\nfunction markDirtyIfOnPush(node) {\n    // Because data flows down the component tree, ancestors do not need to be marked dirty\n    if (node.data && !(node.data.flags & 2 /* CheckAlways */)) {\n        node.data.flags |= 4 /* Dirty */;\n    }\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Necessary to support OnPush components.\n */\nfunction wrapListenerWithDirtyLogic(view, listenerFn) {\n    return function (e) {\n        markViewDirty(view);\n        return listenerFn(e);\n    };\n}\n/**\n * Wraps an event listener so its host view and its ancestor views will be marked dirty\n * whenever the event fires. Also wraps with preventDefault behavior.\n */\nfunction wrapListenerWithDirtyAndDefault(view, listenerFn) {\n    return function (e) {\n        markViewDirty(view);\n        if (listenerFn(e) === false) {\n            e.preventDefault();\n            // Necessary for legacy browsers that don't support preventDefault (e.g. IE)\n            e.returnValue = false;\n        }\n    };\n}\n/** Marks current view and all ancestors dirty */\nfunction markViewDirty(view) {\n    var currentView = view;\n    while (currentView.parent != null) {\n        currentView.flags |= 4 /* Dirty */;\n        currentView = currentView.parent;\n    }\n    currentView.flags |= 4 /* Dirty */;\n    ngDevMode && assertNotNull(currentView.context, 'rootContext');\n    scheduleTick(currentView.context);\n}\n/**\n * Used to schedule change detection on the whole application.\n *\n * Unlike `tick`, `scheduleTick` coalesces multiple calls into one change detection run.\n * It is usually called indirectly by calling `markDirty` when the view needs to be\n * re-rendered.\n *\n * Typically `scheduleTick` uses `requestAnimationFrame` to coalesce multiple\n * `scheduleTick` requests. The scheduling function can be overridden in\n * `renderComponent`'s `scheduler` option.\n */\nfunction scheduleTick(rootContext) {\n    if (rootContext.clean == _CLEAN_PROMISE) {\n        var res_1;\n        rootContext.clean = new Promise(function (r) { return res_1 = r; });\n        rootContext.scheduler(function () {\n            tick(rootContext.component);\n            res_1(null);\n            rootContext.clean = _CLEAN_PROMISE;\n        });\n    }\n}\n/**\n * Used to perform change detection on the whole application.\n *\n * This is equivalent to `detectChanges`, but invoked on root component. Additionally, `tick`\n * executes lifecycle hooks and conditionally checks components based on their\n * `ChangeDetectionStrategy` and dirtiness.\n *\n * The preferred way to trigger change detection is to call `markDirty`. `markDirty` internally\n * schedules `tick` using a scheduler in order to coalesce multiple `markDirty` calls into a\n * single change detection run. By default, the scheduler is `requestAnimationFrame`, but can\n * be changed when calling `renderComponent` and providing the `scheduler` option.\n */\nfunction tick(component) {\n    var rootView = getRootView(component);\n    var rootComponent = rootView.context.component;\n    var hostNode = _getComponentHostLElementNode(rootComponent);\n    ngDevMode && assertNotNull(hostNode.data, 'Component host node should be attached to an LView');\n    renderComponentOrTemplate(hostNode, rootView, rootComponent);\n}\n/**\n * Retrieve the root view from any component by walking the parent `LView` until\n * reaching the root `LView`.\n *\n * @param component any component\n */\nfunction getRootView(component) {\n    ngDevMode && assertNotNull(component, 'component');\n    var lElementNode = _getComponentHostLElementNode(component);\n    var lView = lElementNode.view;\n    while (lView.parent) {\n        lView = lView.parent;\n    }\n    return lView;\n}\n/**\n * Synchronously perform change detection on a component (and possibly its sub-components).\n *\n * This function triggers change detection in a synchronous way on a component. There should\n * be very little reason to call this function directly since a preferred way to do change\n * detection is to {@link markDirty} the component and wait for the scheduler to call this method\n * at some future point in time. This is because a single user action often results in many\n * components being invalidated and calling change detection on each component synchronously\n * would be inefficient. It is better to wait until all components are marked as dirty and\n * then perform single change detection across all of the components\n *\n * @param component The component which the change detection should be performed on.\n */\nfunction detectChanges(component) {\n    var hostNode = _getComponentHostLElementNode(component);\n    ngDevMode && assertNotNull(hostNode.data, 'Component host node should be attached to an LView');\n    var componentIndex = hostNode.tNode.flags >> 13;\n    var def = hostNode.view.tView.directives[componentIndex];\n    detectChangesInternal(hostNode.data, hostNode, def, component);\n}\n/**\n * Checks the change detector and its children, and throws if any changes are detected.\n *\n * This is used in development mode to verify that running change detection doesn't\n * introduce other changes.\n */\nfunction checkNoChanges(component) {\n    checkNoChangesMode = true;\n    try {\n        detectChanges(component);\n    }\n    finally {\n        checkNoChangesMode = false;\n    }\n}\n/** Throws an ExpressionChangedAfterChecked error if checkNoChanges mode is on. */\nfunction throwErrorIfNoChangesMode(oldValue, currValue) {\n    if (checkNoChangesMode) {\n        var msg = \"ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value: '\" + oldValue + \"'. Current value: '\" + currValue + \"'.\";\n        if (creationMode) {\n            msg +=\n                \" It seems like the view has been created after its parent and its children have been dirty checked.\" +\n                    \" Has it been created in a change detection hook ?\";\n        }\n        // TODO: include debug context\n        throw new Error(msg);\n    }\n}\n/** Checks the view of the component provided. Does not gate on dirty checks or execute doCheck. */\nfunction detectChangesInternal(hostView, hostNode, def, component) {\n    var oldView = enterView(hostView, hostNode);\n    var template = def.template;\n    try {\n        template(component, creationMode);\n        refreshDynamicChildren();\n        refreshDirectives();\n    }\n    finally {\n        leaveView(oldView);\n    }\n}\n/**\n * Mark the component as dirty (needing change detection).\n *\n * Marking a component dirty will schedule a change detection on this\n * component at some point in the future. Marking an already dirty\n * component as dirty is a noop. Only one outstanding change detection\n * can be scheduled per component tree. (Two components bootstrapped with\n * separate `renderComponent` will have separate schedulers)\n *\n * When the root component is bootstrapped with `renderComponent`, a scheduler\n * can be provided.\n *\n * @param component Component to mark as dirty.\n */\n\n/** A special value which designates that a value has not changed. */\nvar NO_CHANGE = {};\n/**\n *  Initializes the binding start index. Will get inlined.\n *\n *  This function must be called before any binding related function is called\n *  (ie `bind()`, `interpolationX()`, `pureFunctionX()`)\n */\nfunction initBindings() {\n    // `bindingIndex` is initialized when the view is first entered when not in creation mode\n    ngDevMode &&\n        assertEqual(creationMode, true, 'should only be called in creationMode for performance reasons');\n    if (currentView.bindingStartIndex == null) {\n        bindingIndex = currentView.bindingStartIndex = data.length;\n    }\n}\n/**\n * Creates a single value binding.\n *\n * @param value Value to diff\n */\nfunction bind(value) {\n    if (creationMode) {\n        initBindings();\n        return data[bindingIndex++] = value;\n    }\n    var changed = value !== NO_CHANGE && isDifferent(data[bindingIndex], value);\n    if (changed) {\n        throwErrorIfNoChangesMode(data[bindingIndex], value);\n        data[bindingIndex] = value;\n    }\n    bindingIndex++;\n    return changed ? value : NO_CHANGE;\n}\n/**\n * Create interpolation bindings with a variable number of expressions.\n *\n * If there are 1 to 8 expressions `interpolation1()` to `interpolation8()` should be used instead.\n * Those are faster because there is no need to create an array of expressions and iterate over it.\n *\n * `values`:\n * - has static text at even indexes,\n * - has evaluated expressions at odd indexes.\n *\n * Returns the concatenated string when any of the arguments changes, `NO_CHANGE` otherwise.\n */\nfunction interpolationV(values) {\n    ngDevMode && assertLessThan(2, values.length, 'should have at least 3 values');\n    ngDevMode && assertEqual(values.length % 2, 1, 'should have an odd number of values');\n    var different = false;\n    for (var i = 1; i < values.length; i += 2) {\n        // Check if bindings (odd indexes) have changed\n        bindingUpdated(values[i]) && (different = true);\n    }\n    if (!different) {\n        return NO_CHANGE;\n    }\n    // Build the updated content\n    var content = values[0];\n    for (var i = 1; i < values.length; i += 2) {\n        content += stringify$1(values[i]) + values[i + 1];\n    }\n    return content;\n}\n/**\n * Creates an interpolation binding with 1 expression.\n *\n * @param prefix static value used for concatenation only.\n * @param v0 value checked for change.\n * @param suffix static value used for concatenation only.\n */\nfunction interpolation1(prefix, v0, suffix) {\n    var different = bindingUpdated(v0);\n    return different ? prefix + stringify$1(v0) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation binding with 2 expressions. */\nfunction interpolation2(prefix, v0, i0, v1, suffix) {\n    var different = bindingUpdated2(v0, v1);\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + suffix : NO_CHANGE;\n}\n/** Creates an interpolation bindings with 3 expressions. */\nfunction interpolation3(prefix, v0, i0, v1, i1, v2, suffix) {\n    var different = bindingUpdated2(v0, v1);\n    different = bindingUpdated(v2) || different;\n    return different ? prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + suffix :\n        NO_CHANGE;\n}\n/** Create an interpolation binding with 4 expressions. */\nfunction interpolation4(prefix, v0, i0, v1, i1, v2, i2, v3, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) +\n            suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 5 expressions. */\nfunction interpolation5(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated(v4) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 6 expressions. */\nfunction interpolation6(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 7 expressions. */\nfunction interpolation7(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated2(v4, v5) || different;\n    different = bindingUpdated(v6) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + suffix :\n        NO_CHANGE;\n}\n/** Creates an interpolation binding with 8 expressions. */\nfunction interpolation8(prefix, v0, i0, v1, i1, v2, i2, v3, i3, v4, i4, v5, i5, v6, i6, v7, suffix) {\n    var different = bindingUpdated4(v0, v1, v2, v3);\n    different = bindingUpdated4(v4, v5, v6, v7) || different;\n    return different ?\n        prefix + stringify$1(v0) + i0 + stringify$1(v1) + i1 + stringify$1(v2) + i2 + stringify$1(v3) + i3 +\n            stringify$1(v4) + i4 + stringify$1(v5) + i5 + stringify$1(v6) + i6 + stringify$1(v7) + suffix :\n        NO_CHANGE;\n}\n/** Store a value in the `data` at a given `index`. */\nfunction store(index, value) {\n    // We don't store any static data for local variables, so the first time\n    // we see the template, we should store as null to avoid a sparse array\n    if (index >= tData.length) {\n        tData[index] = null;\n    }\n    data[index] = value;\n}\n/** Retrieves a value from the `data`. */\nfunction load(index) {\n    ngDevMode && assertDataInRange(index);\n    return data[index];\n}\n/** Retrieves a value from the `directives` array. */\nfunction loadDirective(index) {\n    ngDevMode && assertNotNull(directives, 'Directives array should be defined if reading a dir.');\n    ngDevMode && assertDataInRange(index, (directives));\n    return directives[index];\n}\n/** Gets the current binding value and increments the binding index. */\nfunction consumeBinding() {\n    ngDevMode && assertDataInRange(bindingIndex);\n    ngDevMode &&\n        assertNotEqual(data[bindingIndex], NO_CHANGE, 'Stored value should never be NO_CHANGE.');\n    return data[bindingIndex++];\n}\n/** Updates binding if changed, then returns whether it was updated. */\nfunction bindingUpdated(value) {\n    ngDevMode && assertNotEqual(value, NO_CHANGE, 'Incoming value should never be NO_CHANGE.');\n    if (creationMode) {\n        initBindings();\n    }\n    else if (isDifferent(data[bindingIndex], value)) {\n        throwErrorIfNoChangesMode(data[bindingIndex], value);\n    }\n    else {\n        bindingIndex++;\n        return false;\n    }\n    data[bindingIndex++] = value;\n    return true;\n}\n/** Updates binding if changed, then returns the latest value. */\nfunction checkAndUpdateBinding$1(value) {\n    bindingUpdated(value);\n    return value;\n}\n/** Updates 2 bindings if changed, then returns whether either was updated. */\nfunction bindingUpdated2(exp1, exp2) {\n    var different = bindingUpdated(exp1);\n    return bindingUpdated(exp2) || different;\n}\n/** Updates 4 bindings if changed, then returns whether any was updated. */\nfunction bindingUpdated4(exp1, exp2, exp3, exp4) {\n    var different = bindingUpdated2(exp1, exp2);\n    return bindingUpdated2(exp3, exp4) || different;\n}\nfunction getTView() {\n    return currentView.tView;\n}\nfunction getDirectiveInstance(instanceOrArray) {\n    // Directives with content queries store an array in directives[directiveIndex]\n    // with the instance as the first index\n    return Array.isArray(instanceOrArray) ? instanceOrArray[0] : instanceOrArray;\n}\nfunction assertPreviousIsParent() {\n    assertEqual(isParent, true, 'previousOrParentNode should be a parent');\n}\nfunction assertHasParent() {\n    assertNotNull(previousOrParentNode.parent, 'previousOrParentNode should have a parent');\n}\nfunction assertDataInRange(index, arr) {\n    if (arr == null)\n        arr = data;\n    assertLessThan(index, arr ? arr.length : 0, 'index expected to be a valid data index');\n}\nfunction assertDataNext(index, arr) {\n    if (arr == null)\n        arr = data;\n    assertEqual(arr.length, index, \"index \" + index + \" expected to be at the end of arr (length \" + arr.length + \")\");\n}\nfunction _getComponentHostLElementNode(component) {\n    ngDevMode && assertNotNull(component, 'expecting component got null');\n    var lElementNode = component[NG_HOST_SYMBOL];\n    ngDevMode && assertNotNull(component, 'object is not a component');\n    return lElementNode;\n}\nvar CLEAN_PROMISE = _CLEAN_PROMISE;\nvar ROOT_DIRECTIVE_INDICES = _ROOT_DIRECTIVE_INDICES;\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar ViewRef$1 = /** @class */ (function () {\n    function ViewRef(_view, context) {\n        this._view = _view;\n        this.context = (context);\n    }\n    /** @internal */\n    /** @internal */\n    ViewRef.prototype._setComponentContext = /** @internal */\n    function (view, context) {\n        this._view = view;\n        this.context = context;\n    };\n    ViewRef.prototype.destroy = function () {  };\n    ViewRef.prototype.onDestroy = function (callback) {  };\n    /**\n     * Marks a view and all of its ancestors dirty.\n     *\n     * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n     * multiple `markForCheck` calls to into one change detection run.\n     *\n     * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n     * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n     * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n     *\n     * <!-- TODO: Add a link to a chapter on OnPush components -->\n     *\n     * ### Example ([live demo](https://stackblitz.com/edit/angular-kx7rrw))\n     *\n     * ```typescript\n     * @Component({\n     *   selector: 'my-app',\n     *   template: `Number of ticks: {{numberOfTicks}}`\n     *   changeDetection: ChangeDetectionStrategy.OnPush,\n     * })\n     * class AppComponent {\n     *   numberOfTicks = 0;\n     *\n     *   constructor(private ref: ChangeDetectorRef) {\n     *     setInterval(() => {\n     *       this.numberOfTicks++;\n     *       // the following is required, otherwise the view will not be updated\n     *       this.ref.markForCheck();\n     *     }, 1000);\n     *   }\n     * }\n     * ```\n     */\n    /**\n       * Marks a view and all of its ancestors dirty.\n       *\n       * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n       * multiple `markForCheck` calls to into one change detection run.\n       *\n       * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n       * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n       * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n       *\n       * <!-- TODO: Add a link to a chapter on OnPush components -->\n       *\n       * ### Example ([live demo](https://stackblitz.com/edit/angular-kx7rrw))\n       *\n       * ```typescript\n       * @Component({\n       *   selector: 'my-app',\n       *   template: `Number of ticks: {{numberOfTicks}}`\n       *   changeDetection: ChangeDetectionStrategy.OnPush,\n       * })\n       * class AppComponent {\n       *   numberOfTicks = 0;\n       *\n       *   constructor(private ref: ChangeDetectorRef) {\n       *     setInterval(() => {\n       *       this.numberOfTicks++;\n       *       // the following is required, otherwise the view will not be updated\n       *       this.ref.markForCheck();\n       *     }, 1000);\n       *   }\n       * }\n       * ```\n       */\n    ViewRef.prototype.markForCheck = /**\n       * Marks a view and all of its ancestors dirty.\n       *\n       * It also triggers change detection by calling `scheduleTick` internally, which coalesces\n       * multiple `markForCheck` calls to into one change detection run.\n       *\n       * This can be used to ensure an {@link ChangeDetectionStrategy#OnPush OnPush} component is\n       * checked when it needs to be re-rendered but the two normal triggers haven't marked it\n       * dirty (i.e. inputs haven't changed and events haven't fired in the view).\n       *\n       * <!-- TODO: Add a link to a chapter on OnPush components -->\n       *\n       * ### Example ([live demo](https://stackblitz.com/edit/angular-kx7rrw))\n       *\n       * ```typescript\n       * @Component({\n       *   selector: 'my-app',\n       *   template: `Number of ticks: {{numberOfTicks}}`\n       *   changeDetection: ChangeDetectionStrategy.OnPush,\n       * })\n       * class AppComponent {\n       *   numberOfTicks = 0;\n       *\n       *   constructor(private ref: ChangeDetectorRef) {\n       *     setInterval(() => {\n       *       this.numberOfTicks++;\n       *       // the following is required, otherwise the view will not be updated\n       *       this.ref.markForCheck();\n       *     }, 1000);\n       *   }\n       * }\n       * ```\n       */\n    function () { markViewDirty(this._view); };\n    /**\n     * Detaches the view from the change detection tree.\n     *\n     * Detached views will not be checked during change detection runs until they are\n     * re-attached, even if they are dirty. `detach` can be used in combination with\n     * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n     * detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds. We can do that by detaching\n     * the component's change detector and doing a local check every five seconds.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   // in a real application the returned data will be different every time\n     *   get data() {\n     *     return [1,2,3,4,5];\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'giant-list',\n     *   template: `\n     *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n     *   `,\n     * })\n     * class GiantList {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n     *     ref.detach();\n     *     setInterval(() => {\n     *       this.ref.detectChanges();\n     *     }, 5000);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     <giant-list><giant-list>\n     *   `,\n     * })\n     * class App {\n     * }\n     * ```\n     */\n    /**\n       * Detaches the view from the change detection tree.\n       *\n       * Detached views will not be checked during change detection runs until they are\n       * re-attached, even if they are dirty. `detach` can be used in combination with\n       * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n       * detection checks.\n       *\n       * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n       * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n       *\n       * ### Example\n       *\n       * The following example defines a component with a large list of readonly data.\n       * Imagine the data changes constantly, many times per second. For performance reasons,\n       * we want to check and update the list every five seconds. We can do that by detaching\n       * the component's change detector and doing a local check every five seconds.\n       *\n       * ```typescript\n       * class DataProvider {\n       *   // in a real application the returned data will be different every time\n       *   get data() {\n       *     return [1,2,3,4,5];\n       *   }\n       * }\n       *\n       * @Component({\n       *   selector: 'giant-list',\n       *   template: `\n       *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n       *   `,\n       * })\n       * class GiantList {\n       *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n       *     ref.detach();\n       *     setInterval(() => {\n       *       this.ref.detectChanges();\n       *     }, 5000);\n       *   }\n       * }\n       *\n       * @Component({\n       *   selector: 'app',\n       *   providers: [DataProvider],\n       *   template: `\n       *     <giant-list><giant-list>\n       *   `,\n       * })\n       * class App {\n       * }\n       * ```\n       */\n    ViewRef.prototype.detach = /**\n       * Detaches the view from the change detection tree.\n       *\n       * Detached views will not be checked during change detection runs until they are\n       * re-attached, even if they are dirty. `detach` can be used in combination with\n       * {@link ChangeDetectorRef#detectChanges detectChanges} to implement local change\n       * detection checks.\n       *\n       * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n       * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n       *\n       * ### Example\n       *\n       * The following example defines a component with a large list of readonly data.\n       * Imagine the data changes constantly, many times per second. For performance reasons,\n       * we want to check and update the list every five seconds. We can do that by detaching\n       * the component's change detector and doing a local check every five seconds.\n       *\n       * ```typescript\n       * class DataProvider {\n       *   // in a real application the returned data will be different every time\n       *   get data() {\n       *     return [1,2,3,4,5];\n       *   }\n       * }\n       *\n       * @Component({\n       *   selector: 'giant-list',\n       *   template: `\n       *     <li *ngFor=\"let d of dataProvider.data\">Data {{d}}</li>\n       *   `,\n       * })\n       * class GiantList {\n       *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {\n       *     ref.detach();\n       *     setInterval(() => {\n       *       this.ref.detectChanges();\n       *     }, 5000);\n       *   }\n       * }\n       *\n       * @Component({\n       *   selector: 'app',\n       *   providers: [DataProvider],\n       *   template: `\n       *     <giant-list><giant-list>\n       *   `,\n       * })\n       * class App {\n       * }\n       * ```\n       */\n    function () { this._view.flags &= ~8 /* Attached */; };\n    /**\n     * Re-attaches a view to the change detection tree.\n     *\n     * This can be used to re-attach views that were previously detached from the tree\n     * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     *\n     * ### Example ([live demo](https://stackblitz.com/edit/angular-ymgsxw))\n     *\n     * The following example creates a component displaying `live` data. The component will detach\n     * its change detector from the main change detector tree when the component's live property\n     * is set to false.\n     *\n     * ```typescript\n     * class DataProvider {\n     *   data = 1;\n     *\n     *   constructor() {\n     *     setInterval(() => {\n     *       this.data = this.data * 2;\n     *     }, 500);\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'live-data',\n     *   inputs: ['live'],\n     *   template: 'Data: {{dataProvider.data}}'\n     * })\n     * class LiveData {\n     *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n     *\n     *   set live(value) {\n     *     if (value) {\n     *       this.ref.reattach();\n     *     } else {\n     *       this.ref.detach();\n     *     }\n     *   }\n     * }\n     *\n     * @Component({\n     *   selector: 'my-app',\n     *   providers: [DataProvider],\n     *   template: `\n     *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n     *     <live-data [live]=\"live\"><live-data>\n     *   `,\n     * })\n     * class AppComponent {\n     *   live = true;\n     * }\n     * ```\n     */\n    /**\n       * Re-attaches a view to the change detection tree.\n       *\n       * This can be used to re-attach views that were previously detached from the tree\n       * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n       *\n       * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n       *\n       * ### Example ([live demo](https://stackblitz.com/edit/angular-ymgsxw))\n       *\n       * The following example creates a component displaying `live` data. The component will detach\n       * its change detector from the main change detector tree when the component's live property\n       * is set to false.\n       *\n       * ```typescript\n       * class DataProvider {\n       *   data = 1;\n       *\n       *   constructor() {\n       *     setInterval(() => {\n       *       this.data = this.data * 2;\n       *     }, 500);\n       *   }\n       * }\n       *\n       * @Component({\n       *   selector: 'live-data',\n       *   inputs: ['live'],\n       *   template: 'Data: {{dataProvider.data}}'\n       * })\n       * class LiveData {\n       *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n       *\n       *   set live(value) {\n       *     if (value) {\n       *       this.ref.reattach();\n       *     } else {\n       *       this.ref.detach();\n       *     }\n       *   }\n       * }\n       *\n       * @Component({\n       *   selector: 'my-app',\n       *   providers: [DataProvider],\n       *   template: `\n       *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n       *     <live-data [live]=\"live\"><live-data>\n       *   `,\n       * })\n       * class AppComponent {\n       *   live = true;\n       * }\n       * ```\n       */\n    ViewRef.prototype.reattach = /**\n       * Re-attaches a view to the change detection tree.\n       *\n       * This can be used to re-attach views that were previously detached from the tree\n       * using {@link ChangeDetectorRef#detach detach}. Views are attached to the tree by default.\n       *\n       * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n       *\n       * ### Example ([live demo](https://stackblitz.com/edit/angular-ymgsxw))\n       *\n       * The following example creates a component displaying `live` data. The component will detach\n       * its change detector from the main change detector tree when the component's live property\n       * is set to false.\n       *\n       * ```typescript\n       * class DataProvider {\n       *   data = 1;\n       *\n       *   constructor() {\n       *     setInterval(() => {\n       *       this.data = this.data * 2;\n       *     }, 500);\n       *   }\n       * }\n       *\n       * @Component({\n       *   selector: 'live-data',\n       *   inputs: ['live'],\n       *   template: 'Data: {{dataProvider.data}}'\n       * })\n       * class LiveData {\n       *   constructor(private ref: ChangeDetectorRef, private dataProvider: DataProvider) {}\n       *\n       *   set live(value) {\n       *     if (value) {\n       *       this.ref.reattach();\n       *     } else {\n       *       this.ref.detach();\n       *     }\n       *   }\n       * }\n       *\n       * @Component({\n       *   selector: 'my-app',\n       *   providers: [DataProvider],\n       *   template: `\n       *     Live Update: <input type=\"checkbox\" [(ngModel)]=\"live\">\n       *     <live-data [live]=\"live\"><live-data>\n       *   `,\n       * })\n       * class AppComponent {\n       *   live = true;\n       * }\n       * ```\n       */\n    function () { this._view.flags |= 8 /* Attached */; };\n    /**\n     * Checks the view and its children.\n     *\n     * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n     * local change detection checks.\n     *\n     * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n     * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n     *\n     * ### Example\n     *\n     * The following example defines a component with a large list of readonly data.\n     * Imagine, the data changes constantly, many times per second. For performance reasons,\n     * we want to check and update the list every five seconds.\n     *\n     * We can do that by detaching the component's change detector and doing a local change detection\n     * check every five seconds.\n     *\n     * See {@link ChangeDetectorRef#detach detach} for more information.\n     */\n    /**\n       * Checks the view and its children.\n       *\n       * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n       * local change detection checks.\n       *\n       * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n       * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n       *\n       * ### Example\n       *\n       * The following example defines a component with a large list of readonly data.\n       * Imagine, the data changes constantly, many times per second. For performance reasons,\n       * we want to check and update the list every five seconds.\n       *\n       * We can do that by detaching the component's change detector and doing a local change detection\n       * check every five seconds.\n       *\n       * See {@link ChangeDetectorRef#detach detach} for more information.\n       */\n    ViewRef.prototype.detectChanges = /**\n       * Checks the view and its children.\n       *\n       * This can also be used in combination with {@link ChangeDetectorRef#detach detach} to implement\n       * local change detection checks.\n       *\n       * <!-- TODO: Add a link to a chapter on detach/reattach/local digest -->\n       * <!-- TODO: Add a live demo once ref.detectChanges is merged into master -->\n       *\n       * ### Example\n       *\n       * The following example defines a component with a large list of readonly data.\n       * Imagine, the data changes constantly, many times per second. For performance reasons,\n       * we want to check and update the list every five seconds.\n       *\n       * We can do that by detaching the component's change detector and doing a local change detection\n       * check every five seconds.\n       *\n       * See {@link ChangeDetectorRef#detach detach} for more information.\n       */\n    function () { detectChanges(this.context); };\n    /**\n     * Checks the change detector and its children, and throws if any changes are detected.\n     *\n     * This is used in development mode to verify that running change detection doesn't\n     * introduce other changes.\n     */\n    /**\n       * Checks the change detector and its children, and throws if any changes are detected.\n       *\n       * This is used in development mode to verify that running change detection doesn't\n       * introduce other changes.\n       */\n    ViewRef.prototype.checkNoChanges = /**\n       * Checks the change detector and its children, and throws if any changes are detected.\n       *\n       * This is used in development mode to verify that running change detection doesn't\n       * introduce other changes.\n       */\n    function () { checkNoChanges(this.context); };\n    return ViewRef;\n}());\nvar EmbeddedViewRef$1 = /** @class */ (function (_super) {\n    tslib_1.__extends(EmbeddedViewRef, _super);\n    function EmbeddedViewRef(viewNode, template, context) {\n        var _this = _super.call(this, viewNode.data, context) || this;\n        _this._lViewNode = viewNode;\n        return _this;\n    }\n    return EmbeddedViewRef;\n}(ViewRef$1));\n/**\n * Creates a ViewRef bundled with destroy functionality.\n *\n * @param context The context for this view\n * @returns The ViewRef\n */\nfunction createViewRef(view, context) {\n    // TODO: add detectChanges back in when implementing ChangeDetectorRef.detectChanges\n    return addDestroyable(new ViewRef$1((view), context));\n}\n/**\n * Decorates an object with destroy logic (implementing the DestroyRef interface)\n * and returns the enhanced object.\n *\n * @param obj The object to decorate\n * @returns The object with destroy logic\n */\nfunction addDestroyable(obj) {\n    var destroyFn = null;\n    obj.destroyed = false;\n    obj.destroy = function () {\n        destroyFn && destroyFn.forEach(function (fn) { return fn(); });\n        this.destroyed = true;\n    };\n    obj.onDestroy = function (fn) { return (destroyFn || (destroyFn = [])).push(fn); };\n    return obj;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Bootstraps a component, then creates and returns a `ComponentRef` for that component.\n *\n * @param componentType Component to bootstrap\n * @param options Optional parameters which control bootstrapping\n */\n\n// TODO: A hack to not pull in the NullInjector from @angular/core.\n\n/**\n * Bootstraps a Component into an existing host element and returns an instance\n * of the component.\n *\n * Use this function to bootstrap a component into the DOM tree. Each invocation\n * of this function will create a separate tree of components, injectors and\n * change detection cycles and lifetimes. To dynamically insert a new component\n * into an existing tree such that it shares the same injection, change detection\n * and object lifetime, use {@link ViewContainer#createComponent}.\n *\n * @param componentType Component to bootstrap\n * @param options Optional parameters which control bootstrapping\n */\nfunction renderComponent(componentType /* Type as workaround for: Microsoft/TypeScript/issues/4881 */, opts) {\n    if (opts === void 0) { opts = {}; }\n    ngDevMode && assertComponentType(componentType);\n    var rendererFactory = opts.rendererFactory || domRendererFactory3;\n    var componentDef = componentType.ngComponentDef;\n    if (componentDef.type != componentType)\n        componentDef.type = componentType;\n    var component;\n    // TODO: Replace when flattening CssSelector type\n    var componentTag = componentDef.selector[0][0][0];\n    var hostNode = locateHostElement(rendererFactory, opts.host || componentTag);\n    var rootContext = {\n        // Incomplete initialization due to circular reference.\n        component: (null),\n        scheduler: opts.scheduler || requestAnimationFrame,\n        clean: CLEAN_PROMISE,\n    };\n    var rootView = createLView(-1, rendererFactory.createRenderer(hostNode, componentDef.rendererType), createTView(null, null), null, rootContext, componentDef.onPush ? 4 /* Dirty */ : 2 /* CheckAlways */);\n    var oldView = enterView(rootView, (null));\n    var elementNode;\n    try {\n        if (rendererFactory.begin)\n            rendererFactory.begin();\n        // Create element node at index 0 in data array\n        elementNode = hostElement(componentTag, hostNode, componentDef);\n        // Create directive instance with factory() and store at index 0 in directives array\n        component = rootContext.component = baseDirectiveCreate(0, componentDef.factory(), componentDef);\n        initChangeDetectorIfExisting(elementNode.nodeInjector, component, (elementNode.data));\n        opts.hostFeatures && opts.hostFeatures.forEach(function (feature) { return feature(component, componentDef); });\n        executeInitAndContentHooks();\n        setHostBindings(ROOT_DIRECTIVE_INDICES);\n        detectChangesInternal(elementNode.data, elementNode, componentDef, component);\n    }\n    finally {\n        leaveView(oldView);\n        if (rendererFactory.end)\n            rendererFactory.end();\n    }\n    return component;\n}\n/**\n * Used to enable lifecycle hooks on the root component.\n *\n * Include this feature when calling `renderComponent` if the root component\n * you are rendering has lifecycle hooks defined. Otherwise, the hooks won't\n * be called properly.\n *\n * Example:\n *\n * ```\n * renderComponent(AppComponent, {features: [RootLifecycleHooks]});\n * ```\n */\n\n/**\n * Retrieve the host element of the component.\n *\n * Use this function to retrieve the host element of the component. The host\n * element is the element which the component is associated with.\n *\n * @param component Component for which the host element should be retrieved.\n */\n\n/**\n * Retrieves the rendered text for a given component.\n *\n * This function retrieves the host element of a component and\n * and then returns the `textContent` for that element. This implies\n * that the text returned will include re-projected content of\n * the component as well.\n *\n * @param component The component to return the content text for.\n */\n\n/**\n * Wait on component until it is rendered.\n *\n * This function returns a `Promise` which is resolved when the component's\n * change detection is executed. This is determined by finding the scheduler\n * associated with the `component`'s render tree and waiting until the scheduler\n * flushes. If nothing is scheduled, the function returns a resolved promise.\n *\n * Example:\n * ```\n * await whenRendered(myComponent);\n * ```\n *\n * @param component Component to wait upon\n * @returns Promise which resolves when the component is rendered.\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If a directive is diPublic, bloomAdd sets a property on the instance with this constant as\n * the key and the directive's unique ID as the value. This allows us to map directives to their\n * bloom filter bit for DI.\n */\nvar NG_ELEMENT_ID = '__NG_ELEMENT_ID__';\n/**\n * The number of slots in each bloom filter (used by DI). The larger this number, the fewer\n * directives that will share slots, and thus, the fewer false positives when checking for\n * the existence of a directive.\n */\nvar BLOOM_SIZE = 256;\n/** Counter used to generate unique IDs for directives. */\nvar nextNgElementId = 0;\n/**\n * Registers this directive as present in its node's injector by flipping the directive's\n * corresponding bit in the injector's bloom filter.\n *\n * @param injector The node injector in which the directive should be registered\n * @param type The directive to register\n */\nfunction bloomAdd(injector, type) {\n    var id = type[NG_ELEMENT_ID];\n    // Set a unique ID on the directive type, so if something tries to inject the directive,\n    // we can easily retrieve the ID and hash it into the bloom bit that should be checked.\n    if (id == null) {\n        id = type[NG_ELEMENT_ID] = nextNgElementId++;\n    }\n    // We only have BLOOM_SIZE (256) slots in our bloom filter (8 buckets * 32 bits each),\n    // so all unique IDs must be modulo-ed into a number from 0 - 255 to fit into the filter.\n    // This means that after 255, some directives will share slots, leading to some false positives\n    // when checking for a directive's presence.\n    var bloomBit = id % BLOOM_SIZE;\n    // Create a mask that targets the specific bit associated with the directive.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomBit;\n    // Use the raw bloomBit number to determine which bloom filter bucket we should check\n    // e.g: bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc\n    if (bloomBit < 128) {\n        // Then use the mask to flip on the bit (0-31) associated with the directive in that bucket\n        bloomBit < 64 ? (bloomBit < 32 ? (injector.bf0 |= mask) : (injector.bf1 |= mask)) :\n            (bloomBit < 96 ? (injector.bf2 |= mask) : (injector.bf3 |= mask));\n    }\n    else {\n        bloomBit < 192 ? (bloomBit < 160 ? (injector.bf4 |= mask) : (injector.bf5 |= mask)) :\n            (bloomBit < 224 ? (injector.bf6 |= mask) : (injector.bf7 |= mask));\n    }\n}\nfunction getOrCreateNodeInjector() {\n    ngDevMode && assertPreviousIsParent();\n    return getOrCreateNodeInjectorForNode(getPreviousOrParentNode());\n}\n/**\n * Creates (or gets an existing) injector for a given element or container.\n *\n * @param node for which an injector should be retrieved / created.\n * @returns Node injector\n */\nfunction getOrCreateNodeInjectorForNode(node) {\n    var nodeInjector = node.nodeInjector;\n    var parentInjector = node.parent && node.parent.nodeInjector;\n    if (nodeInjector != parentInjector) {\n        return nodeInjector;\n    }\n    return node.nodeInjector = {\n        parent: parentInjector,\n        node: node,\n        bf0: 0,\n        bf1: 0,\n        bf2: 0,\n        bf3: 0,\n        bf4: 0,\n        bf5: 0,\n        bf6: 0,\n        bf7: 0,\n        cbf0: parentInjector == null ? 0 : parentInjector.cbf0 | parentInjector.bf0,\n        cbf1: parentInjector == null ? 0 : parentInjector.cbf1 | parentInjector.bf1,\n        cbf2: parentInjector == null ? 0 : parentInjector.cbf2 | parentInjector.bf2,\n        cbf3: parentInjector == null ? 0 : parentInjector.cbf3 | parentInjector.bf3,\n        cbf4: parentInjector == null ? 0 : parentInjector.cbf4 | parentInjector.bf4,\n        cbf5: parentInjector == null ? 0 : parentInjector.cbf5 | parentInjector.bf5,\n        cbf6: parentInjector == null ? 0 : parentInjector.cbf6 | parentInjector.bf6,\n        cbf7: parentInjector == null ? 0 : parentInjector.cbf7 | parentInjector.bf7,\n        injector: null,\n        templateRef: null,\n        viewContainerRef: null,\n        elementRef: null,\n        changeDetectorRef: null\n    };\n}\n/**\n * Constructs an injection error with the given text and token.\n *\n * @param text The text of the error\n * @param token The token associated with the error\n * @returns The error that was created\n */\nfunction createInjectionError(text$$1, token) {\n    return new Error(\"ElementInjector: \" + text$$1 + \" [\" + stringify$1(token) + \"]\");\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param di The node injector in which a directive will be added\n * @param def The definition of the directive to be made public\n */\nfunction diPublicInInjector(di, def) {\n    bloomAdd(di, def.type);\n}\n/**\n * Makes a directive public to the DI system by adding it to an injector's bloom filter.\n *\n * @param def The definition of the directive to be made public\n */\nfunction diPublic(def) {\n    diPublicInInjector(getOrCreateNodeInjector(), def);\n}\n/**\n * Searches for an instance of the given type up the injector tree and returns\n * that instance if found.\n *\n * If not found, it will propagate up to the next parent injector until the token\n * is found or the top is reached.\n *\n * Usage example (in factory function):\n *\n * class SomeDirective {\n *   constructor(directive: DirectiveA) {}\n *\n *   static ngDirectiveDef = defineDirective({\n *     type: SomeDirective,\n *     factory: () => new SomeDirective(directiveInject(DirectiveA))\n *   });\n * }\n *\n * NOTE: use `directiveInject` with `@Directive`, `@Component`, and `@Pipe`. For\n * all other injection use `inject` which does not walk the DOM render tree.\n *\n * @param token The directive type to search for\n * @param flags Injection flags (e.g. CheckParent)\n * @returns The instance found\n */\nfunction directiveInject(token, flags, defaultValue) {\n    return getOrCreateInjectable(getOrCreateNodeInjector(), token, flags, defaultValue);\n}\n/**\n * Creates an ElementRef and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @returns The ElementRef instance to use\n */\n\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @returns The TemplateRef instance to use\n */\nfunction injectTemplateRef() {\n    return getOrCreateTemplateRef(getOrCreateNodeInjector());\n}\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction injectViewContainerRef() {\n    return getOrCreateContainerRef(getOrCreateNodeInjector());\n}\n/** Returns a ChangeDetectorRef (a.k.a. a ViewRef) */\nfunction injectChangeDetectorRef() {\n    return getOrCreateChangeDetectorRef(getOrCreateNodeInjector(), null);\n}\n/**\n * Inject static attribute value into directive constructor.\n *\n * This method is used with `factory` functions which are generated as part of\n * `defineDirective` or `defineComponent`. The method retrieves the static value\n * of an attribute. (Dynamic attributes are not supported since they are not resolved\n *  at the time of injection and can change over time.)\n *\n * # Example\n * Given:\n * ```\n * @Component(...)\n * class MyComponent {\n *   constructor(@Attribute('title') title: string) { ... }\n * }\n * ```\n * When instantiated with\n * ```\n * <my-component title=\"Hello\"></my-component>\n * ```\n *\n * Then factory method generated is:\n * ```\n * MyComponent.ngComponentDef = defineComponent({\n *   factory: () => new MyComponent(injectAttribute('title'))\n *   ...\n * })\n * ```\n *\n * @experimental\n */\nfunction injectAttribute(attrName) {\n    ngDevMode && assertPreviousIsParent();\n    var lElement = getPreviousOrParentNode();\n    ngDevMode && assertNodeType(lElement, 3 /* Element */);\n    var tElement = (lElement.tNode);\n    ngDevMode && assertNotNull(tElement, 'expecting tNode');\n    var attrs = tElement.attrs;\n    if (attrs) {\n        for (var i = 0; i < attrs.length; i = i + 2) {\n            if (attrs[i] == attrName) {\n                return attrs[i + 1];\n            }\n        }\n    }\n    return undefined;\n}\n/**\n * Creates a ViewRef and stores it on the injector as ChangeDetectorRef (public alias).\n * Or, if it already exists, retrieves the existing instance.\n *\n * @returns The ChangeDetectorRef to use\n */\nfunction getOrCreateChangeDetectorRef(di, context) {\n    if (di.changeDetectorRef)\n        return di.changeDetectorRef;\n    var currentNode = di.node;\n    if (isComponent((currentNode.tNode))) {\n        return di.changeDetectorRef = createViewRef(currentNode.data, context);\n    }\n    else if (currentNode.type === 3 /* Element */) {\n        return di.changeDetectorRef = getOrCreateHostChangeDetector(currentNode.view.node);\n    }\n    return null;\n}\n/** Gets or creates ChangeDetectorRef for the closest host component */\nfunction getOrCreateHostChangeDetector(currentNode) {\n    var hostNode = getClosestComponentAncestor(currentNode);\n    var hostInjector = hostNode.nodeInjector;\n    var existingRef = hostInjector && hostInjector.changeDetectorRef;\n    return existingRef ?\n        existingRef :\n        createViewRef(hostNode.data, hostNode.view.directives[hostNode.tNode.flags >> 13 /* INDX_SHIFT */]);\n}\n/**\n * If the node is an embedded view, traverses up the view tree to return the closest\n * ancestor view that is attached to a component. If it's already a component node,\n * returns itself.\n */\nfunction getClosestComponentAncestor(node) {\n    while (node.type === 2 /* View */) {\n        node = node.view.node;\n    }\n    return node;\n}\n/**\n * Searches for an instance of the given directive type up the injector tree and returns\n * that instance if found.\n *\n * Specifically, it gets the bloom filter bit associated with the directive (see bloomHashBit),\n * checks that bit against the bloom filter structure to identify an injector that might have\n * the directive (see bloomFindPossibleInjector), then searches the directives on that injector\n * for a match.\n *\n * If not found, it will propagate up to the next parent injector until the token\n * is found or the top is reached.\n *\n * @param di Node injector where the search should start\n * @param token The directive type to search for\n * @param flags Injection flags (e.g. CheckParent)\n * @returns The instance found\n */\nfunction getOrCreateInjectable(di, token, flags, defaultValue) {\n    var bloomHash = bloomHashBit(token);\n    // If the token has a bloom hash, then it is a directive that is public to the injection system\n    // (diPublic). If there is no hash, fall back to the module injector.\n    if (bloomHash === null) {\n        var moduleInjector = di.injector;\n        if (!moduleInjector) {\n            if (defaultValue != null) {\n                return defaultValue;\n            }\n            throw createInjectionError('NotFound', token);\n        }\n        moduleInjector.get(token);\n    }\n    else {\n        var injector = di;\n        while (injector) {\n            // Get the closest potential matching injector (upwards in the injector tree) that\n            // *potentially* has the token.\n            injector = bloomFindPossibleInjector(injector, bloomHash);\n            // If no injector is found, we *know* that there is no ancestor injector that contains the\n            // token, so we abort.\n            if (!injector) {\n                break;\n            }\n            // At this point, we have an injector which *may* contain the token, so we step through the\n            // directives associated with the injector's corresponding node to get the directive instance.\n            var node = injector.node;\n            // The size of the node's directive's list is stored in certain bits of the node's flags,\n            // so exact it with a mask and shift it back such that the bits reflect the real value.\n            var flags_1 = node.tNode.flags;\n            var size = (flags_1 & 8190 /* SIZE_MASK */) >> 1;\n            if (size !== 0) {\n                // The start index of the directives list is also part of the node's flags, but there is\n                // nothing to the \"left\" of it so it doesn't need a mask.\n                var start = flags_1 >> 13;\n                var defs = (node.view.tView.directives);\n                for (var i = start, ii = start + size; i < ii; i++) {\n                    // Get the definition for the directive at this index and, if it is injectable (diPublic),\n                    // and matches the given token, return the directive instance.\n                    var directiveDef = defs[i];\n                    if (directiveDef.diPublic && directiveDef.type == token) {\n                        return getDirectiveInstance(node.view.directives[i]);\n                    }\n                }\n            }\n            // If we *didn't* find the directive for the token from the candidate injector, we had a false\n            // positive. Traverse up the tree and continue.\n            injector = injector.parent;\n        }\n    }\n    // No directive was found for the given token.\n    // TODO: implement optional, check-self, and check-parent.\n    throw createInjectionError('Not found', token);\n}\n/**\n * Given a directive type, this function returns the bit in an injector's bloom filter\n * that should be used to determine whether or not the directive is present.\n *\n * When the directive was added to the bloom filter, it was given a unique ID that can be\n * retrieved on the class. Since there are only BLOOM_SIZE slots per bloom filter, the directive's\n * ID must be modulo-ed by BLOOM_SIZE to get the correct bloom bit (directives share slots after\n * BLOOM_SIZE is reached).\n *\n * @param type The directive type\n * @returns The bloom bit to check for the directive\n */\nfunction bloomHashBit(type) {\n    var id = type[NG_ELEMENT_ID];\n    return typeof id === 'number' ? id % BLOOM_SIZE : null;\n}\n/**\n * Finds the closest injector that might have a certain directive.\n *\n * Each directive corresponds to a bit in an injector's bloom filter. Given the bloom bit to\n * check and a starting injector, this function traverses up injectors until it finds an\n * injector that contains a 1 for that bit in its bloom filter. A 1 indicates that the\n * injector may have that directive. It only *may* have the directive because directives begin\n * to share bloom filter bits after the BLOOM_SIZE is reached, and it could correspond to a\n * different directive sharing the bit.\n *\n * Note: We can skip checking further injectors up the tree if an injector's cbf structure\n * has a 0 for that bloom bit. Since cbf contains the merged value of all the parent\n * injectors, a 0 in the bloom bit indicates that the parents definitely do not contain\n * the directive and do not need to be checked.\n *\n * @param injector The starting node injector to check\n * @param  bloomBit The bit to check in each injector's bloom filter\n * @returns An injector that might have the directive\n */\nfunction bloomFindPossibleInjector(startInjector, bloomBit) {\n    // Create a mask that targets the specific bit associated with the directive we're looking for.\n    // JS bit operations are 32 bits, so this will be a number between 2^0 and 2^31, corresponding\n    // to bit positions 0 - 31 in a 32 bit integer.\n    var mask = 1 << bloomBit;\n    // Traverse up the injector tree until we find a potential match or until we know there *isn't* a\n    // match.\n    var injector = startInjector;\n    while (injector) {\n        // Our bloom filter size is 256 bits, which is eight 32-bit bloom filter buckets:\n        // bf0 = [0 - 31], bf1 = [32 - 63], bf2 = [64 - 95], bf3 = [96 - 127], etc.\n        // Get the bloom filter value from the appropriate bucket based on the directive's bloomBit.\n        var value = void 0;\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.bf0 : injector.bf1) :\n                (bloomBit < 96 ? injector.bf2 : injector.bf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.bf4 : injector.bf5) :\n                (bloomBit < 224 ? injector.bf6 : injector.bf7);\n        }\n        // If the bloom filter value has the bit corresponding to the directive's bloomBit flipped on,\n        // this injector is a potential match.\n        if ((value & mask) === mask) {\n            return injector;\n        }\n        // If the current injector does not have the directive, check the bloom filters for the ancestor\n        // injectors (cbf0 - cbf7). These filters capture *all* ancestor injectors.\n        if (bloomBit < 128) {\n            value = bloomBit < 64 ? (bloomBit < 32 ? injector.cbf0 : injector.cbf1) :\n                (bloomBit < 96 ? injector.cbf2 : injector.cbf3);\n        }\n        else {\n            value = bloomBit < 192 ? (bloomBit < 160 ? injector.cbf4 : injector.cbf5) :\n                (bloomBit < 224 ? injector.cbf6 : injector.cbf7);\n        }\n        // If the ancestor bloom filter value has the bit corresponding to the directive, traverse up to\n        // find the specific injector. If the ancestor bloom filter does not have the bit, we can abort.\n        injector = (value & mask) ? injector.parent : null;\n    }\n    return null;\n}\nvar ReadFromInjectorFn = /** @class */ (function () {\n    function ReadFromInjectorFn(read) {\n        this.read = read;\n    }\n    return ReadFromInjectorFn;\n}());\n/**\n * Creates an ElementRef for a given node injector and stores it on the injector.\n * Or, if the ElementRef already exists, retrieves the existing ElementRef.\n *\n * @param di The node injector where we should store a created ElementRef\n * @returns The ElementRef instance to use\n */\nfunction getOrCreateElementRef(di) {\n    return di.elementRef || (di.elementRef = new ElementRef$1(di.node.type === 0 /* Container */ ? null : di.node.native));\n}\n\n\n\n\n/** A ref to a node's native element. */\nvar ElementRef$1 = /** @class */ (function () {\n    function ElementRef(nativeElement) {\n        this.nativeElement = nativeElement;\n    }\n    return ElementRef;\n}());\n/**\n * Creates a ViewContainerRef and stores it on the injector. Or, if the ViewContainerRef\n * already exists, retrieves the existing ViewContainerRef.\n *\n * @returns The ViewContainerRef instance to use\n */\nfunction getOrCreateContainerRef(di) {\n    return di.viewContainerRef ||\n        (di.viewContainerRef = new ViewContainerRef$1(di.node));\n}\n/**\n * A ref to a container that enables adding and removing views from that container\n * imperatively.\n */\nvar ViewContainerRef$1 = /** @class */ (function () {\n    function ViewContainerRef(_node) {\n        this._node = _node;\n    }\n    ViewContainerRef.prototype.clear = function () { throw notImplemented(); };\n    ViewContainerRef.prototype.get = function (index) { throw notImplemented(); };\n    ViewContainerRef.prototype.createEmbeddedView = function (templateRef, context, index) {\n        var viewRef = templateRef.createEmbeddedView((context));\n        this.insert(viewRef, index);\n        return viewRef;\n    };\n    ViewContainerRef.prototype.createComponent = function (componentFactory, index, injector, projectableNodes, ngModule) {\n        throw notImplemented();\n    };\n    ViewContainerRef.prototype.insert = function (viewRef, index) {\n        if (index == null) {\n            index = this._node.data.views.length;\n        }\n        else {\n            // +1 because it's legal to insert at the end.\n            ngDevMode && assertLessThan(index, this._node.data.views.length + 1, 'index');\n        }\n        var lView = viewRef._lViewNode;\n        insertView(this._node, lView, index);\n        // TODO(pk): this is a temporary index adjustment so imperativelly inserted (through\n        // ViewContainerRef) views\n        // are not removed in the containerRefreshEnd instruction.\n        // The final fix will consist of creating a dedicated container node for views inserted through\n        // ViewContainerRef.\n        // Such container should not be trimmed as it is the case in the containerRefreshEnd\n        // instruction.\n        this._node.data.nextIndex = this._node.data.views.length;\n        // If the view is dynamic (has a template), it needs to be counted both at the container\n        // level and at the node above the container.\n        if (lView.data.template !== null) {\n            // Increment the container view count.\n            this._node.data.dynamicViewCount++;\n            // Look for the parent node and increment its dynamic view count.\n            if (this._node.parent !== null && this._node.parent.data !== null) {\n                ngDevMode &&\n                    assertNodeOfPossibleTypes(this._node.parent, 2 /* View */, 3 /* Element */);\n                this._node.parent.data.dynamicViewCount++;\n            }\n        }\n        return viewRef;\n    };\n    ViewContainerRef.prototype.move = function (viewRef, currentIndex) {\n        throw notImplemented();\n    };\n    ViewContainerRef.prototype.indexOf = function (viewRef) { throw notImplemented(); };\n    ViewContainerRef.prototype.remove = function (index) { throw notImplemented(); };\n    ViewContainerRef.prototype.detach = function (index) { throw notImplemented(); };\n    return ViewContainerRef;\n}());\n/**\n * Creates a TemplateRef and stores it on the injector. Or, if the TemplateRef already\n * exists, retrieves the existing TemplateRef.\n *\n * @param di The node injector where we should store a created TemplateRef\n * @returns The TemplateRef instance to use\n */\nfunction getOrCreateTemplateRef(di) {\n    ngDevMode && assertNodeType(di.node, 0 /* Container */);\n    var data = di.node.data;\n    return di.templateRef || (di.templateRef = new TemplateRef$1(getOrCreateElementRef(di), (data.template), getRenderer()));\n}\nvar TemplateRef$1 = /** @class */ (function () {\n    function TemplateRef(elementRef, template, _renderer) {\n        this._renderer = _renderer;\n        this.elementRef = elementRef;\n        this._template = template;\n    }\n    TemplateRef.prototype.createEmbeddedView = function (context) {\n        var viewNode = renderEmbeddedTemplate(null, this._template, context, this._renderer);\n        return addDestroyable(new EmbeddedViewRef$1(viewNode, this._template, context));\n    };\n    return TemplateRef;\n}());\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a component definition object.\n *\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngComponentDef = defineComponent({\n *     ...\n *   });\n * }\n * ```\n */\nfunction defineComponent(componentDefinition) {\n    var type = componentDefinition.type;\n    var def = {\n        type: type,\n        diPublic: null,\n        factory: componentDefinition.factory,\n        template: componentDefinition.template || (null),\n        hostBindings: componentDefinition.hostBindings || null,\n        attributes: componentDefinition.attributes || null,\n        inputs: invertObject(componentDefinition.inputs),\n        outputs: invertObject(componentDefinition.outputs),\n        rendererType: resolveRendererType2(componentDefinition.rendererType) || null,\n        exportAs: componentDefinition.exportAs,\n        onInit: type.prototype.ngOnInit || null,\n        doCheck: type.prototype.ngDoCheck || null,\n        afterContentInit: type.prototype.ngAfterContentInit || null,\n        afterContentChecked: type.prototype.ngAfterContentChecked || null,\n        afterViewInit: type.prototype.ngAfterViewInit || null,\n        afterViewChecked: type.prototype.ngAfterViewChecked || null,\n        onDestroy: type.prototype.ngOnDestroy || null,\n        onPush: componentDefinition.changeDetection === exports.ChangeDetectionStrategy.OnPush,\n        directiveDefs: componentDefinition.directiveDefs || null,\n        pipeDefs: componentDefinition.pipeDefs || null,\n        selector: componentDefinition.selector\n    };\n    var feature = componentDefinition.features;\n    feature && feature.forEach(function (fn) { return fn(def); });\n    return def;\n}\nvar PRIVATE_PREFIX = '__ngOnChanges_';\n/**\n * Creates an NgOnChangesFeature function for a component's features list.\n *\n * It accepts an optional map of minified input property names to original property names,\n * if any input properties have a public alias.\n *\n * The NgOnChangesFeature function that is returned decorates a component with support for\n * the ngOnChanges lifecycle hook, so it should be included in any component that implements\n * that hook.\n *\n * Example usage:\n *\n * ```\n * static ngComponentDef = defineComponent({\n *   ...\n *   inputs: {name: 'publicName'},\n *   features: [NgOnChangesFeature({name: 'name'})]\n * });\n * ```\n *\n * @param inputPropertyNames Map of input property names, if they are aliased\n * @returns DirectiveDefFeature\n */\nfunction NgOnChangesFeature(inputPropertyNames) {\n    return function (definition) {\n        var inputs = definition.inputs;\n        var proto = definition.type.prototype;\n        // Place where we will store SimpleChanges if there is a change\n        Object.defineProperty(proto, PRIVATE_PREFIX, { value: undefined, writable: true });\n        var _loop_1 = function (pubKey) {\n            var minKey = inputs[pubKey];\n            var propertyName = inputPropertyNames && inputPropertyNames[minKey] || pubKey;\n            var privateMinKey = PRIVATE_PREFIX + minKey;\n            // Create a place where the actual value will be stored and make it non-enumerable\n            Object.defineProperty(proto, privateMinKey, { value: undefined, writable: true });\n            var existingDesc = Object.getOwnPropertyDescriptor(proto, minKey);\n            // create a getter and setter for property\n            Object.defineProperty(proto, minKey, {\n                get: function () {\n                    return (existingDesc && existingDesc.get) ? existingDesc.get.call(this) :\n                        this[privateMinKey];\n                },\n                set: function (value) {\n                    var simpleChanges = this[PRIVATE_PREFIX];\n                    var isFirstChange = simpleChanges === undefined;\n                    if (simpleChanges == null) {\n                        simpleChanges = this[PRIVATE_PREFIX] = {};\n                    }\n                    simpleChanges[propertyName] = new SimpleChange(this[privateMinKey], value, isFirstChange);\n                    (existingDesc && existingDesc.set) ? existingDesc.set.call(this, value) :\n                        this[privateMinKey] = value;\n                }\n            });\n        };\n        for (var pubKey in inputs) {\n            _loop_1(pubKey);\n        }\n        // If an onInit hook is defined, it will need to wrap the ngOnChanges call\n        // so the call order is changes-init-check in creation mode. In subsequent\n        // change detection runs, only the check wrapper will be called.\n        if (definition.onInit != null) {\n            definition.onInit = onChangesWrapper(definition.onInit);\n        }\n        definition.doCheck = onChangesWrapper(definition.doCheck);\n    };\n    function onChangesWrapper(delegateHook) {\n        return function () {\n            var simpleChanges = this[PRIVATE_PREFIX];\n            if (simpleChanges != null) {\n                this.ngOnChanges(simpleChanges);\n                this[PRIVATE_PREFIX] = null;\n            }\n            delegateHook && delegateHook.apply(this);\n        };\n    }\n}\nfunction PublicFeature(definition) {\n    definition.diPublic = diPublic;\n}\nvar EMPTY$1 = {};\n/** Swaps the keys and values of an object. */\nfunction invertObject(obj) {\n    if (obj == null)\n        return EMPTY$1;\n    var newObj = {};\n    for (var minifiedKey in obj) {\n        newObj[obj[minifiedKey]] = minifiedKey;\n    }\n    return newObj;\n}\n/**\n * Create a directive definition object.\n *\n * # Example\n * ```\n * class MyDirective {\n *   // Generated by Angular Template Compiler\n *   // [Symbol] syntax will not be supported by TypeScript until v2.7\n *   static ngDirectiveDef = defineDirective({\n *     ...\n *   });\n * }\n * ```\n */\nvar defineDirective = defineComponent;\n/**\n * Create a pipe definition object.\n *\n * # Example\n * ```\n * class MyPipe implements PipeTransform {\n *   // Generated by Angular Template Compiler\n *   static ngPipeDef = definePipe({\n *     ...\n *   });\n * }\n * ```\n * @param pipeDef Pipe definition generated by the compiler\n */\nfunction definePipe(pipeDef) {\n    return {\n        name: pipeDef.name,\n        n: pipeDef.factory,\n        pure: pipeDef.pure !== false,\n        onDestroy: pipeDef.type.prototype.ngOnDestroy || null\n    };\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * If the value hasn't been saved, calls the pure function to store and return the\n * value. If it has been saved, returns the saved value.\n *\n * @param pureFn Function that returns a value\n * @returns value\n */\nfunction pureFunction0(pureFn, thisArg) {\n    return getCreationMode() ? checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg) : pureFn()) :\n        consumeBinding();\n}\n/**\n * If the value of the provided exp has changed, calls the pure function to return\n * an updated value. Or if the value has not changed, returns cached value.\n *\n * @param pureFn Function that returns an updated value\n * @param exp Updated expression value\n * @returns Updated value\n */\nfunction pureFunction1(pureFn, exp, thisArg) {\n    return bindingUpdated(exp) ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp) : pureFn(exp)) :\n        consumeBinding();\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param pureFn\n * @param exp1\n * @param exp2\n * @returns Updated value\n */\nfunction pureFunction2(pureFn, exp1, exp2, thisArg) {\n    return bindingUpdated2(exp1, exp2) ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2) : pureFn(exp1, exp2)) :\n        consumeBinding();\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @returns Updated value\n */\nfunction pureFunction3(pureFn, exp1, exp2, exp3, thisArg) {\n    var different = bindingUpdated2(exp1, exp2);\n    return bindingUpdated(exp3) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3) : pureFn(exp1, exp2, exp3)) :\n        consumeBinding();\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @returns Updated value\n */\nfunction pureFunction4(pureFn, exp1, exp2, exp3, exp4, thisArg) {\n    return bindingUpdated4(exp1, exp2, exp3, exp4) ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4) : pureFn(exp1, exp2, exp3, exp4)) :\n        consumeBinding();\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @returns Updated value\n */\nfunction pureFunction5(pureFn, exp1, exp2, exp3, exp4, exp5, thisArg) {\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    return bindingUpdated(exp5) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5) :\n            pureFn(exp1, exp2, exp3, exp4, exp5)) :\n        consumeBinding();\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @returns Updated value\n */\nfunction pureFunction6(pureFn, exp1, exp2, exp3, exp4, exp5, exp6, thisArg) {\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    return bindingUpdated2(exp5, exp6) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6)) :\n        consumeBinding();\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @returns Updated value\n */\nfunction pureFunction7(pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, thisArg) {\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    different = bindingUpdated2(exp5, exp6) || different;\n    return bindingUpdated(exp7) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7)) :\n        consumeBinding();\n}\n/**\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param pureFn\n * @param exp1\n * @param exp2\n * @param exp3\n * @param exp4\n * @param exp5\n * @param exp6\n * @param exp7\n * @param exp8\n * @returns Updated value\n */\nfunction pureFunction8(pureFn, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8, thisArg) {\n    var different = bindingUpdated4(exp1, exp2, exp3, exp4);\n    return bindingUpdated4(exp5, exp6, exp7, exp8) || different ?\n        checkAndUpdateBinding$1(thisArg ? pureFn.call(thisArg, exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8) :\n            pureFn(exp1, exp2, exp3, exp4, exp5, exp6, exp7, exp8)) :\n        consumeBinding();\n}\n/**\n * pureFunction instruction that can support any number of bindings.\n *\n * If the value of any provided exp has changed, calls the pure function to return\n * an updated value. Or if no values have changed, returns cached value.\n *\n * @param pureFn A pure function that takes binding values and builds an object or array\n * containing those values.\n * @param exp An array of binding values\n * @returns Updated value\n */\nfunction pureFunctionV(pureFn, exps, thisArg) {\n    var different = false;\n    for (var i = 0; i < exps.length; i++) {\n        bindingUpdated(exps[i]) && (different = true);\n    }\n    return different ? checkAndUpdateBinding$1(pureFn.apply(thisArg, exps)) : consumeBinding();\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * Create a pipe.\n *\n * @param index Pipe index where the pipe will be stored.\n * @param pipeDef Pipe definition object for registering life cycle hooks.\n * @param firstInstance (optional) The first instance of the pipe that can be reused for pure pipes.\n * @returns T the instance of the pipe.\n */\nfunction pipe(index, pipeName, firstInstance) {\n    var tView = getTView();\n    var pipeDef;\n    if (tView.firstTemplatePass) {\n        pipeDef = getPipeDef(pipeName, tView.pipeRegistry);\n        tView.data[index] = pipeDef;\n        if (pipeDef.onDestroy) {\n            (tView.pipeDestroyHooks || (tView.pipeDestroyHooks = [])).push(index, pipeDef.onDestroy);\n        }\n    }\n    else {\n        pipeDef = tView.data[index];\n    }\n    var pipeInstance = pipeDef.pure && firstInstance ? firstInstance : pipeDef.n();\n    store(index, pipeInstance);\n    return pipeInstance;\n}\n/**\n * Searches the pipe registry for a pipe with the given name. If one is found,\n * returns the pipe. Otherwise, an error is thrown because the pipe cannot be resolved.\n *\n * @param name Name of pipe to resolve\n * @param registry Full list of available pipes\n * @returns Matching PipeDef\n */\nfunction getPipeDef(name, registry) {\n    if (registry) {\n        for (var i = 0; i < registry.length; i++) {\n            var pipeDef = registry[i];\n            if (name === pipeDef.name) {\n                return pipeDef;\n            }\n        }\n    }\n    throw new Error(\"Pipe with name '\" + name + \"' not found!\");\n}\n/**\n * Invokes a pipe with 1 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param v1 1st argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind1(index, v1) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction1(pipeInstance.transform, v1, pipeInstance) :\n        pipeInstance.transform(v1);\n}\n/**\n * Invokes a pipe with 2 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind2(index, v1, v2) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction2(pipeInstance.transform, v1, v2, pipeInstance) :\n        pipeInstance.transform(v1, v2);\n}\n/**\n * Invokes a pipe with 3 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 4rd argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind3(index, v1, v2, v3) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction3(pipeInstance.transform.bind(pipeInstance), v1, v2, v3) :\n        pipeInstance.transform(v1, v2, v3);\n}\n/**\n * Invokes a pipe with 4 arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param v1 1st argument to {@link PipeTransform#transform}.\n * @param v2 2nd argument to {@link PipeTransform#transform}.\n * @param v3 3rd argument to {@link PipeTransform#transform}.\n * @param v4 4th argument to {@link PipeTransform#transform}.\n */\nfunction pipeBind4(index, v1, v2, v3, v4) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunction4(pipeInstance.transform, v1, v2, v3, v4, pipeInstance) :\n        pipeInstance.transform(v1, v2, v3, v4);\n}\n/**\n * Invokes a pipe with variable number of arguments.\n *\n * This instruction acts as a guard to {@link PipeTransform#transform} invoking\n * the pipe only when an input to the pipe changes.\n *\n * @param index Pipe index where the pipe was stored on creation.\n * @param values Array of arguments to pass to {@link PipeTransform#transform} method.\n */\nfunction pipeBindV(index, values) {\n    var pipeInstance = load(index);\n    return isPure(index) ? pureFunctionV(pipeInstance.transform, values, pipeInstance) :\n        pipeInstance.transform.apply(pipeInstance, values);\n}\nfunction isPure(index) {\n    return getTView().data[index].pure;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// Note: This hack is necessary so we don't erroneously get a circular dependency\n// failure based on types.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar LQueries_ = /** @class */ (function () {\n    function LQueries_(deep) {\n        this.shallow = null;\n        this.deep = null;\n        this.deep = deep == null ? null : deep;\n    }\n    LQueries_.prototype.track = function (queryList, predicate, descend, read) {\n        // TODO(misko): This is not right. In case of inherited state, a calling track will incorrectly\n        // mutate parent.\n        if (descend) {\n            this.deep = createQuery$1(this.deep, queryList, predicate, read != null ? read : null);\n        }\n        else {\n            this.shallow = createQuery$1(this.shallow, queryList, predicate, read != null ? read : null);\n        }\n    };\n    LQueries_.prototype.child = function () {\n        if (this.deep === null) {\n            // if we don't have any deep queries then no need to track anything more.\n            return null;\n        }\n        if (this.shallow === null) {\n            // DeepQuery: We can reuse the current state if the child state would be same as current\n            // state.\n            return this;\n        }\n        else {\n            // We need to create new state\n            return new LQueries_(this.deep);\n        }\n    };\n    LQueries_.prototype.container = function () {\n        var result = null;\n        var query = this.deep;\n        while (query) {\n            var containerValues = []; // prepare room for views\n            query.values.push(containerValues);\n            var clonedQuery = { next: null, list: query.list, predicate: query.predicate, values: containerValues };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    LQueries_.prototype.enterView = function (index) {\n        var result = null;\n        var query = this.deep;\n        while (query) {\n            var viewValues = []; // prepare room for view nodes\n            query.values.splice(index, 0, viewValues);\n            var clonedQuery = { next: null, list: query.list, predicate: query.predicate, values: viewValues };\n            clonedQuery.next = result;\n            result = clonedQuery;\n            query = query.next;\n        }\n        return result ? new LQueries_(result) : null;\n    };\n    LQueries_.prototype.addNode = function (node) {\n        add(this.shallow, node);\n        add(this.deep, node);\n    };\n    LQueries_.prototype.removeView = function (index) {\n        var query = this.deep;\n        while (query) {\n            var removed = query.values.splice(index, 1);\n            // mark a query as dirty only when removed view had matching modes\n            ngDevMode && assertEqual(removed.length, 1, 'removed.length');\n            if (removed[0].length) {\n                query.list.setDirty();\n            }\n            query = query.next;\n        }\n    };\n    return LQueries_;\n}());\n/**\n * Iterates over local names for a given node and returns directive index\n * (or -1 if a local name points to an element).\n *\n * @param tNode static data of a node to check\n * @param selector selector to match\n * @returns directive index, -1 or null if a selector didn't match any of the local names\n */\nfunction getIdxOfMatchingSelector(tNode, selector) {\n    var localNames = tNode.localNames;\n    if (localNames) {\n        for (var i = 0; i < localNames.length; i += 2) {\n            if (localNames[i] === selector) {\n                return localNames[i + 1];\n            }\n        }\n    }\n    return null;\n}\n/**\n * Iterates over all the directives for a node and returns index of a directive for a given type.\n *\n * @param node Node on which directives are present.\n * @param type Type of a directive to look for.\n * @returns Index of a found directive or null when none found.\n */\nfunction geIdxOfMatchingDirective(node, type) {\n    var defs = (node.view.tView.directives);\n    var flags = node.tNode.flags;\n    var size = (flags & 8190 /* SIZE_MASK */) >> 1;\n    for (var i = flags >> 13 /* INDX_SHIFT */, ii = i + size; i < ii; i++) {\n        var def = defs[i];\n        if (def.diPublic && def.type === type) {\n            return i;\n        }\n    }\n    return null;\n}\nfunction readFromNodeInjector(nodeInjector, node, read, directiveIdx) {\n    if (read instanceof ReadFromInjectorFn) {\n        return read.read(nodeInjector, node, directiveIdx);\n    }\n    else {\n        var matchingIdx = geIdxOfMatchingDirective(node, read);\n        if (matchingIdx !== null) {\n            return node.view.directives[matchingIdx];\n        }\n    }\n    return null;\n}\nfunction add(query, node) {\n    var nodeInjector = getOrCreateNodeInjectorForNode(node);\n    while (query) {\n        var predicate = query.predicate;\n        var type = predicate.type;\n        if (type) {\n            var directiveIdx = geIdxOfMatchingDirective(node, type);\n            if (directiveIdx !== null) {\n                // a node is matching a predicate - determine what to read\n                // if read token and / or strategy is not specified, use type as read token\n                var result = readFromNodeInjector(nodeInjector, node, predicate.read || type, directiveIdx);\n                if (result !== null) {\n                    addMatch(query, result);\n                }\n            }\n        }\n        else {\n            var selector = (predicate.selector);\n            for (var i = 0; i < selector.length; i++) {\n                ngDevMode && assertNotNull(node.tNode, 'node.tNode');\n                var directiveIdx = getIdxOfMatchingSelector((node.tNode), selector[i]);\n                if (directiveIdx !== null) {\n                    // a node is matching a predicate - determine what to read\n                    // note that queries using name selector must specify read strategy\n                    ngDevMode && assertNotNull(predicate.read, 'the node should have a predicate');\n                    var result = readFromNodeInjector(nodeInjector, node, (predicate.read), directiveIdx);\n                    if (result !== null) {\n                        addMatch(query, result);\n                    }\n                }\n            }\n        }\n        query = query.next;\n    }\n}\nfunction addMatch(query, matchingValue) {\n    query.values.push(matchingValue);\n    query.list.setDirty();\n}\nfunction createPredicate(predicate, read) {\n    var isArray = Array.isArray(predicate);\n    return {\n        type: isArray ? null : predicate,\n        selector: isArray ? predicate : null,\n        read: read\n    };\n}\nfunction createQuery$1(previous, queryList, predicate, read) {\n    return {\n        next: previous,\n        list: queryList,\n        predicate: createPredicate(predicate, read),\n        values: queryList._valuesTree\n    };\n}\nvar QueryList_ = /** @class */ (function () {\n    function QueryList_() {\n        this.dirty = true;\n        this.changes = new EventEmitter();\n        this._values = [];\n        /** @internal */\n        this._valuesTree = [];\n    }\n    Object.defineProperty(QueryList_.prototype, \"length\", {\n        get: function () { return this._values.length; },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"first\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[0] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    Object.defineProperty(QueryList_.prototype, \"last\", {\n        get: function () {\n            var values = this._values;\n            return values.length ? values[values.length - 1] : null;\n        },\n        enumerable: true,\n        configurable: true\n    });\n    /**\n     * See\n     * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n     */\n    /**\n       * See\n       * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n       */\n    QueryList_.prototype.map = /**\n       * See\n       * [Array.map](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/map)\n       */\n    function (fn) { return this._values.map(fn); };\n    /**\n     * See\n     * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n     */\n    /**\n       * See\n       * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n       */\n    QueryList_.prototype.filter = /**\n       * See\n       * [Array.filter](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/filter)\n       */\n    function (fn) {\n        return this._values.filter(fn);\n    };\n    /**\n     * See\n     * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n     */\n    /**\n       * See\n       * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n       */\n    QueryList_.prototype.find = /**\n       * See\n       * [Array.find](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/find)\n       */\n    function (fn) {\n        return this._values.find(fn);\n    };\n    /**\n     * See\n     * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n     */\n    /**\n       * See\n       * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n       */\n    QueryList_.prototype.reduce = /**\n       * See\n       * [Array.reduce](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/reduce)\n       */\n    function (fn, init) {\n        return this._values.reduce(fn, init);\n    };\n    /**\n     * See\n     * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n     */\n    /**\n       * See\n       * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n       */\n    QueryList_.prototype.forEach = /**\n       * See\n       * [Array.forEach](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach)\n       */\n    function (fn) { this._values.forEach(fn); };\n    /**\n     * See\n     * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n     */\n    /**\n       * See\n       * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n       */\n    QueryList_.prototype.some = /**\n       * See\n       * [Array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some)\n       */\n    function (fn) {\n        return this._values.some(fn);\n    };\n    QueryList_.prototype.toArray = function () { return this._values.slice(0); };\n    QueryList_.prototype[getSymbolIterator()] = function () { return this._values[getSymbolIterator()](); };\n    QueryList_.prototype.toString = function () { return this._values.toString(); };\n    QueryList_.prototype.reset = function (res) {\n        this._values = flatten$1(res);\n        this.dirty = false;\n    };\n    QueryList_.prototype.notifyOnChanges = function () { this.changes.emit(this); };\n    QueryList_.prototype.setDirty = function () { this.dirty = true; };\n    QueryList_.prototype.destroy = function () {\n        this.changes.complete();\n        this.changes.unsubscribe();\n    };\n    return QueryList_;\n}());\nvar QueryList$1 = QueryList_;\n/**\n * Creates and returns a QueryList.\n *\n * @param memoryIndex The index in memory where the QueryList should be saved. If null,\n * this is is a content query and the QueryList will be saved later through directiveCreate.\n * @param predicate The type for which the query will search\n * @param descend Whether or not to descend into children\n * @param read What to save in the query\n * @returns QueryList<T>\n */\nfunction query(memoryIndex, predicate, descend, read) {\n    ngDevMode && assertPreviousIsParent();\n    var queryList = new QueryList$1();\n    var queries = getCurrentQueries(LQueries_);\n    queries.track(queryList, predicate, descend, read);\n    if (memoryIndex != null) {\n        store(memoryIndex, queryList);\n    }\n    return queryList;\n}\n/**\n * Refreshes a query by combining matches from all active views and removing matches from deleted\n * views.\n * Returns true if a query got dirty during change detection, false otherwise.\n */\nfunction queryRefresh(queryList) {\n    var queryListImpl = queryList;\n    if (queryList.dirty) {\n        queryList.reset(queryListImpl._valuesTree);\n        queryList.notifyOnChanges();\n        return true;\n    }\n    return false;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar BRAND = '__SANITIZER_TRUSTED_BRAND__';\n/**\n * An `html` sanitizer which converts untrusted `html` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `html` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustHtml}.\n *\n * @param unsafeHtml untrusted `html`, typically from the user.\n * @returns `html` string which is safe to display to user, because all of the dangerous javascript\n * and urls have been removed.\n */\nfunction sanitizeHtml(unsafeHtml) {\n    if (unsafeHtml instanceof String && unsafeHtml[BRAND] === 'Html') {\n        return unsafeHtml.toString();\n    }\n    return _sanitizeHtml(document, stringify$1(unsafeHtml));\n}\n/**\n * A `style` sanitizer which converts untrusted `style` **string** into trusted string by removing\n * dangerous content.\n *\n * This method parses the `style` and locates potentially dangerous content (such as urls and\n * javascript) and removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustStyle}.\n *\n * @param unsafeStyle untrusted `style`, typically from the user.\n * @returns `style` string which is safe to bind to the `style` properties, because all of the\n * dangerous javascript and urls have been removed.\n */\nfunction sanitizeStyle(unsafeStyle) {\n    if (unsafeStyle instanceof String && unsafeStyle[BRAND] === 'Style') {\n        return unsafeStyle.toString();\n    }\n    return _sanitizeStyle(stringify$1(unsafeStyle));\n}\n/**\n * A `url` sanitizer which converts untrusted `url` **string** into trusted string by removing\n * dangerous\n * content.\n *\n * This method parses the `url` and locates potentially dangerous content (such as javascript) and\n * removes it.\n *\n * It is possible to mark a string as trusted by calling {@link bypassSanitizationTrustUrl}.\n *\n * @param unsafeUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * all of the dangerous javascript has been removed.\n */\nfunction sanitizeUrl(unsafeUrl) {\n    if (unsafeUrl instanceof String && unsafeUrl[BRAND] === 'Url') {\n        return unsafeUrl.toString();\n    }\n    return _sanitizeUrl(stringify$1(unsafeUrl));\n}\n/**\n * A `url` sanitizer which only lets trusted `url`s through.\n *\n * This passes only `url`s marked trusted by calling {@link bypassSanitizationTrustResourceUrl}.\n *\n * @param unsafeResourceUrl untrusted `url`, typically from the user.\n * @returns `url` string which is safe to bind to the `src` properties such as `<img src>`, because\n * only trusted `url`s have been allowed to pass.\n */\nfunction sanitizeResourceUrl(unsafeResourceUrl) {\n    if (unsafeResourceUrl instanceof String &&\n        unsafeResourceUrl[BRAND] === 'ResourceUrl') {\n        return unsafeResourceUrl.toString();\n    }\n    throw new Error('unsafe value used in a resource URL context (see http://g.co/ng/security#xss)');\n}\n/**\n * A `script` sanitizer which only lets trusted javascript through.\n *\n * This passes only `script`s marked trusted by calling {@link bypassSanitizationTrustScript}.\n *\n * @param unsafeScript untrusted `script`, typically from the user.\n * @returns `url` string which is safe to bind to the `<script>` element such as `<img src>`,\n * because only trusted `scripts`s have been allowed to pass.\n */\n\n/**\n * Mark `html` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link htmlSanitizer} to be trusted implicitly.\n *\n * @param trustedHtml `html` string which needs to be implicitly trusted.\n * @returns a `html` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustHtml(trustedHtml) {\n    return bypassSanitizationTrustString(trustedHtml, 'Html');\n}\n/**\n * Mark `style` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link styleSanitizer} to be trusted implicitly.\n *\n * @param trustedStyle `style` string which needs to be implicitly trusted.\n * @returns a `style` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustStyle(trustedStyle) {\n    return bypassSanitizationTrustString(trustedStyle, 'Style');\n}\n/**\n * Mark `script` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link scriptSanitizer} to be trusted implicitly.\n *\n * @param trustedScript `script` string which needs to be implicitly trusted.\n * @returns a `script` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustScript(trustedScript) {\n    return bypassSanitizationTrustString(trustedScript, 'Script');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link urlSanitizer} to be trusted implicitly.\n *\n * @param trustedUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustUrl(trustedUrl) {\n    return bypassSanitizationTrustString(trustedUrl, 'Url');\n}\n/**\n * Mark `url` string as trusted.\n *\n * This function wraps the trusted string in `String` and brands it in a way which makes it\n * recognizable to {@link resourceUrlSanitizer} to be trusted implicitly.\n *\n * @param trustedResourceUrl `url` string which needs to be implicitly trusted.\n * @returns a `url` `String` which has been branded to be implicitly trusted.\n */\nfunction bypassSanitizationTrustResourceUrl(trustedResourceUrl) {\n    return bypassSanitizationTrustString(trustedResourceUrl, 'ResourceUrl');\n}\nfunction bypassSanitizationTrustString(trustedString, mode) {\n    var trusted = new String(trustedString);\n    trusted[BRAND] = mode;\n    return trusted;\n}\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// clang-format on\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexports.Éµangular_packages_core_core_k = _iterableDiffersFactory;\nexports.Éµangular_packages_core_core_l = _keyValueDiffersFactory;\nexports.Éµangular_packages_core_core_m = _localeFactory;\nexports.Éµangular_packages_core_core_f = _appIdRandomProviderFactory;\nexports.Éµangular_packages_core_core_g = defaultIterableDiffers;\nexports.Éµangular_packages_core_core_h = defaultKeyValueDiffers;\nexports.Éµangular_packages_core_core_i = DefaultIterableDifferFactory;\nexports.Éµangular_packages_core_core_j = DefaultKeyValueDifferFactory;\nexports.Éµangular_packages_core_core_c = ReflectiveInjector_;\nexports.Éµangular_packages_core_core_d = ReflectiveDependency;\nexports.Éµangular_packages_core_core_e = resolveReflectiveProviders;\nexports.Éµangular_packages_core_core_n = wtfEnabled;\nexports.Éµangular_packages_core_core_p = createScope;\nexports.Éµangular_packages_core_core_o = detectWTF;\nexports.Éµangular_packages_core_core_s = endTimeRange;\nexports.Éµangular_packages_core_core_q = leave;\nexports.Éµangular_packages_core_core_r = startTimeRange;\nexports.Éµangular_packages_core_core_w = getOrCreateChangeDetectorRef;\nexports.Éµangular_packages_core_core_y = getOrCreateContainerRef;\nexports.Éµangular_packages_core_core_x = getOrCreateInjectable;\nexports.Éµangular_packages_core_core_v = getOrCreateNodeInjector;\nexports.Éµangular_packages_core_core_z = getOrCreateTemplateRef;\nexports.Éµangular_packages_core_core_bc = bindingUpdated;\nexports.Éµangular_packages_core_core_be = bindingUpdated2;\nexports.Éµangular_packages_core_core_bf = bindingUpdated4;\nexports.Éµangular_packages_core_core_bd = checkAndUpdateBinding$1;\nexports.Éµangular_packages_core_core_bb = consumeBinding;\nexports.Éµangular_packages_core_core_ba = getCreationMode;\nexports.Éµangular_packages_core_core_a = makeParamDecorator;\nexports.Éµangular_packages_core_core_b = makePropDecorator;\nexports.Éµangular_packages_core_core_t = _def;\nexports.Éµangular_packages_core_core_u = DebugContext;\nexports.createPlatform = createPlatform;\nexports.assertPlatform = assertPlatform;\nexports.destroyPlatform = destroyPlatform;\nexports.getPlatform = getPlatform;\nexports.PlatformRef = PlatformRef;\nexports.ApplicationRef = ApplicationRef;\nexports.enableProdMode = enableProdMode;\nexports.isDevMode = isDevMode;\nexports.createPlatformFactory = createPlatformFactory;\nexports.NgProbeToken = NgProbeToken;\nexports.APP_ID = APP_ID;\nexports.PACKAGE_ROOT_URL = PACKAGE_ROOT_URL;\nexports.PLATFORM_INITIALIZER = PLATFORM_INITIALIZER;\nexports.PLATFORM_ID = PLATFORM_ID;\nexports.APP_BOOTSTRAP_LISTENER = APP_BOOTSTRAP_LISTENER;\nexports.APP_INITIALIZER = APP_INITIALIZER;\nexports.ApplicationInitStatus = ApplicationInitStatus;\nexports.DebugElement = DebugElement;\nexports.DebugNode = DebugNode;\nexports.asNativeElements = asNativeElements;\nexports.getDebugNode = getDebugNode;\nexports.Testability = Testability;\nexports.TestabilityRegistry = TestabilityRegistry;\nexports.setTestabilityGetter = setTestabilityGetter;\nexports.TRANSLATIONS = TRANSLATIONS;\nexports.TRANSLATIONS_FORMAT = TRANSLATIONS_FORMAT;\nexports.LOCALE_ID = LOCALE_ID;\nexports.ApplicationModule = ApplicationModule;\nexports.wtfCreateScope = wtfCreateScope;\nexports.wtfLeave = wtfLeave;\nexports.wtfStartTimeRange = wtfStartTimeRange;\nexports.wtfEndTimeRange = wtfEndTimeRange;\nexports.Type = Type;\nexports.EventEmitter = EventEmitter;\nexports.ErrorHandler = ErrorHandler;\nexports.Sanitizer = Sanitizer;\nexports.ANALYZE_FOR_ENTRY_COMPONENTS = ANALYZE_FOR_ENTRY_COMPONENTS;\nexports.Attribute = Attribute;\nexports.ContentChild = ContentChild;\nexports.ContentChildren = ContentChildren;\nexports.Query = Query;\nexports.ViewChild = ViewChild;\nexports.ViewChildren = ViewChildren;\nexports.Component = Component;\nexports.Directive = Directive;\nexports.HostBinding = HostBinding;\nexports.HostListener = HostListener;\nexports.Input = Input;\nexports.Output = Output;\nexports.Pipe = Pipe;\nexports.CUSTOM_ELEMENTS_SCHEMA = CUSTOM_ELEMENTS_SCHEMA;\nexports.NO_ERRORS_SCHEMA = NO_ERRORS_SCHEMA;\nexports.NgModule = NgModule;\nexports.Version = Version;\nexports.VERSION = VERSION;\nexports.forwardRef = forwardRef;\nexports.resolveForwardRef = resolveForwardRef;\nexports.Injectable = Injectable;\nexports.inject = inject;\nexports.INJECTOR = INJECTOR;\nexports.Injector = Injector;\nexports.ReflectiveInjector = ReflectiveInjector;\nexports.createInjector = createInjector;\nexports.ResolvedReflectiveFactory = ResolvedReflectiveFactory;\nexports.ReflectiveKey = ReflectiveKey;\nexports.InjectionToken = InjectionToken;\nexports.Inject = Inject;\nexports.Optional = Optional;\nexports.Self = Self;\nexports.SkipSelf = SkipSelf;\nexports.Host = Host;\nexports.defineInjectable = defineInjectable;\nexports.defineInjector = defineInjector;\nexports.NgZone = NgZone;\nexports.RenderComponentType = RenderComponentType;\nexports.Renderer = Renderer;\nexports.Renderer2 = Renderer2;\nexports.RendererFactory2 = RendererFactory2;\nexports.RootRenderer = RootRenderer;\nexports.COMPILER_OPTIONS = COMPILER_OPTIONS;\nexports.Compiler = Compiler;\nexports.CompilerFactory = CompilerFactory;\nexports.ModuleWithComponentFactories = ModuleWithComponentFactories;\nexports.ComponentFactory = ComponentFactory;\nexports.ComponentRef = ComponentRef;\nexports.ComponentFactoryResolver = ComponentFactoryResolver;\nexports.ElementRef = ElementRef;\nexports.NgModuleFactory = NgModuleFactory;\nexports.NgModuleRef = NgModuleRef;\nexports.NgModuleFactoryLoader = NgModuleFactoryLoader;\nexports.getModuleFactory = getModuleFactory;\nexports.QueryList = QueryList;\nexports.SystemJsNgModuleLoader = SystemJsNgModuleLoader;\nexports.SystemJsNgModuleLoaderConfig = SystemJsNgModuleLoaderConfig;\nexports.TemplateRef = TemplateRef;\nexports.ViewContainerRef = ViewContainerRef;\nexports.EmbeddedViewRef = EmbeddedViewRef;\nexports.ViewRef = ViewRef;\nexports.ChangeDetectorRef = ChangeDetectorRef;\nexports.DefaultIterableDiffer = DefaultIterableDiffer;\nexports.IterableDiffers = IterableDiffers;\nexports.KeyValueDiffers = KeyValueDiffers;\nexports.SimpleChange = SimpleChange;\nexports.WrappedValue = WrappedValue;\nexports.platformCore = platformCore;\nexports.ÉµALLOW_MULTIPLE_PLATFORMS = ALLOW_MULTIPLE_PLATFORMS;\nexports.ÉµAPP_ID_RANDOM_PROVIDER = APP_ID_RANDOM_PROVIDER;\nexports.ÉµdevModeEqual = devModeEqual;\nexports.ÉµisListLikeIterable = isListLikeIterable;\nexports.ÉµisDefaultChangeDetectionStrategy = isDefaultChangeDetectionStrategy;\nexports.ÉµConsole = Console;\nexports.ÉµsetCurrentInjector = setCurrentInjector;\nexports.ÉµAPP_ROOT = APP_ROOT;\nexports.ÉµComponentFactory = ComponentFactory;\nexports.ÉµCodegenComponentFactoryResolver = CodegenComponentFactoryResolver;\nexports.ÉµReflectionCapabilities = ReflectionCapabilities;\nexports.ÉµRenderDebugInfo = RenderDebugInfo;\nexports.Éµ_sanitizeHtml = _sanitizeHtml;\nexports.Éµ_sanitizeStyle = _sanitizeStyle;\nexports.Éµ_sanitizeUrl = _sanitizeUrl;\nexports.Éµglobal = _global;\nexports.ÉµlooseIdentical = looseIdentical;\nexports.Éµstringify = stringify;\nexports.ÉµmakeDecorator = makeDecorator;\nexports.ÉµisObservable = isObservable;\nexports.ÉµisPromise = isPromise;\nexports.ÉµclearOverrides = clearOverrides;\nexports.ÉµoverrideComponentView = overrideComponentView;\nexports.ÉµoverrideProvider = overrideProvider;\nexports.ÉµNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR = NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR;\nexports.ÉµdefineComponent = defineComponent;\nexports.ÉµdefineDirective = defineDirective;\nexports.ÉµdefinePipe = definePipe;\nexports.ÉµdetectChanges = detectChanges;\nexports.ÉµrenderComponent = renderComponent;\nexports.ÉµdirectiveInject = directiveInject;\nexports.ÉµinjectTemplateRef = injectTemplateRef;\nexports.ÉµinjectViewContainerRef = injectViewContainerRef;\nexports.ÉµinjectChangeDetectorRef = injectChangeDetectorRef;\nexports.ÉµinjectAttribute = injectAttribute;\nexports.ÉµPublicFeature = PublicFeature;\nexports.ÉµNgOnChangesFeature = NgOnChangesFeature;\nexports.ÉµNC = NO_CHANGE;\nexports.ÉµC = container;\nexports.ÉµE = elementStart;\nexports.ÉµL = listener;\nexports.ÉµT = text;\nexports.ÉµV = embeddedViewStart;\nexports.ÉµQ = query;\nexports.Éµd = loadDirective;\nexports.ÉµP = projection;\nexports.Éµb = bind;\nexports.Éµi1 = interpolation1;\nexports.Éµi2 = interpolation2;\nexports.Éµi3 = interpolation3;\nexports.Éµi4 = interpolation4;\nexports.Éµi5 = interpolation5;\nexports.Éµi6 = interpolation6;\nexports.Éµi7 = interpolation7;\nexports.Éµi8 = interpolation8;\nexports.ÉµiV = interpolationV;\nexports.Éµpb1 = pipeBind1;\nexports.Éµpb2 = pipeBind2;\nexports.Éµpb3 = pipeBind3;\nexports.Éµpb4 = pipeBind4;\nexports.ÉµpbV = pipeBindV;\nexports.Éµf0 = pureFunction0;\nexports.Éµf1 = pureFunction1;\nexports.Éµf2 = pureFunction2;\nexports.Éµf3 = pureFunction3;\nexports.Éµf4 = pureFunction4;\nexports.Éµf5 = pureFunction5;\nexports.Éµf6 = pureFunction6;\nexports.Éµf7 = pureFunction7;\nexports.Éµf8 = pureFunction8;\nexports.ÉµfV = pureFunctionV;\nexports.ÉµcR = containerRefreshStart;\nexports.Éµcr = containerRefreshEnd;\nexports.ÉµqR = queryRefresh;\nexports.Éµe = elementEnd;\nexports.Éµp = elementProperty;\nexports.ÉµpD = projectionDef;\nexports.Éµa = elementAttribute;\nexports.Éµs = elementStyle;\nexports.Éµsn = elementStyleNamed;\nexports.Éµk = elementClass;\nexports.Éµkn = elementClassNamed;\nexports.Éµt = textBinding;\nexports.Éµv = embeddedViewEnd;\nexports.Éµst = store;\nexports.Éµld = load;\nexports.ÉµPp = pipe;\nexports.ÉµbypassSanitizationTrustHtml = bypassSanitizationTrustHtml;\nexports.ÉµbypassSanitizationTrustStyle = bypassSanitizationTrustStyle;\nexports.ÉµbypassSanitizationTrustScript = bypassSanitizationTrustScript;\nexports.ÉµbypassSanitizationTrustUrl = bypassSanitizationTrustUrl;\nexports.ÉµbypassSanitizationTrustResourceUrl = bypassSanitizationTrustResourceUrl;\nexports.ÉµsanitizeHtml = sanitizeHtml;\nexports.ÉµsanitizeStyle = sanitizeStyle;\nexports.ÉµsanitizeUrl = sanitizeUrl;\nexports.ÉµsanitizeResourceUrl = sanitizeResourceUrl;\nexports.ÉµregisterModuleFactory = registerModuleFactory;\nexports.ÉµEMPTY_ARRAY = EMPTY_ARRAY$2;\nexports.ÉµEMPTY_MAP = EMPTY_MAP;\nexports.Éµand = anchorDef;\nexports.Éµccf = createComponentFactory;\nexports.Éµcmf = createNgModuleFactory;\nexports.Éµcrt = createRendererType2;\nexports.Éµdid = directiveDef;\nexports.Éµeld = elementDef;\nexports.ÉµelementEventFullName = elementEventFullName;\nexports.ÉµgetComponentViewDefinitionFactory = getComponentViewDefinitionFactory;\nexports.ÉµinlineInterpolate = inlineInterpolate;\nexports.Éµinterpolate = interpolate;\nexports.Éµmod = moduleDef;\nexports.Éµmpd = moduleProvideDef;\nexports.Éµncd = ngContentDef;\nexports.Éµnov = nodeValue;\nexports.Éµpid = pipeDef;\nexports.Éµprd = providerDef;\nexports.Éµpad = pureArrayDef;\nexports.Éµpod = pureObjectDef;\nexports.Éµppd = purePipeDef;\nexports.Éµqud = queryDef;\nexports.Éµted = textDef;\nexports.Éµunv = unwrapValue;\nexports.Éµvid = viewDef;\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n//# sourceMappingURL=core.umd.js.map\n"]}